(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{1151:function(v,_){const l={render:function(){var v=this;v.$createElement;return v._self._c,v._m(0)},staticRenderFns:[function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("div",{staticClass:"frontmatter-markdown"},[l("h2",{attrs:{id:"前言"}},[v._v("前言")]),v._v(" "),l("p",[v._v("本文是观看"),l("a",{attrs:{href:"https://www.bilibili.com/video/BV1NJ411D7rf"}},[v._v("此视频")]),v._v("时整理的笔记")]),v._v(" "),l("h2",{attrs:{id:"一些概念"}},[v._v("一些概念")]),v._v(" "),l("ul",[l("li",[v._v("MetaMask - 浏览器插件钱包")]),v._v(" "),l("li",[v._v("Jaxx - 多平台、多币种的钱包")]),v._v(" "),l("li",[v._v("MyEtherWallet(MEW) - 基于 web 的钱包")]),v._v(" "),l("li",[l("code",{pre:!0},[v._v("https://etherscan.io")]),v._v("区块链浏览器，可以看到所有交易，以及以太币的当前价格")]),v._v(" "),l("li",[l("code",{pre:!0},[v._v("https://ethgasstation.info")]),v._v("查看 gas 相关信息")]),v._v(" "),l("li",[v._v("Remix - 基于浏览器的 Solidity 在线编辑器\n"),l("ul",[l("li",[l("code",{pre:!0},[v._v("remix.ethereum.org")])])])]),v._v(" "),l("li",[v._v("Geth - 以太坊客户端（基于 go 语言）\n"),l("ul",[l("li",[v._v("官方推荐，开发使用最多")])])]),v._v(" "),l("li",[v._v("Parity - 以太坊客户端（基于 Rust 语言）\n"),l("ul",[l("li",[v._v("最轻便，在历次以太坊网络攻击中表现卓越")])])]),v._v(" "),l("li",[v._v("web3.js - 以太坊 JavaScript API 库。使用 JSON-RPC 作为通信协议")]),v._v(" "),l("li",[v._v("Ganache - 以太坊客户端（创建测试环境私链）")]),v._v(" "),l("li",[v._v("Truffle - 以太坊开发框架")]),v._v(" "),l("li",[v._v("Solidity - 智能合约的编程语言\n"),l("ul",[l("li",[v._v("缩写是"),l("code",{pre:!0},[v._v("sol")])])])])]),v._v(" "),l("h2",{attrs:{id:"区块链公链简史"}},[v._v("区块链（公链）简史")]),v._v(" "),l("ul",[l("li",[v._v("比特币（区块链 1.0）\n"),l("ul",[l("li",[v._v("只是简单的记账")])])]),v._v(" "),l("li",[v._v("以太坊（区块链 2.0）\n"),l("ul",[l("li",[v._v("去中心化 APP")])])]),v._v(" "),l("li",[v._v("未来\n"),l("ul",[l("li",[v._v("思路：优化交易速度，提升吞吐量，开发者友好")]),v._v(" "),l("li",[v._v("候选者："),l("strong",[v._v("EOS")]),v._v("、IOTA、ArcBlock")])])])]),v._v(" "),l("h2",{attrs:{id:"以太坊概述"}},[v._v("以太坊概述")]),v._v(" "),l("h3",{attrs:{id:"定位"}},[v._v("定位")]),v._v(" "),l("ul",[l("li",[v._v("开源的、全球分布的计算基础设施")]),v._v(" "),l("li",[v._v("智能合约（smart contract）是在以太坊上执行的程序，合约可以自己发起交易\n"),l("ul",[l("li",[v._v("以太坊是图灵完备的，比特币不是")]),v._v(" "),l("li",[v._v("基于 gas limit 避免死循环")])])]),v._v(" "),l("li",[v._v("使用区块链技术进行状态同步和存储\n"),l("ul",[l("li",[v._v("比特币仅使用区块链保存交易信息")]),v._v(" "),l("li",[v._v("以太坊使用区块链保存交易信息和应用状态")])])]),v._v(" "),l("li",[v._v("使用名为以太币(ether)的加密货币作为计量和约束资源成本的货币")]),v._v(" "),l("li",[v._v("本质是基于交易的状态机(transaction-based state machine)")])]),v._v(" "),l("h3",{attrs:{id:"阶段"}},[v._v("阶段")]),v._v(" "),l("ul",[l("li",[v._v("前沿(Frontier)，区块高度 0\n"),l("ul",[l("li",[v._v("以太坊的初始阶段，持续时间为 2015 年 7 月 30 日-2016 年 3 月")]),v._v(" "),l("li",[v._v("功能不完善")])])]),v._v(" "),l("li",[v._v("家园(Homestead)，区块高度 1150000\n"),l("ul",[l("li",[v._v("开始可以创建去中心化 APP")])])]),v._v(" "),l("li",[v._v("大都会(Metropolis)，区块高度 4370000\n"),l("ul",[l("li",[v._v("2017 年 10 月推出的“拜占庭(Byzantium)”是大都会的第一阶段")]),v._v(" "),l("li",[v._v("“君士坦丁堡(Constantinople)”是大都会的第二部分")])])]),v._v(" "),l("li",[v._v("宁静(Serenity)\n"),l("ul",[l("li",[v._v("完善")])])])]),v._v(" "),l("p",[v._v("以太坊曾经被攻击过一次，为了弥补损失所以进行了一次分支。老的分支被称为“以太坊-经典(ETC)”，新的分支为以太坊(ETH)")]),v._v(" "),l("h3",{attrs:{id:"组成部分"}},[v._v("组成部分")]),v._v(" "),l("ul",[l("li",[v._v("P2P 网络\n"),l("ul",[l("li",[v._v("TCP 30303")])])]),v._v(" "),l("li",[v._v("交易\n"),l("ul",[l("li",[v._v("包括发送者(sender)，接收者(receiver)，值(value)，载荷(payload)")]),v._v(" "),l("li",[v._v("每个区块包含若干个交易")])])]),v._v(" "),l("li",[v._v("以太坊虚拟机(EVM)\n"),l("ul",[l("li",[v._v("一个执行字节码的程序，分布式执行智能合约")]),v._v(" "),l("li",[v._v("类似于 Java 的 JVM")]),v._v(" "),l("li",[v._v("EVM 无法访问网络、文件系统、其他进程")]),v._v(" "),l("li",[v._v("每个账户有一个持久化存储空间(storage)，是一个把 256 位映射到 256 位的 k/v 存储。永久保存合约状态。所以读写消耗的 gas 最大")])])]),v._v(" "),l("li",[v._v("数据库\n"),l("ul",[l("li",[v._v("以太坊的区块链需要使用数据库保存在每个节点上（通常是 Google 的 LevelDB，k/v 存储），包含交易信息和系统状态")])])]),v._v(" "),l("li",[v._v("客户端\n"),l("ul",[l("li",[v._v("比如 Go 语言的 Geth，或者 Parity")])])])]),v._v(" "),l("h3",{attrs:{id:"重要概念"}},[v._v("重要概念")]),v._v(" "),l("ul",[l("li",[v._v("账户(Account)\n"),l("ul",[l("li",[v._v("包含地址、余额、随机数，以及可选的存储和代码\n"),l("ul",[l("li",[v._v("外部账户/普通账户(EOA: Externally Owned Account)，没有存储和代码，可以转账或者触发合约代码")]),v._v(" "),l("li",[v._v("内部账户/合约/合约账户(Contract)，也就是智能合约，包含存储和代码。可以给合约转账，或者调用合约的函数\n"),l("ul",[l("li",[v._v("可以读写自己的内部存储，32 字节的 k/v 数据库")]),v._v(" "),l("li",[v._v("可以调用其他合约代码，依次执行")])])])])]),v._v(" "),l("li",[v._v("比特币只有地址的概念，没有账户的概念")])])]),v._v(" "),l("li",[v._v("地址(Address)\n"),l("ul",[l("li",[v._v("通常表示一个 EOA 或合约，在区块链上面发送/接受交易")]),v._v(" "),l("li",[v._v("底层是 ECDSA 公钥的 keccak hash 的最右边 160 位")])])]),v._v(" "),l("li",[v._v("交易(Transaction)\n"),l("ul",[l("li",[v._v("可以发送以太币和信息")]),v._v(" "),l("li",[v._v("向合约发送的交易可以调用合约代码，并以信息数据作为参数")]),v._v(" "),l("li",[v._v("向不存在的地址发送交易，以太会被销毁")]),v._v(" "),l("li",[v._v("向"),l("code",{pre:!0},[v._v("0x0")]),v._v("地址发送合约代码，可以创建合约")]),v._v(" "),l("li",[v._v("向"),l("code",{pre:!0},[v._v("0x0")]),v._v("地址发送币，币会被销毁")])])]),v._v(" "),l("li",[v._v("gas\n"),l("ul",[l("li",[v._v("以太坊用来执行交易/智能合约的虚拟燃料")]),v._v(" "),l("li",[v._v("普通的交易，消耗 21000 wei 的 gas")]),v._v(" "),l("li",[v._v("交易消耗的 gas 由 EVM 执行的操作决定")]),v._v(" "),l("li",[v._v("如果执行合约过程中，gas 耗尽，则触发 out-of-gas 异常，回滚状态")])])]),v._v(" "),l("li",[v._v("全节点\n"),l("ul",[l("li",[v._v("整个主链的副本，随时验证新区块的合法性")])])]),v._v(" "),l("li",[v._v("轻节点\n"),l("ul",[l("li",[v._v("不保存历史数据，仅保存当前状态，可以对区块和交易进行验证")])])])]),v._v(" "),l("h3",{attrs:{id:"以太币"}},[v._v("以太币")]),v._v(" "),l("ul",[l("li",[v._v("以太坊众筹的时候，发布了 7200 万以太币")]),v._v(" "),l("li",[v._v("挖矿开始之后，主要获取以太币的方式是挖矿\n"),l("ul",[l("li",[v._v("区块奖励(block reward)\n"),l("ul",[l("li",[v._v("每产生一个新的区块，矿工会获得固定的以太币（原来 5 个，拜占庭上线之后现在 3 个）")]),v._v(" "),l("li",[v._v("还会获得区块里面所有程序的 gas 花费的总和")])])]),v._v(" "),l("li",[v._v("叔块奖励(uncle reward)\n"),l("ul",[l("li",[v._v("挖出来的额外的块，没有放到主链，但是可以被后面的区块引用")]),v._v(" "),l("li",[v._v("被引用的叔块可以获得区块奖励的约 7/8（实际是：\\((叔块高度-引用叔块的区块高度+8)*普通区块奖励/8\\)）")])])]),v._v(" "),l("li",[v._v("叔块引用奖励(uncle referencing reward)\n"),l("ul",[l("li",[v._v("引用最多两个叔块，也可以获得奖励。是区块固定奖励的 1/32")])])])])]),v._v(" "),l("li",[v._v("每年不会发布超过 1800 万以太币")]),v._v(" "),l("li",[v._v("最小单位："),l("code",{pre:!0},[v._v("wei")]),v._v(" "),l("ul",[l("li",[l("code",{pre:!0},[v._v("1 ether = 10^18 wei")])])])])]),v._v(" "),l("h3",{attrs:{id:"幽灵协议"}},[v._v("幽灵协议")]),v._v(" "),l("ul",[l("li",[v._v("GHOST: Greedy Heaviest Observed SubTree")]),v._v(" "),l("li",[v._v("以太坊的出块时间大约为 14-15 秒，设计上是 12 秒")]),v._v(" "),l("li",[v._v("快速的确认会导致区块作废率比较高，所以安全性也会降低")]),v._v(" "),l("li",[v._v("所以使用叔块的方式，不丢弃作废的块，提升安全性")])]),v._v(" "),l("h3",{attrs:{id:"应用"}},[v._v("应用")]),v._v(" "),l("ul",[l("li",[v._v("创建加密货币\n"),l("ul",[l("li",[v._v("导致 2017 年各种 ICO 泛滥")])])]),v._v(" "),l("li",[v._v("创建域名注册系统、博彩系统")]),v._v(" "),l("li",[v._v("去中心化游戏")]),v._v(" "),l("li",[v._v("…")])]),v._v(" "),l("h3",{attrs:{id:"网络"}},[v._v("网络")]),v._v(" "),l("ul",[l("li",[v._v("Main Network (ID=1)\n"),l("ul",[l("li",[v._v("主网络")])])]),v._v(" "),l("li",[v._v("Ropsten Test Network (ID=3)\n"),l("ul",[l("li",[v._v("公共测试网络")]),v._v(" "),l("li",[v._v("使用工作量证明共识挖矿")])])]),v._v(" "),l("li",[v._v("Kovan Test Network (ID=42)\n"),l("ul",[l("li",[v._v("公共测试网络")]),v._v(" "),l("li",[v._v("使用 Aura 进行权威证明 POA 共识")]),v._v(" "),l("li",[v._v("仅由 Parity 支持")])])]),v._v(" "),l("li",[v._v("Rinkeby Test Network (ID=4)\n"),l("ul",[l("li",[v._v("公共测试网络")]),v._v(" "),l("li",[v._v("使用 Clique 协议进行权威证明 POA 共识")])])]),v._v(" "),l("li",[v._v("Localhost 8545\n"),l("ul",[l("li",[v._v("连接到本地节点所在的网络")])])]),v._v(" "),l("li",[v._v("Custom RPC\n"),l("ul",[l("li",[v._v("连接到任何兼容 geth 的 RPC 接口的节点")])])])])])}]};v.exports={attributes:{title:"基础概念",description:"以太坊概述与基础概念"},vue:{render:l.render,staticRenderFns:l.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(v){return this.templateRender?this.templateRender():v("div","Rendering")},created:function(){this.templateRender=l.render,this.$options.staticRenderFns=l.staticRenderFns}}}}}}]);