(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{1145:function(v,_){const e={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("div",{staticClass:"frontmatter-markdown"},[e("h2",{attrs:{id:"redis概述"}},[v._v("Redis概述")]),v._v(" "),e("ul",[e("li",[v._v("内存k-v数据库，使用C语言编写，非常快，但是断电后内存中数据丢失（可以通过持久化数据避免数据丢失）")]),v._v(" "),e("li",[v._v("通常用来做SQL数据库的缓存。也可以单独拿来做内存数据库，或者用来生成分布式唯一主键、实现分布式锁、队列等")]),v._v(" "),e("li",[v._v("主进程是单线程的，所有数据操作都不会被并行处理。在执行持久化等操作的时候才会fork出子进程")]),v._v(" "),e("li",[v._v("可以使用管道(pipe)实现简单的事务。也可以用来执行批量操作，提升操作速度")])]),v._v(" "),e("h2",{attrs:{id:"持久化方式"}},[v._v("持久化方式")]),v._v(" "),e("h3",{attrs:{id:"rdb"}},[v._v("RDB")]),v._v(" "),e("ul",[e("li",[v._v("默认位置：在启动redis服务端的目录中的"),e("code",{pre:!0},[v._v("dump.rdb")])]),v._v(" "),e("li",[v._v("使用二进制的形式保存内存中保存的数据")]),v._v(" "),e("li",[v._v("触发方式\n"),e("ul",[e("li",[v._v("手动触发\n"),e("ul",[e("li",[e("code",{pre:!0},[v._v("SAVE")]),v._v("使用主进程进行持久化，会block操作")]),v._v(" "),e("li",[e("code",{pre:!0},[v._v("BGSAVE")]),v._v("使用fork创建子进程进行持久化，主进程不受影响")])])]),v._v(" "),e("li",[e("strong",[v._v("在Redis中")]),v._v("执行"),e("code",{pre:!0},[v._v("SHUTDOWN")]),v._v("时，如果没有配置AOF，则会触发持久化")]),v._v(" "),e("li",[v._v("执行"),e("code",{pre:!0},[v._v("FLUSHALL")]),v._v("时会触发，把RDB文件清空")]),v._v(" "),e("li",[v._v("根据配置文件定时触发\n"),e("ul",[e("li",[v._v("默认值\n"),e("ul",[e("li",[e("code",{pre:!0},[v._v("save 900 1")]),v._v(" - 900秒内有1次写入时，保存")]),v._v(" "),e("li",[e("code",{pre:!0},[v._v("save 300 10")]),v._v(" - 300秒内有10次写入时，保存")]),v._v(" "),e("li",[e("code",{pre:!0},[v._v("save 60 10000")]),v._v(" - 60秒内有10000次写入时，保存")])])]),v._v(" "),e("li",[v._v("如果开了主从配置，通常会关闭主节点的定时保存功能")])])])])])]),v._v(" "),e("h3",{attrs:{id:"aof"}},[v._v("AOF")]),v._v(" "),e("p",[v._v("Append-Only File")]),v._v(" "),e("p",[v._v("有点类似于时序数据库或MySQL的binlog。AOF文件会把写操作以"),e("strong",[v._v("字符串")]),v._v("保存在文件中")]),v._v(" "),e("ul",[e("li",[v._v("触发机制：编辑配置文件\n"),e("ul",[e("li",[e("code",{pre:!0},[v._v("no")]),v._v(" - 由操作系统触发，无法保证数据的持久化")]),v._v(" "),e("li",[e("code",{pre:!0},[v._v("always")]),v._v(" - 记录每一个写操作")]),v._v(" "),e("li",[e("code",{pre:!0},[v._v("everysec")]),v._v(" - 每秒保存一次。默认值。"),e("strong",[v._v("推荐")])])])]),v._v(" "),e("li",[v._v("AOF重写：AOF文件过大时，合并AOF中的信息以减少AOF文件\n"),e("ul",[e("li",[v._v("如果使用的redis版本较新，AOF文件可能会使用混合存储模式，使用RDB格式保存部分数据以进一步减少AOF文件大小(4.0版本引入混合存储，5.0版本默认使用混合存储)")])])])]),v._v(" "),e("p",[v._v("使用默认配置的AOF，数据最多只会丢失2s，比RDB丢失的数据更少。")]),v._v(" "),e("h3",{attrs:{id:"数据恢复"}},[v._v("数据恢复")]),v._v(" "),e("p",[v._v("启动redis时，如果启动了AOF且目录下存在AOF文件则加载AOF文件。如果没有AOF文件且启动了RDB则加载RDB文件。如果都没有，则以空内容启动")]),v._v(" "),e("h2",{attrs:{id:"redis常见问题"}},[v._v("Redis常见问题")]),v._v(" "),e("h3",{attrs:{id:"缓存雪崩"}},[v._v("缓存雪崩")]),v._v(" "),e("p",[v._v("大量缓存数据在同一时间失效，导致大量查询请求同时直接打到数据库")]),v._v(" "),e("p",[v._v("解决方案：")]),v._v(" "),e("ul",[e("li",[v._v("使用随机TTL")]),v._v(" "),e("li",[v._v("不使用TTL")]),v._v(" "),e("li",[v._v("使用定时任务刷TTL")])]),v._v(" "),e("h3",{attrs:{id:"缓存穿透"}},[v._v("缓存穿透")]),v._v(" "),e("p",[v._v("使用不合法参数，使缓存必定miss，从而直接把压力施加到数据库。比如数据库里面的id都是大于0的，使用小于0的id在redis里面查询必定会导致缓存miss，从而直接在数据库查询")]),v._v(" "),e("p",[v._v("解决方案：")]),v._v(" "),e("ul",[e("li",[v._v("应用层参数验证、WAF")]),v._v(" "),e("li",[v._v("封锁恶意用户IP")]),v._v(" "),e("li",[v._v("使用布隆过滤器(Bloom Filter)")])]),v._v(" "),e("h3",{attrs:{id:"缓存击穿"}},[v._v("缓存击穿")]),v._v(" "),e("p",[v._v("热点数据过期，会有大量请求直接打到数据库。比如电商秒杀场景")]),v._v(" "),e("p",[v._v("解决方案：")]),v._v(" "),e("ul",[e("li",[v._v("不使用TTL")]),v._v(" "),e("li",[v._v("如果是单体应用，可以使用分布式锁\n"),e("ul",[e("li",[v._v("多个线程争夺一个互斥锁。拿到锁的线程负责访问数据库并更新到Redis，其他线程短暂sleep后重新访问Redis而不是数据库。这样就只会有一个请求打到数据库")])])])]),v._v(" "),e("h2",{attrs:{id:"参考"}},[v._v("参考")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://bilibili.com/video/BV1U54y1C7rm"}},[v._v("Redis中两种持久化机制RDB和AOF")])]),v._v(" "),e("li",[e("a",{attrs:{href:"https://bilibili.com/video/BV1f5411b7ux"}},[v._v("什么是Redis缓存雪崩、穿透、击穿")])])])])}]};v.exports={attributes:{title:"Redis相关知识点的总结",description:"RDB/AOF持久化、缓存雪崩、穿透、击穿",tags:["Redis"]},vue:{render:e.render,staticRenderFns:e.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(v){return this.templateRender?this.templateRender():v("div","Rendering")},created:function(){this.templateRender=e.render,this.$options.staticRenderFns=e.staticRenderFns}}}}}}]);