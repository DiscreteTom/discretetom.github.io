(window.webpackJsonp=window.webpackJsonp||[]).push([[49,489,490,491,492,493,494],{1199:function(v,_,t){const e={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("div",{staticClass:"frontmatter-markdown"},[e("h2",{attrs:{id:"storage-access"}},[v._v("Storage Access")]),v._v(" "),e("p",[v._v("数据库文件被分为固定长度的块blocks。块是数据库存储与数据传输的单位")]),v._v(" "),e("p",[v._v("DBMS会尽量减少数据传输时的块的数量(主存和外存之间)")]),v._v(" "),e("ul",[e("li",[v._v("buffer - 主存的一部分，保存一些磁盘块的拷贝")]),v._v(" "),e("li",[v._v("buffer manager - 管理buffer")])]),v._v(" "),e("h2",{attrs:{id:"buffer-manager"}},[v._v("buffer manager")]),v._v(" "),e("p",[v._v("如果访问的目标块不在buffer")]),v._v(" "),e("ol",[e("li",[v._v("manager在buffer申请空间或移出一些快，然后装入新的块")]),v._v(" "),e("li",[v._v("如果移出的块被更改则会写回磁盘")]),v._v(" "),e("li",[v._v("把buffer中块的地址返回给请求方")])]),v._v(" "),e("h2",{attrs:{id:"文件组织"}},[v._v("文件组织")]),v._v(" "),e("p",[v._v("数据库database是文件file的集合，文件是记录record的集合，记录是域field的集合")]),v._v(" "),e("p",[v._v("下文中文件也称为操作系统中的块block或页page")]),v._v(" "),e("h3",{attrs:{id:"定长记录"}},[v._v("定长记录")]),v._v(" "),e("p",[v._v("fixed-length record")]),v._v(" "),e("p",[v._v("长度为n的第i个记录起始位置为 $n*(i-1)$")]),v._v(" "),e("p",[v._v("优化：不允许跨块存储")]),v._v(" "),e("p",[v._v("删除第i个记录的策略：")]),v._v(" "),e("ul",[e("li",[v._v("把i后面所有的记录向前移动(compacting)")]),v._v(" "),e("li",[v._v("把第n个记录覆盖到第i个记录的位置(moving the last record)")]),v._v(" "),e("li",[v._v("使用free list连接所有空闲记录空间")])]),v._v(" "),e("p",[v._v("free list:")]),v._v(" "),e("p",[e("img",{attrs:{src:t(641),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"变长记录"}},[v._v("变长记录")]),v._v(" "),e("p",[v._v("variable-length record")]),v._v(" "),e("p",[v._v("存储方式：")]),v._v(" "),e("ul",[e("li",[v._v("使用不同的record type")]),v._v(" "),e("li",[v._v("同一个record type，此type允许变长域")]),v._v(" "),e("li",[v._v("支持重复域repeating fields的记录")])]),v._v(" "),e("p",[v._v("困难：难于添加与删除")]),v._v(" "),e("p",[v._v("使用"),e("strong",[v._v("分槽的页结构slotted page structure")])]),v._v(" "),e("p",[e("img",{attrs:{src:t(642),alt:""}})]),v._v(" "),e("p",[v._v("记录的信息有：")]),v._v(" "),e("ul",[e("li",[v._v("记录的数量number of record entries")]),v._v(" "),e("li",[v._v("当前页的空闲空间的结束位置end of free space in the block")]),v._v(" "),e("li",[v._v("每个记录的起始位置与大小location and size of each record")])]),v._v(" "),e("p",[v._v("页中添加记录时，左侧记录入口数组向右增长，右侧记录数据向左增长。删除记录时重排列右侧记录数据，保证右侧记录数据连续")]),v._v(" "),e("p",[v._v("记录可以在同一个页中改变位置（当然要刷新他们的入口")]),v._v(" "),e("p",[v._v("外界访问页中的记录时返回他们的入口而不是他们的地址（多一层以保证低耦合")]),v._v(" "),e("h2",{attrs:{id:"管理文件中的记录"}},[v._v("管理文件中的记录")]),v._v(" "),e("ul",[e("li",[v._v("堆heap - 记录可以放在文件的任何位置")]),v._v(" "),e("li",[v._v("顺序sequential - 顺序存储，使用search key二分查找")]),v._v(" "),e("li",[v._v("哈希hashing - 使用哈希函数定位记录")])]),v._v(" "),e("p",[v._v("通常每个关系（表）的记录用一个单独的文件存储。但是在"),e("strong",[v._v("多表聚簇文件组织multitable clustering file organization")]),v._v("中位于不同关系的记录可以存储在同一个文件中。一个IO操作可以从所有关系中取到相关的记录")]),v._v(" "),e("h3",{attrs:{id:"顺序文件组织"}},[v._v("顺序文件组织")]),v._v(" "),e("p",[v._v("适用于顺序处理整个文件的场合")]),v._v(" "),e("p",[v._v("删除使用空闲链表")]),v._v(" "),e("p",[v._v("插入，定位插入目标位置：")]),v._v(" "),e("ul",[e("li",[v._v("如果是空闲空间则直接插入")]),v._v(" "),e("li",[v._v("如果不空闲，则插入在超尾位置")])]),v._v(" "),e("p",[v._v("两种情况都要更新链表")]),v._v(" "),e("p",[e("img",{attrs:{src:t(643),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"多表聚簇文件组织"}},[v._v("多表聚簇文件组织")]),v._v(" "),e("p",[v._v("不同表的数据存在同一个页中")]),v._v(" "),e("p",[e("img",{attrs:{src:t(644),alt:""}})]),v._v(" "),e("p",[v._v("可以看到属于Comp.Sci的数据被放在了一起，属于Physics的数据被放在了一起。简化了存储")]),v._v(" "),e("ul",[e("li",[v._v("使用一次块的读操作就可以实现连接查询，加速了特定的连接的处理")]),v._v(" "),e("li",[v._v("查询单个表的操作可能会比较麻烦")])]),v._v(" "),e("p",[v._v("可以使用链表以提高查询效率")]),v._v(" "),e("p",[e("img",{attrs:{src:t(645),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"数据字典存储"}},[v._v("数据字典存储")]),v._v(" "),e("p",[v._v("data dictionary storage")]),v._v(" "),e("p",[v._v("数据字典data dict也叫系统目录system catalog，存储元数据metadata，包括：")]),v._v(" "),e("ul",[e("li",[v._v("关系的信息\n"),e("ul",[e("li",[v._v("关系名")]),v._v(" "),e("li",[v._v("每个属性的数据类型")]),v._v(" "),e("li",[v._v("视图的定义")]),v._v(" "),e("li",[v._v("完整性约束")])])]),v._v(" "),e("li",[v._v("用户账户信息，密码")]),v._v(" "),e("li",[v._v("统计数据与描述性数据")]),v._v(" "),e("li",[v._v("物理存储信息\n"),e("ul",[e("li",[v._v("存储类型，哈希？顺序？")]),v._v(" "),e("li",[v._v("物理位置，磁盘？文件位置？")])])]),v._v(" "),e("li",[v._v("索引信息")])]),v._v(" "),e("p",[v._v("数据字典的存储方式可以是：")]),v._v(" "),e("ul",[e("li",[v._v("自定义文件类型")]),v._v(" "),e("li",[v._v("内置关系（常用）")])]),v._v(" "),e("p",[e("img",{attrs:{src:t(646),alt:""}})])])}]};v.exports={attributes:{layout:"collection",title:"Storage and File Structure",collection:"DatabaseConcept"},vue:{render:e.render,staticRenderFns:e.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(v){return this.templateRender?this.templateRender():v("div","Rendering")},created:function(){this.templateRender=e.render,this.$options.staticRenderFns=e.staticRenderFns}}}}},641:function(v,_,t){v.exports=t.p+"img/9bcab8f.png"},642:function(v,_,t){v.exports=t.p+"img/9cb6e90.png"},643:function(v,_,t){v.exports=t.p+"img/2333a89.png"},644:function(v,_,t){v.exports=t.p+"img/fc8be55.png"},645:function(v,_,t){v.exports=t.p+"img/f262a93.png"},646:function(v,_,t){v.exports=t.p+"img/9423b54.png"}}]);