(window.webpackJsonp=window.webpackJsonp||[]).push([[66,647,648,649,650],{1231:function(_,v,e){const r={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var _=this,v=_.$createElement,r=_._self._c||v;return r("div",{staticClass:"frontmatter-markdown"},[r("h2",{attrs:{id:"文件命名相关"}},[_._v("文件命名相关")]),_._v(" "),r("ul",[r("li",[_._v("长度限制 - 通常1-255")]),_._v(" "),r("li",[_._v("合法字符 - 除了"),r("code",{pre:!0},[_._v("/")]),_._v("其他都是合法字符，不可打印字符也可以作为文件名除了"),r("code",{pre:!0},[_._v("\\0")])]),_._v(" "),r("li",[_._v("区分大小写 - linux区分，windows不区分，所以可能两个文件从linux复制到windows变成一个文件")])]),_._v(" "),r("h2",{attrs:{id:"系统目录"}},[_._v("系统目录")]),_._v(" "),r("h3",{attrs:{id:"系统配置文件"}},[_._v("系统配置文件")]),_._v(" "),r("p",[_._v("在"),r("code",{pre:!0},[_._v("/etc")]),_._v("目录下，类似于windows的注册表文件。内容为文本")]),_._v(" "),r("p",[_._v("在"),r("code",{pre:!0},[_._v("profile/bash.bashrc")]),_._v("可以设置系统级的bash偏好设置")]),_._v(" "),r("h3",{attrs:{id:"其他目录"}},[_._v("其他目录")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/tmp")]),_._v("存放临时文件。任何用户都有权限在这里创建文件，但是只能删除自己的文件")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/var")]),_._v("存放系统运行时要改变的数据，比如系统日志")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/bin")]),_._v("存放系统命令（程序），如ls/cat之类的")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/usr/bin")]),_._v("存放一些常用命令。其中"),r("code",{pre:!0},[_._v("usr")]),_._v("的意思是"),r("code",{pre:!0},[_._v("Unix System Resource")])]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/sbin")]),_._v(" & "),r("code",{pre:!0},[_._v("/usr/sbin")]),_._v("存放管理员专用命令")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/dev")]),_._v("存放设备文件")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/usr/include")]),_._v("存放C语言头文件")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/lib")]),_._v(" & "),r("code",{pre:!0},[_._v("/usr/lib")]),_._v("存放各种库文件，如C语言的链接库")]),_._v(" "),r("blockquote",[r("p",[_._v("静态链接库的文件为"),r("code",{pre:!0},[_._v(".a")]),_._v("后缀，意为"),r("code",{pre:!0},[_._v("archive")]),_._v("存档。动态链接库文件后缀为"),r("code",{pre:!0},[_._v(".so")]),_._v("，意为"),r("code",{pre:!0},[_._v("shared objects")]),_._v("。linux广泛使用动态链接库")])]),_._v(" "),r("h2",{attrs:{id:"文件通配符"}},[_._v("文件通配符")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("*")]),_._v("匹配任意长度的文件名字符串（包括空串")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("?")]),_._v("匹配任意单个字符")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("[]")]),_._v("匹配括号内的任一字符，可以使用"),r("code",{pre:!0},[_._v("-")]),_._v("指定范围，如"),r("code",{pre:!0},[_._v("[A-Z]")]),_._v("、"),r("code",{pre:!0},[_._v("[Mm]akefile")])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("~")]),_._v("波浪线是bash特有的，"),r("code",{pre:!0},[_._v("~")]),_._v("表示当前用户主目录，"),r("code",{pre:!0},[_._v("~name")]),_._v("表示用户name的主目录")])]),_._v(" "),r("p",[_._v("特殊规则：")]),_._v(" "),r("ul",[r("li",[_._v("点字符"),r("code",{pre:!0},[_._v(".")]),_._v("作为文件名或路径的"),r("strong",[_._v("第一个字符")]),_._v("时必须"),r("strong",[_._v("显式匹配")]),_._v(" "),r("ul",[r("li",[_._v("例："),r("code",{pre:!0},[_._v("*file")]),_._v("匹配"),r("code",{pre:!0},[_._v("file")]),_._v(" & "),r("code",{pre:!0},[_._v("makefile")]),_._v("，但是不匹配"),r("code",{pre:!0},[_._v(".profile")]),_._v("。"),r("code",{pre:!0},[_._v("try*c")]),_._v("匹配"),r("code",{pre:!0},[_._v("try1.c")]),_._v(" & "),r("code",{pre:!0},[_._v("try.basic")])])])]),_._v(" "),r("li",[_._v("斜线"),r("code",{pre:!0},[_._v("/")]),_._v("也必须"),r("strong",[_._v("显式匹配")]),_._v(" "),r("ul",[r("li",[_._v("例："),r("code",{pre:!0},[_._v("*/*")]),_._v("匹配一级目录下所有文件")])])])]),_._v(" "),r("p",[r("code",{pre:!0},[_._v(".")]),_._v("文件与"),r("code",{pre:!0},[_._v("..")]),_._v("文件分别表示当前目录与上级目录。把"),r("code",{pre:!0},[_._v(".")]),_._v("解释为当前目录"),r("strong",[_._v("并不是通配符处理程序完成的")]),_._v("，而是目录的存储结构里面就有这两个文件")]),_._v(" "),r("p",[_._v("windows和linux文件通配符有差异。比如windows中"),r("code",{pre:!0},[_._v("*.*")]),_._v("匹配所有文件，而linux就要求文件名必须有"),r("code",{pre:!0},[_._v(".")]),_._v("才能匹配")]),_._v(" "),r("p",[_._v("文件通配符适用于所有命令，因为匹配的过程对命令是透明的")]),_._v(" "),r("p",[_._v("通配符可以用来简化命令的输入，比如可以使用"),r("code",{pre:!0},[_._v("*")]),_._v("代替长文件名中的一些部分，例：使用"),r("code",{pre:!0},[_._v("*sna*")]),_._v("匹配"),r("code",{pre:!0},[_._v("configure-IBM-sna-network.d")])]),_._v(" "),r("p",[_._v("unix下由shell完成对文件通配符的展开，windows下由命令自身处理通配符（即把通配符作为普通字符串传入程序")]),_._v(" "),r("h2",{attrs:{id:"文件操作"}},[_._v("文件操作")]),_._v(" "),r("h3",{attrs:{id:"ls"}},[_._v("ls")]),_._v(" "),r("ul",[r("li",[_._v("没有实参时列出当前目录下所有文件和目录（实参指非命令行选项的参数")]),_._v(" "),r("li",[_._v("实参为文件时输出那个文件的相关信息（正常情况仅输出文件名，如果有其他命令行选项则可能输出其他信息")]),_._v(" "),r("li",[_._v("实参为目录时列出目录下的所有文件和目录")])]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("ls")]),_._v("命令有几十个选项，控制输出的信息与格式")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("ls -F")]),_._v(" - Flag，输出文件名和类型。现在的shell通常以颜色区分文件类型，在写脚本的时候可以用到此选项\n"),r("ul",[r("li",[_._v("如果是普通文件，输出文件名")]),_._v(" "),r("li",[_._v("如果是目录，输出"),r("code",{pre:!0},[_._v("filename/")])]),_._v(" "),r("li",[_._v("如果是可执行文件，输出"),r("code",{pre:!0},[_._v("filename*")])]),_._v(" "),r("li",[_._v("如果是符号链接文件，输出"),r("code",{pre:!0},[_._v("filename@")])])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -l")]),_._v(" - 长格式输出。如"),r("code",{pre:!0},[_._v("-rwxr-x--x 1 user1 group1 519 Jul 5 15:02 arg")]),_._v(" "),r("ul",[r("li",[_._v("首字符为文件类型\n"),r("ul",[r("li",[r("code",{pre:!0},[_._v("-")]),_._v(" - 普通文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("b")]),_._v(" - 块设备文件block")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("d")]),_._v(" - 目录文件dir")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("c")]),_._v(" - 字符设备文件char")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("l")]),_._v(" - 符号链接文件link")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("p")]),_._v(" - 管道文件pipe")])])]),_._v(" "),r("li",[_._v("第2-4、5-7、8-10字符为文件访问权限(rwx表示读、写、执行，"),r("code",{pre:!0},[_._v("-")]),_._v("表示不允许)\n"),r("ul",[r("li",[_._v("2-4为文件主人的权限")]),_._v(" "),r("li",[_._v("5-7为同组用户权限")]),_._v(" "),r("li",[_._v("8-10位其他用户权限")])])]),_._v(" "),r("li",[_._v("第二列表示文件link数量，后面会讲到")]),_._v(" "),r("li",[_._v("第三列为用户名，第四列为组名")]),_._v(" "),r("li",[_._v("第五列为大小\n"),r("ul",[r("li",[_._v("普通文件 - 字节数")]),_._v(" "),r("li",[_._v("目录 - 列出"),r("strong",[_._v("目录表的大小")]),_._v("而不是目录下的文件长度之和")]),_._v(" "),r("li",[_._v("符号链接文件 - 列出符号链接文件"),r("strong",[_._v("自身")]),_._v("的长度")]),_._v(" "),r("li",[_._v("字符设备和块设备文件 - 列出主设备号和次设备号")]),_._v(" "),r("li",[_._v("管道文件 - 列出管道内数据长度")])])]),_._v(" "),r("li",[_._v("第六列到倒数第二列为文件最后一次被修改的日期时间")]),_._v(" "),r("li",[_._v("最后一列为文件名")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -h")]),_._v(" - human-readable，使用便于人类阅读的方式输出（比如不按照字节输出，而是按照K/M/G为单位输出）。很多其他命令也有类似选项")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -d")]),_._v(" - directory，显示目录自身的信息")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -a")]),_._v(" - all，显示文件名以"),r("code",{pre:!0},[_._v(".")]),_._v("开头的文件和其他文件（默认以"),r("code",{pre:!0},[_._v(".")]),_._v("开头的文件是不显示的")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -A")]),_._v(" - 和"),r("code",{pre:!0},[_._v("ls -a")]),_._v("类似。但是不输出"),r("code",{pre:!0},[_._v(".")]),_._v(" & "),r("code",{pre:!0},[_._v("..")])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -s")]),_._v(" - size，显示文件占用磁盘空间")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("ls -i")]),_._v(" - i-node，显示文件的i节点号")])]),_._v(" "),r("p",[_._v("实例："),r("code",{pre:!0},[_._v("ls")]),_._v(" & "),r("code",{pre:!0},[_._v("ls *")]),_._v("的效果分别是？"),r("code",{pre:!0},[_._v("ls")]),_._v("仅输出当前目录所有文件和目录名。而"),r("code",{pre:!0},[_._v("ls *")]),_._v("先被shell处理文件通配符，即把所有文件名和目录名传给了"),r("code",{pre:!0},[_._v("ls")]),_._v("，所以会输出所有当前目录下的文件和一级子目录下的文件")]),_._v(" "),r("p",[_._v("管道文件：程序输入到此文件，另一个程序从此文件读出。不产生实际的文件")]),_._v(" "),r("p",[_._v("符号链接文件 - 相当于windows快捷方式")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("/dev")]),_._v("下的文件几乎都是"),r("code",{pre:!0},[_._v("b")]),_._v("或"),r("code",{pre:!0},[_._v("c")]),_._v("类型的文件")]),_._v(" "),r("p",[_._v("参数可以简写，如"),r("code",{pre:!0},[_._v("ls -l -h")]),_._v("可写为"),r("code",{pre:!0},[_._v("ls -lh")])]),_._v(" "),r("h3",{attrs:{id:"cp"}},[_._v("cp")]),_._v(" "),r("p",[_._v("两种格式：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("cp f1 f2")]),_._v(" "),r("ul",[r("li",[_._v("把f1拷贝到f2。如果f2不存在则创建。如果存在且为文件则覆盖。如果存在且为目录，则按照格式2处理")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("cp f1 f2 ... fn dir")]),_._v(" "),r("ul",[r("li",[_._v("把文件按照原名拷贝到目标目录下。要求目标目录"),r("code",{pre:!0},[_._v("dir")]),_._v("已存在而且是目录")])])])]),_._v(" "),r("p",[_._v("举例：假设目录dir1下有1.c和2.c两个文件，则命令"),r("code",{pre:!0},[_._v("cp dir1/*.c")]),_._v("会被shell解释为"),r("code",{pre:!0},[_._v("cp dir1/1.c dir1/2.c")]),_._v("，结果为2.c的内容被1.c覆盖。如果是windows下，执行结果为把两个文件拷贝到当前目录。如果在linux下也想拷贝到当前目录，应该写"),r("code",{pre:!0},[_._v("cp dir1/*.c .")]),_._v("使用"),r("code",{pre:!0},[_._v(".")]),_._v("指定当前目录")]),_._v(" "),r("p",[_._v("参数：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("-u")]),_._v(" - update增量拷贝，便于备份目录。根据文件的时间戳，拷贝被更新的文件。如果dir1和dir2位置颠倒则会出现灾难性后果。不如用版本管理系统")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("-r")]),_._v(" - 递归拷贝文件树")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("-v")]),_._v(" - 显示进度")])]),_._v(" "),r("h3",{attrs:{id:"mv"}},[_._v("mv")]),_._v(" "),r("p",[_._v("移动文件，可以用来给文件改名")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("mv f1 f2")]),_._v(" "),r("ul",[r("li",[_._v("把文件f1移动到f2（把文件f1改名为f2")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("mv f1 f2 ... fn dir")]),_._v(" "),r("ul",[r("li",[_._v("把文件f1-fn移动到dir里面")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("mv dir1 dir2")]),_._v(" "),r("ul",[r("li",[_._v("同文件系统 - 把dir1移动到dir2（重命名")]),_._v(" "),r("li",[_._v("不同文件系统 - 拷贝目录dir1到dir2然后删除dir1")])])])]),_._v(" "),r("h3",{attrs:{id:"rm"}},[_._v("rm")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("rm f1 f2 ... fn")])]),_._v(" "),r("p",[_._v("选项：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("rm -r")]),_._v(" - 递归删除目录树recursive")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("rm -i")]),_._v(" - 删除文件之前需要操作者确认inform。可以用来删除文件名不易打出来的文件（比如不可见字符")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("rm -f")]),_._v(" - 强制删除force。只读文件也可以删除而且没有提示")])]),_._v(" "),r("p",[_._v("正在运行的可执行程序文件不能被删除")]),_._v(" "),r("h3",{attrs:{id:"touch"}},[_._v("touch")]),_._v(" "),r("p",[_._v("把文件的最后一次修改时间改为当前时间。如果文件不存在则创建文件")]),_._v(" "),r("h2",{attrs:{id:"显式区分命令选项和处理对象"}},[_._v("显式区分命令选项和处理对象")]),_._v(" "),r("p",[_._v("文件名除了"),r("code",{pre:!0},[_._v("/")]),_._v("其他都可以包含，那如果文件名长得和命令行选项一样呢？比如文件名为"),r("code",{pre:!0},[_._v("-i")])]),_._v(" "),r("p",[_._v("假设目录下存在文件"),r("code",{pre:!0},[_._v("a.c")]),_._v(" & "),r("code",{pre:!0},[_._v("b.c")]),_._v(" & "),r("code",{pre:!0},[_._v("-i")]),_._v("，那么命令"),r("code",{pre:!0},[_._v("rm *")]),_._v("会被翻译为"),r("code",{pre:!0},[_._v("rm -i a.c b.c")]),_._v("导致错误出现")]),_._v(" "),r("p",[_._v("解决方案："),r("code",{pre:!0},[_._v("rm -- -i")]),_._v(" - "),r("code",{pre:!0},[_._v("--")]),_._v("表示后面的"),r("code",{pre:!0},[_._v("-")]),_._v("都是文件名的一部分而非命令行选项")]),_._v(" "),r("h2",{attrs:{id:"目录管理"}},[_._v("目录管理")]),_._v(" "),r("h3",{attrs:{id:"路径"}},[_._v("路径")]),_._v(" "),r("p",[_._v("目录表中确实有"),r("code",{pre:!0},[_._v(".")]),_._v("和"),r("code",{pre:!0},[_._v("..")]),_._v("这两个文件，由系统进行创建和删除")]),_._v(" "),r("p",[_._v("每个用户都有自己的主目录home directory。可以使用命令env查看环境变量中HOME的值")]),_._v(" "),r("p",[_._v("如果路径第一个字符是"),r("code",{pre:!0},[_._v("/")]),_._v("则为绝对路径（"),r("code",{pre:!0},[_._v("/")]),_._v("表示根目录），否则为相对路径。注意是斜线"),r("code",{pre:!0},[_._v("/")]),_._v("而不是反斜线"),r("code",{pre:!0},[_._v("\\")])]),_._v(" "),r("h3",{attrs:{id:"常用命令"}},[_._v("常用命令")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("pwd")]),_._v(" - print working directory显示当前目录")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("cd")]),_._v(" - change directory改变当前工作目录\n"),r("ul",[r("li",[_._v("cd是shell的一个内部命令，"),r("strong",[_._v("不是一个可执行文件")]),_._v("，修改的是"),r("strong",[_._v("当前进程")]),_._v("（bash）的属性。其他命令都是shell的子进程，不能修改shell的属性")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("mkdir")]),_._v(" - 创建目录。系统会自动创建目录中的"),r("code",{pre:!0},[_._v(".")]),_._v(" & "),r("code",{pre:!0},[_._v("..")]),_._v("文件\n"),r("ul",[r("li",[_._v("选项"),r("code",{pre:!0},[_._v("-p")]),_._v("自动创建路径中不存在的目录")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("rmdir")]),_._v(" - 删除目录，只能删除空的目录。通常被"),r("code",{pre:!0},[_._v("rm -r")]),_._v("取代，因为后者可以删除非空目录")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("find")]),_._v(" - 从"),r("strong",[_._v("指定的查找范围")]),_._v("开始，遍历目录树（递归，深度优先）。满足条件的文件或目录可以"),r("strong",[_._v("执行规定的动作")]),_._v(" "),r("ul",[r("li",[_._v("如："),r("code",{pre:!0},[_._v("find dir1 dir2 -name '*.c' -print")]),_._v("表示在dir1 & dir2中查询以"),r("code",{pre:!0},[_._v(".c")]),_._v("后缀结尾的文件并执行动作print")]),_._v(" "),r("li",[_._v("动作可以使用"),r("code",{pre:!0},[_._v("-exec")]),_._v("来指定任意指令")]),_._v(" "),r("li",[_._v("选项"),r("code",{pre:!0},[_._v("-ok")]),_._v("需要操作员确认每个文件是否执行指令")]),_._v(" "),r("li",[_._v("find指令的命令行选项很多，自行查找")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("tar")]),_._v(" - 文件归档Tape ARchive。语法"),r("code",{pre:!0},[_._v("tar ctxv[f device] file-list")]),_._v(" "),r("ul",[r("li",[_._v("选项第一列表示执行的操作\n"),r("ul",[r("li",[r("code",{pre:!0},[_._v("c")]),_._v("表示create创建文件从头开始写，覆盖之前内容")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("t")]),_._v("表示table。列出磁带上的文件名。不指定时输出所有文件名")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("x")]),_._v("表示extract抽取，表示从磁带中提取指定的文件。不指定文件时提取所欲文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("v")]),_._v("表示verbose冗长，每处理一个文件就打印文件的文件名，并在前面输出功能字母")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("f")]),_._v("表示file，指定设备文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("z")]),_._v("表示使用gzip压缩算法")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("j")]),_._v("表示使用bzip2压缩算法")])])])])])]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("~")]),_._v("表示用户子目录。可以使用"),r("code",{pre:!0},[_._v("~username")]),_._v("指定用户")]),_._v(" "),r("p",[_._v("shell中的分号默认是用来分隔指令的。在find中使用时需要"),r("code",{pre:!0},[_._v("\\")]),_._v("转义")]),_._v(" "),r("p",[_._v("gcc")]),_._v(" "),r("ul",[r("li",[_._v("-O0禁用优化")]),_._v(" "),r("li",[_._v("-Wall 启用所有警告(warning all)")])]),_._v(" "),r("h2",{attrs:{id:"命令如何获取信息"}},[_._v("命令如何获取信息")]),_._v(" "),r("p",[_._v("易变性从小到大为：")]),_._v(" "),r("ul",[r("li",[_._v("配置文件")]),_._v(" "),r("li",[_._v("环境变量")]),_._v(" "),r("li",[_._v("命令行参数")]),_._v(" "),r("li",[_._v("交互式键盘输入")])]),_._v(" "),r("p",[_._v("环境变量可以使用库函数获取，如C中的getenv")]),_._v(" "),r("h3",{attrs:{id:"命令行参数的风格"}},[_._v("命令行参数的风格")]),_._v(" "),r("p",[_._v("通常三种风格：")]),_._v(" "),r("ul",[r("li",[_._v("使用"),r("code",{pre:!0},[_._v("param=value")]),_._v("表示参数（不建议")]),_._v(" "),r("li",[_._v("使用"),r("code",{pre:!0},[_._v("-param")]),_._v("表示，减号后面可以接一个长单词")]),_._v(" "),r("li",[_._v("有长选项和短选项之分，使用"),r("code",{pre:!0},[_._v("-")]),_._v("激活短选项，使用"),r("code",{pre:!0},[_._v("--")]),_._v("激活长选项。短选项通常只有一个字母，是长选项的缩写。如果短选项含有多个字母就表示是多个命令行选项（建议使用")])]),_._v(" "),r("p",[_._v("可以使用库函数获取，如C中的getopt_long")]),_._v(" "),r("h2",{attrs:{id:"文件系统"}},[_._v("文件系统")]),_._v(" "),r("h3",{attrs:{id:"概述"}},[_._v("概述")]),_._v(" "),r("p",[_._v("根文件系统root filesystem（类似于windows C盘")]),_._v(" "),r("p",[_._v("linux不分逻辑盘，"),r("strong",[_._v("把不同文件系统作为子目录")])]),_._v(" "),r("h3",{attrs:{id:"常用指令"}},[_._v("常用指令")]),_._v(" "),r("ul",[r("li",[_._v("创建文件系统指令"),r("code",{pre:!0},[_._v("mkfs")]),_._v("，如"),r("code",{pre:!0},[_._v("mkfs /dev/sdb")]),_._v("在块设备文件"),r("code",{pre:!0},[_._v("/dev/sdb")]),_._v("上创建文件系统")]),_._v(" "),r("li",[_._v("安装文件系统"),r("code",{pre:!0},[_._v("mount")]),_._v("，如"),r("code",{pre:!0},[_._v("mount /dev/sdb /mnt")]),_._v("即把文件系统安装到目录"),r("code",{pre:!0},[_._v("/mnt")]),_._v("上。操作目录"),r("code",{pre:!0},[_._v("/mnt")]),_._v("就是对文件系统的访问\n"),r("ul",[r("li",[_._v("不加参数的"),r("code",{pre:!0},[_._v("mount")]),_._v("显示当前已安装的所有文件系统")])])]),_._v(" "),r("li",[_._v("卸载文件系统"),r("code",{pre:!0},[_._v("umount fs-name")]),_._v(" "),r("ul",[r("li",[_._v("根文件系统无法被卸载")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("df")]),_._v("显示文件系统信息（如剩余空间\n"),r("ul",[r("li",[_._v("选项"),r("code",{pre:!0},[_._v("-h")]),_._v("表示human-readable")]),_._v(" "),r("li",[_._v("选项"),r("code",{pre:!0},[_._v("-i")]),_._v("显示i节点信息")])])])]),_._v(" "),r("h3",{attrs:{id:"文件系统存储结构"}},[_._v("文件系统存储结构")]),_._v(" "),r("p",[_._v("逻辑设备按照**块（扇区）**为单位进行划分，从0开始编号。每块512字节或更大的$2^n$字节")]),_._v(" "),r("p",[r("img",{attrs:{src:e(797),alt:""}})]),_._v(" "),r("ul",[r("li",[_._v("引导块（0号）\n"),r("ul",[r("li",[_._v("用来启动系统。只有根文件系统的引导块有效")])])]),_._v(" "),r("li",[_._v("专用块（1号）\n"),r("ul",[r("li",[_._v("也叫管理块、超级块，用来存放文件系统的配置信息（文件系统大小、i节点区的大小、空闲空间大小、空闲块链表头等")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("mkfs")]),_._v("的时候初始化专用块，"),r("code",{pre:!0},[_._v("df")]),_._v("命令可以读出部分信息")])])]),_._v(" "),r("li",[_._v("i节点区（i节点，index node\n"),r("ul",[r("li",[_._v("在"),r("code",{pre:!0},[_._v("mkfs")]),_._v("的时候初始化")]),_._v(" "),r("li",[_._v("由若干块组成，每个块可以容纳若干个i节点，i节点大小固定（比如64B")]),_._v(" "),r("li",[_._v("i节点从0开始编号，根据编号可以索引到指定的磁盘块")]),_._v(" "),r("li",[_._v("每个文件对应一个i节点")]),_._v(" "),r("li",[_._v("i节点中的信息包括\n"),r("ul",[r("li",[_._v("指向文件存储区数据块的索引")]),_._v(" "),r("li",[_._v("文件类型、权限、link数、大小、时间戳等信息")]),_._v(" "),r("li",[r("strong",[_._v("i节点不存储文件名")]),_._v("（因为文件名长度易变，而i节点定长。文件名存储在目录文件中")])])])])]),_._v(" "),r("li",[_._v("文件存储区\n"),r("ul",[r("li",[_._v("存储文件和"),r("strong",[_._v("目录文件")])])])])]),_._v(" "),r("p",[_._v("目录表，即目录文件。目录文件的内容为"),r("strong",[_._v("文件名和i节点编号")]),_._v("。这样如果文件名过长，只要继续给目录文件分配块即可。"),r("strong",[_._v("不把文件名保存在i节点中是为了提高检索效率")]),_._v("（减少磁盘访问次数")]),_._v(" "),r("p",[r("img",{attrs:{src:e(798),alt:""}})]),_._v(" "),r("h3",{attrs:{id:"i节点与连接"}},[_._v("i节点与连接")]),_._v(" "),r("p",[_._v("使用命令"),r("code",{pre:!0},[_._v("stat")]),_._v("可以读取i节点的信息，如"),r("code",{pre:!0},[_._v("stat a.txt")])]),_._v(" "),r("p",[_._v("如果两个文件拥有相同的i节点号，那么这两个文件就指向一个i节点。这样的连接称为"),r("strong",[_._v("硬连接")]),_._v("（因为是在硬件存储结构的层级连接）可以跨目录，但是"),r("strong",[_._v("不能跨文件系统")])]),_._v(" "),r("p",[_._v("每个目录指定的 文件名-i节点号 映射关系称为一个硬连接。i节点的硬连接数目就是此i节点被引用的数量")]),_._v(" "),r("p",[_._v("可以使用指令"),r("code",{pre:!0},[_._v("ln")]),_._v("对文件进行连接，如"),r("code",{pre:!0},[_._v("ln f1 f2")]),_._v("可以链接两个文件，使用"),r("code",{pre:!0},[_._v("ls -i f1 f2")]),_._v("的时候会发现二者的i结点号是相同的。两个文件同时存在，地位平等，但是删除f1时f2仍然存在，只是i节点的link数量减1（i节点有引用计数器")]),_._v(" "),r("p",[_._v("硬连接只能连接普通文件。"),r("strong",[_._v("目录表不能被硬连接")])]),_._v(" "),r("p",[_._v("通常来说，目录表的硬连接数为直属子目录数+2（因为子目录的"),r("code",{pre:!0},[_._v("..")]),_._v("文件指向它，自己的"),r("code",{pre:!0},[_._v(".")]),_._v("文件指向它，父目录也有一个链接指向它")]),_._v(" "),r("p",[r("img",{attrs:{src:e(799),alt:""}})]),_._v(" "),r("p",[r("strong",[_._v("软连接")]),_._v("或"),r("strong",[_._v("符号连接")]),_._v("则是通过软件实现，更像是windows系统的快捷方式。使用"),r("strong",[_._v("符号连接文件")]),_._v("实现，文件中仅包含路径名。类型为"),r("code",{pre:!0},[_._v("l")]),_._v("，文件的最后一次写事件以后不再变化。符号连接删除的是符号连接文件，其他操作都将访问目标文件")]),_._v(" "),r("p",[r("img",{attrs:{src:e(800),alt:""}})]),_._v(" "),r("p",[r("strong",[_._v("符号连接中的相对路径是相对于符号连接文件的相对路径")])]),_._v(" "),r("p",[_._v("硬连接与软连接的比较：")]),_._v(" "),r("ul",[r("li",[_._v("硬连接\n"),r("ul",[r("li",[_._v("在数据结构、硬件层次实现")]),_._v(" "),r("li",[_._v("仅适用于文件，不适用于目录")]),_._v(" "),r("li",[_._v("不能跨文件系统")])])]),_._v(" "),r("li",[_._v("软连接\n"),r("ul",[r("li",[_._v("能够做到硬连接能够做到的所有事")]),_._v(" "),r("li",[_._v("软件实现")]),_._v(" "),r("li",[_._v("适用于目录，可以跨文件系统")]),_._v(" "),r("li",[_._v("调用时需要占用操作系统内核的一部分开销")])])])]),_._v(" "),r("h2",{attrs:{id:"系统调用"}},[_._v("系统调用")]),_._v(" "),r("h3",{attrs:{id:"概念"}},[_._v("概念")]),_._v(" "),r("p",[_._v("系统调用以C语言函数调用的方式提供。是应用程序与操作系统内核进行交互的"),r("strong",[_._v("唯一手段")])]),_._v(" "),r("p",[_._v("系统调用在汇编层面是软中断指令INT，而其他函数调用则是CALL指令。库函数只是对系统调用的效率更高或更方便的封装，同时实现可移植性")]),_._v(" "),r("h3",{attrs:{id:"错误处理"}},[_._v("错误处理")]),_._v(" "),r("p",[_._v("系统调用的返回值是一个整数。大于等于0表示成功，小于0表示失败。整型变量errno是标准库中的一个变量，在"),r("code",{pre:!0},[_._v("#include <errno.h>")]),_._v("之后可以直接使用此变量查询错误")]),_._v(" "),r("p",[_._v("库函数"),r("code",{pre:!0},[_._v("char * strerror(int errno)")]),_._v("可以把错误代码转换为字符串，printf函数也可以使用"),r("code",{pre:!0},[_._v("%m")]),_._v("表示message，即上一次的错误代码。如"),r("code",{pre:!0},[_._v('printf("ERROR %d: %m\\n", errno)')])]),_._v(" "),r("h3",{attrs:{id:"使用系统调用访问i节点与目录"}},[_._v("使用系统调用访问i节点与目录")]),_._v(" "),r("p",[_._v("库函数"),r("code",{pre:!0},[_._v("int stat(const char *pathname, struct stat *buf)")]),_._v(" & "),r("code",{pre:!0},[_._v("int fstat(int fd, struct stat *buf)")]),_._v("可以访问目标i节点，把返回值保存在buf中返回")]),_._v(" "),r("p",[_._v("结构体stat：")]),_._v(" "),r("pre",{staticClass:"language-c"},[r("code",{pre:!0,attrs:{class:"language-c"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("struct")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("stat")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  dev_t st_dev"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 存储该文件的块设备的设备号ID */")]),_._v("\n  ino_t st_ino"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* inode号*/")]),_._v("\n  mode_t st_mode"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 访问权限及文件类型*/")]),_._v("\n  nlink_t st_nlink"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* link数*/")]),_._v("\n  uid_t st_uid"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 文件主ID */")]),_._v("\n  gid_t st_gid"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 组ID */")]),_._v("\n  dev_t st_rdev"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* device ID (if special file) */")]),_._v("\n  off_t st_size"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 文件大小（字节数）*/")]),_._v("\n  blksize_t st_blksize"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* blocksizefor filesystemI/O */")]),_._v("\n  blkcnt_t st_blocks"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* 分配的512字节尺寸块个数*/")]),_._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("struct")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("timespec")]),_._v(" st_atim"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* access时间*/")]),_._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("struct")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("timespec")]),_._v(" st_mtim"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* modification时间*/")]),_._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("struct")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("timespec")]),_._v(" st_ctim"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),r("span",{pre:!0,attrs:{class:"token comment"}},[_._v("/* change时间*/")]),_._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),r("blockquote",[r("p",[_._v("为什么里面的变量都有"),r("code",{pre:!0},[_._v("st_")]),_._v("前缀？因为古早C语言的struct里面的变量可以被外界直接访问，为了防止命名冲突，所以在stat结构体里面的变量都使用st前缀表明这是stat里面的变量。现在不需要这么写")])]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("st_dev")]),_._v(" - "),r("strong",[_._v("设备号")]),_._v(" - 包括主设备号和次设备号。如使用stat命令显示某个文件的设备号为"),r("code",{pre:!0},[_._v("Device: 821h/2081d")]),_._v("，其中821为16进制（H后缀），高字节8H表示主设备号，低字节21H表示次设备号")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("st_mode")]),_._v(" - "),r("strong",[_._v("访问权限与文件类型")]),_._v(" - 16比特。潘丹判断文件类型可以使用"),r("code",{pre:!0},[_._v("st_mode & S_IFMT")]),_._v("，得到如下枚举量：\n"),r("ul",[r("li",[r("code",{pre:!0},[_._v("S_IFREG")]),_._v(" - 普通磁盘文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("S_IFDIR")]),_._v(" - 目录文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("S_IFCHA")]),_._v(" - 字符设备文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("S_IFIFO")]),_._v(" - 管道文件")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("S_IFLNK")]),_._v(" - 符号链接文件")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("st_size")]),_._v(" & "),r("code",{pre:!0},[_._v("st_blocks")]),_._v(" - 文件的大小（字节）和块数。\n"),r("ul",[r("li",[_._v("通常$st\\underline{}size \\le st\\underline{}blocks * 512$")]),_._v(" "),r("li",[_._v("稀疏文件$st\\underline{}size \\gt st\\underline{}blocks * 512$")])])]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("st_ctim")]),_._v(" & "),r("code",{pre:!0},[_._v("st_atim")]),_._v(" & "),r("code",{pre:!0},[_._v("st_mtim")]),_._v(" "),r("ul",[r("li",[_._v("精度为纳秒")]),_._v(" "),r("li",[_._v("a - 访问，包括读和执行（有些系统为了效率而懒惰处理a时间的更新，但是a时间不会早于m时间")]),_._v(" "),r("li",[_._v("m - 修改，是"),r("strong",[_._v("文件内容的修改")]),_._v("，即写文件内容")]),_._v(" "),r("li",[_._v("c - 改变，是"),r("strong",[_._v("i节点信息的修改")]),_._v("，包括修改权限、写文件（造成i节点时间相关信息改变）、修改link数。m改变时c也变")])])])]),_._v(" "),r("h3",{attrs:{id:"访问目录"}},[_._v("访问目录")]),_._v(" "),r("p",[_._v("早期unix像访问正常文件一样访问目录文件（甚至可以cat目录文件）。现在的系统不这么做了，系统调用也不能简单使用open打开read读取了")]),_._v(" "),r("p",[_._v("目录访问的库函数：")]),_._v(" "),r("pre",{staticClass:"language-c"},[r("code",{pre:!0,attrs:{class:"language-c"}},[r("span",{pre:!0,attrs:{class:"token macro property"}},[_._v("#"),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[_._v("include")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[_._v("<dirent.h>")])]),_._v("\nDIR "),r("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),r("span",{pre:!0,attrs:{class:"token function"}},[_._v("opendir")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("char")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),_._v("dirname"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("struct")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("dirent")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),r("span",{pre:!0,attrs:{class:"token function"}},[_._v("readdir")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("DIR "),r("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),_._v("dir"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("int")]),_._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[_._v("closedir")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("DIT "),r("span",{pre:!0,attrs:{class:"token operator"}},[_._v("*")]),_._v("dir"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),r("ul",[r("li",[_._v("使用opendir打开目录得到句柄（如果返回NULL则表示失败")]),_._v(" "),r("li",[_._v("使用readdir获取目录项\n"),r("ul",[r("li",[_._v("返回值指针指向dirent结构体。如果指向NULL则表示读完了")]),_._v(" "),r("li",[_._v("dirent结构体保存i节点d_ino和文件名d_name")])])]),_._v(" "),r("li",[_._v("使用closedir关闭不再使用的目录句柄")])]),_._v(" "),r("p",[_._v("有了这些系统调用就可以自己写目录访问工具了")]),_._v(" "),r("h2",{attrs:{id:"文件的权限"}},[_._v("文件的权限")]),_._v(" "),r("h3",{attrs:{id:"概述-2"}},[_._v("概述")]),_._v(" "),r("p",[_._v("权限 - 用于控制"),r("strong",[_._v("进程")]),_._v("对文件与目录的访问")]),_._v(" "),r("p",[_._v("权限的三个级别：")]),_._v(" "),r("ul",[r("li",[_._v("文件主（唯一")]),_._v(" "),r("li",[_._v("同组用户")]),_._v(" "),r("li",[_._v("其他用户")])]),_._v(" "),r("p",[_._v("普通文件的权限：可读、写、执行")]),_._v(" "),r("p",[r("strong",[_._v("不可写文件可以被删除")])]),_._v(" "),r("h3",{attrs:{id:"两类可执行文件"}},[_._v("两类可执行文件")]),_._v(" "),r("p",[_._v("程序文件（可执行文件） - 满足操作系统要求的格式的二进制文件")]),_._v(" "),r("p",[_._v("脚本文件（文本文件） - 默认的解释程序为"),r("code",{pre:!0},[_._v("/bin/sh")]),_._v("。可以在文件第一行自行指定解释程序（必须是第一行并以"),r("code",{pre:!0},[_._v("#!")]),_._v("开头")]),_._v(" "),r("p",[_._v("解释程序运行时是由解释程序创建了一个进程")]),_._v(" "),r("p",[_._v("解释程序可以是用户自己编写的程序")]),_._v(" "),r("h3",{attrs:{id:"目录权限"}},[_._v("目录权限")]),_._v(" "),r("ul",[r("li",[_._v("读®\n"),r("ul",[r("li",[_._v("如果没有读权限，则"),r("strong",[_._v("目录表文件")]),_._v("不许读，ls会失败")])])]),_._v(" "),r("li",[_._v("写(w)\n"),r("ul",[r("li",[_._v("如果没有写权限，则"),r("strong",[_._v("目录表文件")]),_._v("不许写")]),_._v(" "),r("li",[_._v("创建、删除文件和文件重命名会修改目录文件")]),_._v(" "),r("li",[_._v("修改文件不需要修改目录文件而是修改i节点")]),_._v(" "),r("li",[r("strong",[_._v("目录无写权限不表示目录下所有文件禁止写")])])])]),_._v(" "),r("li",[_._v("执行(x)\n"),r("ul",[r("li",[_._v("有执行权限意味着"),r("strong",[_._v("分析路径名")]),_._v("的过程中可以检索此目录")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("cat /a/b/c")]),_._v("需要"),r("code",{pre:!0},[_._v("/a")]),_._v(" & "),r("code",{pre:!0},[_._v("/a/b")]),_._v("目录有执行权限，"),r("code",{pre:!0},[_._v("c")]),_._v("文件有读权限")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("cd ../st8")]),_._v("要求当前目录、"),r("code",{pre:!0},[_._v("..")]),_._v("目录和"),r("code",{pre:!0},[_._v("st8")]),_._v("目录都有执行权限")])])])]),_._v(" "),r("h3",{attrs:{id:"sticky权限粘着位"}},[_._v("STICKY权限（粘着位")]),_._v(" "),r("ul",[r("li",[_._v("STICKY文件 - 早期Unix把具有sticky属性的文件尽量常驻内存以保证访问效率。现代计算机因为cache的存在而忽略文件的sticky属性")]),_._v(" "),r("li",[_._v("STICKY目录 - 如果用户拥有目录的写权限，则可以删除目录下的只读文件。sticky属性用于解决此问题，如果目录带有sticky属性，则即使用户拥有目录的写权限，也仅文件主可以删除文件")])]),_._v(" "),r("h3",{attrs:{id:"权限验证顺序"}},[_._v("权限验证顺序")]),_._v(" "),r("p",[_._v("每个文件都有文件主和组（在i节点中），每个进程也有进程主和组（在PCB中）。都是整数")]),_._v(" "),r("p",[_._v("顺序进行以下判断")]),_._v(" "),r("ul",[r("li",[_._v("文件主与进程主相同\n"),r("ul",[r("li",[_._v("使用文件主权限，不再向后查询权限")])])]),_._v(" "),r("li",[_._v("文件主与进程主不同，但是文件主与进程主同组\n"),r("ul",[r("li",[_._v("使用组权限，不再向后查询权限")])])]),_._v(" "),r("li",[_._v("文件主与进程主不同且不同组\n"),r("ul",[r("li",[_._v("使用其他用户权限")])])])]),_._v(" "),r("p",[_._v("超级用户root不受权限限制")]),_._v(" "),r("h3",{attrs:{id:"权限相关命令"}},[_._v("权限相关命令")]),_._v(" "),r("p",[_._v("使用"),r("code",{pre:!0},[_._v("ls -l")]),_._v("查看权限")]),_._v(" "),r("p",[r("code",{pre:!0},[_._v("chmod")]),_._v("修改权限，格式"),r("code",{pre:!0},[_._v("chmod [ugoa] [+-=] [rwxst] filenames")])]),_._v(" "),r("p",[_._v("用户类别：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("u")]),_._v(" - user")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("g")]),_._v(" - group")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("o")]),_._v(" - others")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("a")]),_._v(" - all")])]),_._v(" "),r("p",[_._v("权限类别：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("r")]),_._v(" - read")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("w")]),_._v(" - write")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("x")]),_._v(" - execute")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("t")]),_._v(" - sticky")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("s")]),_._v(" - SUID")])]),_._v(" "),r("p",[_._v("权限操作：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("+")]),_._v(" - 添加权限")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("-")]),_._v(" - 撤销权限")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("=")]),_._v(" - 权限赋值")])]),_._v(" "),r("p",[_._v("权限也可以使用三个8进制数字表示，如"),r("code",{pre:!0},[_._v("644")]),_._v("表示"),r("code",{pre:!0},[_._v("110 100 100")]),_._v("，其中1为允许，0为不允许")]),_._v(" "),r("p",[_._v("如："),r("code",{pre:!0},[_._v("chmod 644 filenames")])]),_._v(" "),r("p",[r("strong",[_._v("只有文件主和超级用户可以修改权限")])]),_._v(" "),r("p",[_._v("如果使用"),r("code",{pre:!0},[_._v("chmod 000 .")]),_._v("取消所有权限，则使用"),r("code",{pre:!0},[_._v("chmod 755 .")]),_._v("不能恢复权限，因为目录下的"),r("code",{pre:!0},[_._v(".")]),_._v("文件不能访问。可以使用绝对路径恢复")]),_._v(" "),r("h3",{attrs:{id:"umask"}},[_._v("umask")]),_._v(" "),r("p",[_._v("设置文件或目录的初始权限")]),_._v(" "),r("p",[_._v("是shell的命令，非可执行文件")]),_._v(" "),r("p",[_._v("shell关闭后umask设置失效（可以使用批处理文件设置shell的默认行为")]),_._v(" "),r("p",[_._v("使用方法：")]),_._v(" "),r("ul",[r("li",[r("code",{pre:!0},[_._v("umask")]),_._v(" - 打印当前umask值")]),_._v(" "),r("li",[r("code",{pre:!0},[_._v("umask xxx")]),_._v(" - 把umask设置为三个八进制数字")])]),_._v(" "),r("p",[_._v("掩码值的含义 - 取消对应权限。如022就是取消同组用户和其他用户的写权限。077就是取消文件主以外所有用户的所有权限")]),_._v(" "),r("p",[_._v("创建文件时文件的权限会受到umask的影响，已经存在的文件则不受影响")]),_._v(" "),r("p",[_._v("系统调用"),r("code",{pre:!0},[_._v("int umask(int mask)")]),_._v("会把umask设置为参数的mask值并返回原本的umask")]),_._v(" "),r("h3",{attrs:{id:"suid"}},[_._v("SUID")]),_._v(" "),r("p",[_._v("用来访问部分文件")]),_._v(" "),r("p",[_._v("已知一个需要访问的文件a.txt和一个可执行程序query，query访问a.txt来输出部分信息")]),_._v(" "),r("p",[_._v("把a.txt的读权限取消，即无法使用cat读取")]),_._v(" "),r("p",[_._v("给query设置x权限使其可以执行，但是query内部需要访问a.txt，所以query会执行失败")]),_._v(" "),r("p",[_._v("但是给query设置s权限，就可以使用query访问目标文件")]),_._v(" "),r("p",[r("strong",[_._v("SUID使用户可以使用文件主提供的程序以文件主的权限访问文件")]),_._v("（实现有限的访问")])])}]};_.exports={attributes:{layout:"collection",title:"文件和目录管理",collection:"LinuxProgrammingEnvironment"},vue:{render:r.render,staticRenderFns:r.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(_){return this.templateRender?this.templateRender():_("div","Rendering")},created:function(){this.templateRender=r.render,this.$options.staticRenderFns=r.staticRenderFns}}}}},797:function(_,v,e){_.exports=e.p+"img/9d587d7.png"},798:function(_,v,e){_.exports=e.p+"img/3ac3b7e.png"},799:function(_,v,e){_.exports=e.p+"img/d637111.png"},800:function(_,v,e){_.exports=e.p+"img/8d56bc2.png"}}]);