(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{1305:function(t,v){const _={render:function(){var t=this;t.$createElement;return t._self._c,t._m(0)},staticRenderFns:[function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("div",{staticClass:"frontmatter-markdown"},[_("h2",{attrs:{id:"各问题与算法的时间复杂度与空间复杂度"}},[t._v("各问题与算法的时间复杂度与空间复杂度")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("算法与问题")]),t._v(" "),_("th",[t._v("时间复杂度")]),t._v(" "),_("th",[t._v("空间复杂度")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("递归分治-二分查找")]),t._v(" "),_("td",[t._v("O(logn)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("递归分治-大整数乘法")]),t._v(" "),_("td",[t._v("O(n^1.59)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("递归分治-合并排序")]),t._v(" "),_("td",[t._v("O(nlogn)")]),t._v(" "),_("td",[t._v("O(n)")])]),t._v(" "),_("tr",[_("td",[t._v("递归分治-快速排序")]),t._v(" "),_("td",[t._v("平均O(nlogn) 最坏O(n^2)")]),t._v(" "),_("td",[t._v("O(n)或O(logn)")])]),t._v(" "),_("tr",[_("td",[t._v("递归分治-线性时间选择")]),t._v(" "),_("td",[t._v("O(n)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("动态规划-矩阵连乘")]),t._v(" "),_("td",[t._v("O(n^3)")]),t._v(" "),_("td",[t._v("O(n^2)")])]),t._v(" "),_("tr",[_("td",[t._v("动态规划-最长公共子序列")]),t._v(" "),_("td",[t._v("O(m+n)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("动态规划-最大子段和")]),t._v(" "),_("td",[t._v("O(n)")]),t._v(" "),_("td",[t._v("O(n)")])]),t._v(" "),_("tr",[_("td",[t._v("动态规划-凸多边形三角剖分")]),t._v(" "),_("td",[t._v("O(n^3)")]),t._v(" "),_("td",[t._v("O(n^2)")])]),t._v(" "),_("tr",[_("td",[t._v("动态规划-0-1背包")]),t._v(" "),_("td",[t._v("O(cn) c:背包容量;n:物品数")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-活动安排问题")]),t._v(" "),_("td",[t._v("活动已排序: O(n) 活动未排序: O(nlogn)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-背包问题")]),t._v(" "),_("td",[t._v("排序O(nlogn)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-装载问题")]),t._v(" "),_("td",[t._v("O(nlogn)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-哈夫曼编码")]),t._v(" "),_("td",[t._v("O(nlogn)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-Dijkstra最短路径")]),t._v(" "),_("td",[t._v("O(n^2)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-Prim最小生成树")]),t._v(" "),_("td",[t._v("O(n^2)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("贪心-Kruskal最小生成树")]),t._v(" "),_("td",[t._v("O(eloge) e:边的数量")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("回溯-子集树")]),t._v(" "),_("td",[t._v("O(2^n)")]),t._v(" "),_("td",[t._v("-")])]),t._v(" "),_("tr",[_("td",[t._v("回溯-排列树")]),t._v(" "),_("td",[t._v("O(n!)")]),t._v(" "),_("td",[t._v("-")])])])])])}]};t.exports={attributes:{layout:"collection",title:"总结",collection:"AlgorithmDesignAndAnalyze"},vue:{render:_.render,staticRenderFns:_.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=_.render,this.$options.staticRenderFns=_.staticRenderFns}}}}}}]);