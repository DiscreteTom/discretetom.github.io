(window.webpackJsonp=window.webpackJsonp||[]).push([[77,264,265],{1156:function(t,n,e){const r={render:function(){var t=this;t.$createElement;return t._self._c,t._m(0)},staticRenderFns:[function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("div",{staticClass:"frontmatter-markdown"},[r("h2",{attrs:{id:"前言"}},[t._v("前言")]),t._v(" "),r("p",[t._v("本文是观看"),r("a",{attrs:{href:"https://www.bilibili.com/video/BV1qy4y1q728"}},[t._v("此视频")]),t._v("时的笔记")]),t._v(" "),r("h2",{attrs:{id:"flink"}},[t._v("Flink")]),t._v(" "),r("h3",{attrs:{id:"flink-概述"}},[t._v("Flink 概述")]),t._v(" "),r("ul",[r("li",[t._v("早期是一个德国大学研究项目，后来捐给了 Apache 基金会，由阿里接管")]),t._v(" "),r("li",[t._v("Flink: 德语 - 快速灵巧")]),t._v(" "),r("li",[t._v("是一个框架/分布式处理引擎，对无界/有界数据流进行状态计算\n"),r("ul",[r("li",[t._v("离线数据就是有界的流。Flink 里面只有流的概念")])])]),t._v(" "),r("li",[t._v("目标\n"),r("ul",[r("li",[t._v("低延迟")]),t._v(" "),r("li",[t._v("高吞吐")]),t._v(" "),r("li",[t._v("准确 & 容错（保证顺序、高可用、状态恢复）")])])]),t._v(" "),r("li",[t._v("有分层 API，可以按需使用\n"),r("ul",[r("li",[t._v("SQL 级/表级 API\n"),r("ul",[r("li",[t._v("最高层，可以直接写 SQL")])])]),t._v(" "),r("li",[t._v("数据流/批 API\n"),r("ul",[r("li",[t._v("DataStream(在线流) / DataSet(离线流)")]),t._v(" "),r("li",[t._v("支持窗口函数")])])]),t._v(" "),r("li",[t._v("有状态/事件驱动 API")])])]),t._v(" "),r("li",[t._v("支持多种时间语义\n"),r("ul",[r("li",[t._v("事件时间(event-time)")]),t._v(" "),r("li",[t._v("处理时间(processing-time)")])])]),t._v(" "),r("li",[t._v("保证精确处理一次的一致性(exactly-once)")]),t._v(" "),r("li",[t._v("低延迟，高吞吐：毫秒级延迟，每秒百万事件")]),t._v(" "),r("li",[t._v("支持连接到众多常用存储系统，实现落盘")]),t._v(" "),r("li",[t._v("高可用，动态扩展，可以 7x24 全天候跑")])]),t._v(" "),r("h3",{attrs:{id:"流数据处理场景"}},[t._v("流数据处理场景")]),t._v(" "),r("ul",[r("li",[t._v("电商\n"),r("ul",[r("li",[t._v("实时报表")]),t._v(" "),r("li",[t._v("广告投放")]),t._v(" "),r("li",[t._v("业务流程")])])]),t._v(" "),r("li",[t._v("IOT\n"),r("ul",[r("li",[t._v("传感器数据收集可视化")]),t._v(" "),r("li",[t._v("实时报警")]),t._v(" "),r("li",[t._v("交通运输")])])]),t._v(" "),r("li",[t._v("电信\n"),r("ul",[r("li",[t._v("基站流量调配")])])]),t._v(" "),r("li",[t._v("银行金融\n"),r("ul",[r("li",[t._v("实时结算")]),t._v(" "),r("li",[t._v("推送通知")]),t._v(" "),r("li",[t._v("异常检测")])])]),t._v(" "),r("li",[t._v("解决痛点：大数据批处理带来的 N+1 问题（第二天才能得到前一天的结果）")])]),t._v(" "),r("h3",{attrs:{id:"数据处理演变"}},[t._v("数据处理演变")]),t._v(" "),r("ul",[r("li",[t._v("仅 RDBMS\n"),r("ul",[r("li",[t._v("关系型数据库")]),t._v(" "),r("li",[t._v("实时，但是扩展性差")])])]),t._v(" "),r("li",[t._v("RDBMS -> ETL -> 数据仓库 -> Ad-Hoc 分析/报表\n"),r("ul",[r("li",[t._v("慢。高并发，但是高延迟")])])]),t._v(" "),r("li",[t._v("有状态流式处理\n"),r("ul",[r("li",[t._v("把状态保存在内存，处理流式数据")]),t._v(" "),r("li",[t._v("周期落盘(checkpoint)")]),t._v(" "),r("li",[t._v("分布式之后，难以保持顺序（准确性）")])])]),t._v(" "),r("li",[t._v("Lambda 架构\n"),r("ul",[r("li",[t._v("两套系统：批+流")]),t._v(" "),r("li",[t._v("流系统解决实时的问题（快速、近似正确的结果）")]),t._v(" "),r("li",[t._v("批系统解决准确性的问题")]),t._v(" "),r("li",[t._v("缺点：两套系统，额外开发成本")])])]),t._v(" "),r("li",[t._v("Flink（可以视为第三代流处理器）\n"),r("ul",[r("li",[t._v("流批一体")]),t._v(" "),r("li",[t._v("低延迟高吞吐")]),t._v(" "),r("li",[t._v("可以保证正确性")])])])]),t._v(" "),r("h3",{attrs:{id:"对比其他流处理器"}},[t._v("对比其他流处理器")]),t._v(" "),r("ul",[r("li",[t._v("Storm\n"),r("ul",[r("li",[t._v("快，低延迟，毫秒级")]),t._v(" "),r("li",[t._v("吞吐量也不能太大")]),t._v(" "),r("li",[t._v("无法保证时间正确")])])]),t._v(" "),r("li",[t._v("Spark Streaming\n"),r("ul",[r("li",[t._v("从批处理演变而来。处理的不是流(stream)，而是微批(micro-batch)")]),t._v(" "),r("li",[t._v("架构上决定其无法做到 Storm 一样的毫秒延迟。有几百毫秒")]),t._v(" "),r("li",[t._v("高吞吐")])])]),t._v(" "),r("li",[t._v("Flink\n"),r("ul",[r("li",[t._v("快，毫秒级")]),t._v(" "),r("li",[t._v("高吞吐")]),t._v(" "),r("li",[t._v("准确")])])])]),t._v(" "),r("p",[t._v("Flink YES!")]),t._v(" "),r("h3",{attrs:{id:"wordcount"}},[t._v("WordCount")]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// batch")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutionEnvironment")]),t._v(" env "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutionEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecutionEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSet")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" input "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("readTextFile")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  input"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatMap")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFlatMapper")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据第0个位置的元素进行分组")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 求第1个位置的元素的和")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stream")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),t._v(" env "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecutionEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParameterTool")]),t._v(" pt "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ParameterTool")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromArgs")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" host "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pt"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" port "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pt"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInt")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// DataStream<String> input = env.readTextFile("path"); // file is also supported')]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataStream")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" input "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("socketTextStream")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  input"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatMap")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFlatMapper")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据第0个元素的哈希进行重分区")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 求第1个元素的和")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  env"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app-name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出分区编号和结果。源文件的每一行都会对应一行输出")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use Flink Tuple2 instead of Scala Tuple2")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFlatMapper")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlatMapFunction")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tuple2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatMap")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collector")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tuple2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" words "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" word "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" words"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tuple2")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"部署"}},[t._v("部署")]),t._v(" "),r("h4",{attrs:{id:"部署模式"}},[t._v("部署模式")]),t._v(" "),r("ul",[r("li",[t._v("Standalone 模式")]),t._v(" "),r("li",[t._v("YARN 模式\n"),r("ul",[r("li",[t._v("Session Cluster 模式(Session 模式)\n"),r("ul",[r("li",[t._v("预先在 Yarn 中申请资源。未来创建的作业都会在这个资源池中进行")]),t._v(" "),r("li",[t._v("如果资源不足，则新作业只能等待")]),t._v(" "),r("li",[t._v("如果作业比较小、时间比较短、有限时间可以执行完毕（释放资源），则可以使用此模式")])])]),t._v(" "),r("li",[t._v("Per Job Cluster 模式(Job 模式)\n"),r("ul",[r("li",[t._v("每个作业都会在 Yarn 上面创建一个 Flink 集群")]),t._v(" "),r("li",[t._v("资源完全独享")]),t._v(" "),r("li",[t._v("适合时间比较长、资源一直不释放的作业")])])])])]),t._v(" "),r("li",[t._v("k8s 模式，略")])]),t._v(" "),r("h4",{attrs:{id:"配置"}},[t._v("配置")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("conf/flink-conf.yaml")]),t._v("主配置文件")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("conf/masters")]),t._v("主节点")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("conf/slaves")]),t._v("从节点")])]),t._v(" "),r("pre",{staticClass:"language-yaml"},[r("code",{pre:!0,attrs:{class:"language-yaml"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# conf/flink-conf.yaml 主要配置项")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobmanager.rpc.address")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobmanager.heap.size")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1024m "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# JVM堆内存大小")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskmanager.memory.process.size")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  1728m "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TaskManager进程的内存大小")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不仅是堆内存，还有保存状态消耗的内存，etc")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskmanager.numberOfTaskSlots")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个TaskManager支持多少个并发任务（最大并行度）")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推荐的值为taskmanager的CPU核心数")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parallelism.default")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认并行度")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"原理"}},[t._v("原理")]),t._v(" "),r("h4",{attrs:{id:"并行度"}},[t._v("并行度")]),t._v(" "),r("ul",[r("li",[t._v("一个算子/任务的子任务(subtask)个数，被称为并行度(parallelism)")]),t._v(" "),r("li",[t._v("配置文件可以设置默认并行度")]),t._v(" "),r("li",[t._v("通过 jar 包创建任务的时候可以设置并行度")]),t._v(" "),r("li",[t._v("代码中初始化环境的时候可以设置并行度")]),t._v(" "),r("li",[t._v("对 DataStream/DataSet 的每一个操作都可以单独设置并行度")]),t._v(" "),r("li",[t._v("优先级（从先到后）\n"),r("ul",[r("li",[r("blockquote",[r("p",[t._v("输入输出的并行度通常都是固定的 1，以免出现冲突")])])]),t._v(" "),r("li",[t._v("代码里面对操作单独设置的并行度")]),t._v(" "),r("li",[t._v("代码中初始化环境时设置的并行度")]),t._v(" "),r("li",[t._v("提交作业的时候设置的并行度")]),t._v(" "),r("li",[t._v("配置文件中默认的并行度")])])]),t._v(" "),r("li",[t._v("所有单个任务(task)的并行度加在一起，就是整个作业(job)的任务数量\n"),r("ul",[r("li",[t._v("比如一共三个任务，并行度分别是 1，2，3，那么整个作业一共 6 个任务")]),t._v(" "),r("li",[t._v("默认情况下占用的 slot 数量为作业中并行度最高的任务的并行度。上述任务需要 3 个 slot。详见下文【运行时组件-TaskManager】\n"),r("ul",[r("li",[t._v("即一个 stream 的并行度是所有算子的最大并行度")])])]),t._v(" "),r("li",[t._v("如果 slot 不足，就无法启动任务，任务处于等待状态，直到超时")]),t._v(" "),r("li",[t._v("有些简单的任务如果并行度相同，可能会被合并")])])])]),t._v(" "),r("h4",{attrs:{id:"运行时组件"}},[t._v("运行时组件")]),t._v(" "),r("ul",[r("li",[t._v("JobManager（作业管理器）\n"),r("ul",[r("li",[t._v("是一个作业的主进程")]),t._v(" "),r("li",[t._v("接收客户端提交的 APP。APP 包括：\n"),r("ul",[r("li",[t._v("作业图(JobGraph)")]),t._v(" "),r("li",[t._v("逻辑数据流图(Logical Dataflow Graph)")]),t._v(" "),r("li",[t._v("打包之后的所有类、库和 jar 包")])])]),t._v(" "),r("li",[t._v("JobManager 会把 JobGraph 转换为物理层面的执行图(ExecutionGraph)\n"),r("ul",[r("li",[t._v("包含了所有可以并发执行的任务")])])]),t._v(" "),r("li",[t._v("JobManager 会向 ResourceManager 请求资源\n"),r("ul",[r("li",[t._v("这里的资源就是 TaskManager 上面的 slot")]),t._v(" "),r("li",[t._v("一旦获取到了足够的资源，就会把 ExecutionGraph 分发到对应的 TaskManager 上")])])]),t._v(" "),r("li",[t._v("JobManager 会负责所有需要中央协调的操作，比如 checkpoint 的协调")])])]),t._v(" "),r("li",[t._v("TaskManager（任务管理器）\n"),r("ul",[r("li",[t._v("Flink 中的 worker 进程（是一个 JVM 进程）\n"),r("ul",[r("li",[t._v("会在独立的线程上执行多个子任务（一个 slot 是一个线程）")])])]),t._v(" "),r("li",[t._v("Flink 中通常会有多个 TaskManager")]),t._v(" "),r("li",[t._v("每个 TaskManager 都包含了一定数量的 slots（至少一个）。slot 的数量限制了 TaskManager 能够执行的任务数量\n"),r("ul",[r("li",[t._v("推荐 slot 数量为 TaskManager 的 CPU 核心数")]),t._v(" "),r("li",[t._v("默认情况下，Flink 允许不同任务的子任务共享 slot（不同阶段的子任务），以减少对 slot 的消耗。所以一个 slot 甚至就可以执行所有子任务。任务出错恢复的时候，需要恢复的 slot 数量也会减少")]),t._v(" "),r("li",[t._v("可以像设置每个任务/算子的并行度一样，给每个算子设置 slot 组，从而手动指定合并同一个组的子任务到一个 slot，不同的组的子任务到不同的 slot\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('stream.sum(1).slotSharingGroup("xxx")')])]),t._v(" "),r("li",[t._v("默认 slot 组为"),r("code",{pre:!0},[t._v("default")])]),t._v(" "),r("li",[t._v("默认情况下，新的算子所属的组和前一个算子的相同")]),t._v(" "),r("li",[t._v("所以如果不显式指定 slot 组，所有算子都会在同一个 default 组中")])])])])]),t._v(" "),r("li",[t._v("启动之后，TaskManager 会向 ResourceManager 注册 slot")]),t._v(" "),r("li",[t._v("收到任务时，TaskManager 会把 slot 提供给 JobManager，JobManager 就可以向 slot 分配 task 了")]),t._v(" "),r("li",[t._v("同一个 job 的不同 TaskManager 之间可以交换数据")])])]),t._v(" "),r("li",[t._v("Resource Manager（资源管理器）\n"),r("ul",[r("li",[t._v("主要负责管理 slot")]),t._v(" "),r("li",[t._v("Flink 为不同的环境提供了不同的 ResourceManager\n"),r("ul",[r("li",[t._v("YARN / Mesos / k8s / standalone")])])]),t._v(" "),r("li",[t._v("资源不足时还可以向云平台申请资源")])])]),t._v(" "),r("li",[t._v("Dispatcher（调度器）\n"),r("ul",[r("li",[t._v("可以跨 job 运行")]),t._v(" "),r("li",[t._v("为应用的提交提供了 REST 接口")]),t._v(" "),r("li",[t._v("当应用被提交的时候，就会启动 Dispatcher 并把 job 交给一个 JobManager")]),t._v(" "),r("li",[t._v("Dispatcher 有一个 WebUI，默认 8081 端口。可以用来可视化管理任务")]),t._v(" "),r("li",[t._v("Dispatcher 在架构中不是必需的。也可以通过其他方式提交应用")])])])]),t._v(" "),r("h4",{attrs:{id:"任务提交流程"}},[t._v("任务提交流程")]),t._v(" "),r("ol",[r("li",[t._v("比如通过 WebUI，把任务交给 Dispatcher")]),t._v(" "),r("li",[t._v("Dispatcher 启动一个 JobManager，并把任务交给 JobManager")]),t._v(" "),r("li",[t._v("JobManager 向 ResourceManager 请求 slots")]),t._v(" "),r("li",[t._v("ResourceManager 如果没有足够的资源，会启动/申请新的 TaskManager")]),t._v(" "),r("li",[t._v("新 TaskManager 向 ResourceManager 注册 slots")]),t._v(" "),r("li",[t._v("ResourceManager 向 JobManager 提供 slots")]),t._v(" "),r("li",[t._v("JobManager 向 TaskManager 提供 ExecutionGraph")]),t._v(" "),r("li",[t._v("TaskManager 执行任务，并在 TaskManager 之间交换数据")])]),t._v(" "),r("p",[t._v("如果使用 Yarn(Job 模式):")]),t._v(" "),r("ol",[r("li",[t._v("客户端上传任务的 jar 包和配置到 HDFS")]),t._v(" "),r("li",[t._v("客户端提交 Job 到 Yarn ResourceManager")]),t._v(" "),r("li",[t._v("Yarn ResourceManager 启动 Yarn Application Master，包含 JobManager 和 Flink ResourceManager")]),t._v(" "),r("li",[t._v("JobManager 向 Flink ResourceManager 申请资源，后者向 Yarn ResourceManager 申请资源，创建 TaskManager")]),t._v(" "),r("li",[t._v("执行任务")])]),t._v(" "),r("h4",{attrs:{id:"任务调度原理"}},[t._v("任务调度原理")]),t._v(" "),r("ul",[r("li",[t._v("如何实现并行计算，提升性能？\n"),r("ul",[r("li",[t._v("设置 Task 的并行度")])])]),t._v(" "),r("li",[t._v("计算 slot\n"),r("ul",[r("li",[t._v("根据上文【运行时组件-TaskManager】的规则\n"),r("ul",[r("li",[t._v("默认情况下所有 Task 都属于同一个 slot group（default 组）。也可以手动拆分 Task 到不同的 slot group")]),t._v(" "),r("li",[t._v("每个 slot group 需要的 slot 数量为组内 Task 的最大并行度")])])])])])]),t._v(" "),r("blockquote",[r("p",[t._v("举个例子：目前有 6 个算子/任务，并行度分别为 1/3/5/2/4/6，其中前两个任务属于组 A，其他任务属于组 B，求子任务的数量和所需要的 slot 数量。")]),t._v(" "),r("ul",[r("li",[t._v("子任务数量为"),r("code",{pre:!0},[t._v("1+3+5+2+4+6=21")])]),t._v(" "),r("li",[t._v("组 A\n"),r("ul",[r("li",[t._v("两个任务，最大并行度为 3，所以需要 3 个 slot")])])]),t._v(" "),r("li",[t._v("组 B\n"),r("ul",[r("li",[t._v("4 个任务，最大并行度为 6，所以需要 6 个 slot")])])]),t._v(" "),r("li",[t._v("一共需要 9 个 slot")])]),t._v(" "),r("p",[r("img",{attrs:{src:e(425),alt:"9-1"}})])]),t._v(" "),r("h4",{attrs:{id:"程序数据流和执行图"}},[t._v("程序，数据流和执行图")]),t._v(" "),r("ul",[r("li",[t._v("所有 Flink 程序包含三个部分\n"),r("ul",[r("li",[t._v("Source\n"),r("ul",[r("li",[t._v("读取数据源")])])]),t._v(" "),r("li",[t._v("Transformation\n"),r("ul",[r("li",[t._v("使用算子处理数据")])])]),t._v(" "),r("li",[t._v("Sink\n"),r("ul",[r("li",[t._v("输出")])])])])]),t._v(" "),r("li",[t._v("上述三部分形成一个逻辑数据流(DataFlow)\n"),r("ul",[r("li",[t._v("类似一个 DAG")]),t._v(" "),r("li",[t._v("可以有多个 source")]),t._v(" "),r("li",[t._v("可以有多个 sink")])])]),t._v(" "),r("li",[t._v("程序最终执行的时候会参考执行图(ExecutionGraph)\n"),r("ul",[r("li",[t._v("有四种抽象等级\n"),r("ul",[r("li",[t._v("StreamGraph\n"),r("ul",[r("li",[t._v("根据 Stream API 生成的图，用来表示程序的拓扑结构")])])]),t._v(" "),r("li",[t._v("JobGraph\n"),r("ul",[r("li",[t._v("被提交给 JobManager")]),t._v(" "),r("li",[t._v("合并可以被合并的算子")])])]),t._v(" "),r("li",[t._v("ExecutionGraph\n"),r("ul",[r("li",[t._v("JobManager 根据 JobGraph 生成 ExecutionGraph")]),t._v(" "),r("li",[t._v("是 JobGraph 的并行化版本（按照 Task 的并行度进行拆分）")]),t._v(" "),r("li",[t._v("是调度层最核心的数据结构")])])]),t._v(" "),r("li",[t._v("物理执行图\n"),r("ul",[r("li",[t._v("每个 Task 如何对应 TaskManager")]),t._v(" "),r("li",[t._v("并不是一个具体的数据结构")])])])])])])])]),t._v(" "),r("p",[r("img",{attrs:{src:e(426),alt:"9-2"}})]),t._v(" "),r("h4",{attrs:{id:"数据传输和重分区"}},[t._v("数据传输和重分区")]),t._v(" "),r("ul",[r("li",[t._v("算子之间的数据传输有两种模式\n"),r("ul",[r("li",[t._v("one-to-one(forwarding)\n"),r("ul",[r("li",[t._v("不会重分区。输入一个分区，输出一个分区")]),t._v(" "),r("li",[t._v("数据顺序可以保持不变")]),t._v(" "),r("li",[t._v("比如 map, filter, flatMap")])])]),t._v(" "),r("li",[t._v("redistributing\n"),r("ul",[r("li",[t._v("分区会发生改变，数据顺序通常也会变")]),t._v(" "),r("li",[t._v("类似于 spark 中的 shuffle")]),t._v(" "),r("li",[t._v("比如 keyBy, broadcast, rebalance(轮询), rescale, global")])])])])]),t._v(" "),r("li",[t._v("Flink 使用了任务链(Operator Chains)优化通信\n"),r("ul",[r("li",[t._v("需要\n"),r("ul",[r("li",[t._v("多个算子的并行度相同")]),t._v(" "),r("li",[t._v("都是 one-to-one 算子")]),t._v(" "),r("li",[t._v("在相同的 slot group")])])]),t._v(" "),r("li",[t._v("Flink 会通过本地转发(local forward)的方式连接算子")]),t._v(" "),r("li",[t._v("如果不想使用任务链优化，也不想通过 slot group 的方式额外占用一个 slot\n"),r("ul",[r("li",[t._v("可以在算子之间添加一个重分区操作，比如 rebalance 或者 shuffle")]),t._v(" "),r("li",[t._v("或者修改算子："),r("code",{pre:!0},[t._v("xxx.disableChaining()")])]),t._v(" "),r("li",[t._v("或者添加全局配置："),r("code",{pre:!0},[t._v("env.disableOperatorChaining();")])])])]),t._v(" "),r("li",[t._v("主动使用任务连："),r("code",{pre:!0},[t._v("xxx.startNewChain()")])])])])]),t._v(" "),r("h4",{attrs:{id:"数据类型"}},[t._v("数据类型")]),t._v(" "),r("ul",[r("li",[t._v("Flink 支持所有的 Java/Scala 基础数据类型")]),t._v(" "),r("li",[t._v("Tuples")]),t._v(" "),r("li",[t._v("Scala case classes")]),t._v(" "),r("li",[t._v("Java 简单对象(POJOs)\n"),r("ul",[r("li",[t._v("必需有一个空参数的构造方法")]),t._v(" "),r("li",[t._v("所有字段，要么是 public 的，要么有 getter/setter")])])])]),t._v(" "),r("h4",{attrs:{id:"算子函数和富函数"}},[t._v("算子函数和富函数")]),t._v(" "),r("ul",[r("li",[t._v("很多算子都会接收一个函数作为参数\n"),r("ul",[r("li",[t._v("比如"),r("code",{pre:!0},[t._v("map")]),t._v("会接收一个"),r("code",{pre:!0},[t._v("MapFunction")]),t._v("作为参数")])])]),t._v(" "),r("li",[t._v("也可以使用匿名函数")]),t._v(" "),r("li",[t._v("所有算子的参数函数都有一个富函数(rich function)版本\n"),r("ul",[r("li",[t._v("比如"),r("code",{pre:!0},[t._v("RichMapFunction")])]),t._v(" "),r("li",[t._v("可以进行更精细的管理，获取当前状态，实现更复杂的功能，或者实现有状态的操作，或者维持和数据库的连接")]),t._v(" "),r("li",[t._v("函数里面会有更多的生命周期")])])])]),t._v(" "),r("h4",{attrs:{id:"时间语义"}},[t._v("时间语义")]),t._v(" "),r("ul",[r("li",[t._v("Flink 支持的时间语义分类\n"),r("ul",[r("li",[t._v("Event Time: 事件被创建的时间，由客户端产生\n"),r("ul",[r("li",[t._v("有些场景下，事件时间比处理时间更重要")]),t._v(" "),r("li",[t._v("为了保证正确性，避免乱序，基于事件时间的处理可能比较慢")]),t._v(" "),r("li",[t._v("基于事件的时间戳处理基于时间的算子")])])]),t._v(" "),r("li",[t._v("Ingestion Time: 事件进入 Flink 的时间，由 source 算子产生")]),t._v(" "),r("li",[t._v("Processing Time: 执行算子，对数据进行操作的本地系统时间\n"),r("ul",[r("li",[t._v("是默认的时间语义")])])])])]),t._v(" "),r("li",[t._v("设置时间语义\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)")])])])]),t._v(" "),r("li",[t._v("通常和窗口函数一起使用\n"),r("ul",[r("li",[t._v("通常情况下，假设我们设置了 5 秒滚动窗口。那么在接收到任何时间戳大于等于 5 的事件时，处理"),r("code",{pre:!0},[t._v("[0, 5)")]),t._v("时间段的数据。但是如果先收到了第 5 秒的事件，又收到了第 2 秒的事件，第 2 秒的事件就无法被处理。这个问题仅会出现在事件时间语义下")]),t._v(" "),r("li",[t._v("解决方案：使用水位线(Watermark)\n"),r("ul",[r("li",[t._v("应该关闭窗口时，先不关闭窗口，而是等待一段时间。然后再输出第一个结果")]),t._v(" "),r("li",[t._v("通常设置几百毫秒")]),t._v(" "),r("li",[t._v("水位线是一条特殊的事件，必需单调递增\n"),r("ul",[r("li",[t._v("由 Flink 引擎根据配置，自动生成，而不是来自事件源")]),t._v(" "),r("li",[t._v("默认按照一定的周期生成("),r("code",{pre:!0},[t._v("AssignerWithPeriodicWatermarks")]),t._v("，基于当前最大时间戳，默认周期 200 毫秒)。也可以根据传入的数据生成("),r("code",{pre:!0},[t._v("AssignerWithPunctuatedWatermarks")]),t._v(")，也可以自定义\n"),r("ul",[r("li",[t._v("根据传入数据生成 watermark 的好处是，watermark 更新特别快，坏处是数据量可能翻倍，因为 watermark 也算是特殊的数据")]),t._v(" "),r("li",[t._v("所以，数据稠密的时候用周期 watermark，数据稀疏的时候用基于事件的 watermark")])])])])]),t._v(" "),r("li",[t._v("比如设置了 5 秒滚动时间窗口，处理"),r("code",{pre:!0},[t._v("[0, 5)")]),t._v("时间段的数据，设置 3 秒水位线，那么当时间戳大于等于 8 的事件出现时，才关闭 5 的窗口")]),t._v(" "),r("li",[t._v("watermark 在上下游算子之间的传递规则\n"),r("ul",[r("li",[t._v("子任务会保存所有父任务的当前水位")]),t._v(" "),r("li",[t._v("父任务会把最小的 watermark 广播给下游")]),t._v(" "),r("li",[t._v("如果 watermark 不变则不广播")]),t._v(" "),r("li",[t._v("含义：使用最小的 watermark，意为此 watermark 之前的数据都视为成功接收，所以向下广播最小的 watermark")])])])])]),t._v(" "),r("li",[t._v("使用水位线机制之后，可以再使用 window 操作的"),r("code",{pre:!0},[t._v("allowLateness")]),t._v("，设置更长的接收迟到数据的时间。最后，还可以使用 side output 的方式把仍然迟到的数据收集到。一共有三重保障\n"),r("ul",[r("li",[t._v("如果接收到了数据，会输出一个新结果（不是第一个结果）")]),t._v(" "),r("li",[t._v("可以设置分钟级别")])])])])])]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给流配置时间戳和水印")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// watermark延迟为2秒")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("assignTimestampAndWatermarks")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BoundedOutOfOrdernessTimestampExtractor")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyType")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("seconds")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractTimestamp")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyType")]),t._v(" data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTimestamp")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果确定事件有序，可以使用升序时间戳提取器")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("assignTimestampAndWatermarks")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AscendingTimestampExtractor")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyType")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractAscendingTimestamp")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyType")]),t._v(" data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTimestamp")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),r("h4",{attrs:{id:"状态管理"}},[t._v("状态管理")]),t._v(" "),r("ul",[r("li",[t._v("状态\n"),r("ul",[r("li",[t._v("保存在内存中，Flink 维护状态的一致性、故障处理、高效存储")]),t._v(" "),r("li",[t._v("两种状态\n"),r("ul",[r("li",[t._v("managed state - 被 Flink 管理的状态")]),t._v(" "),r("li",[t._v("raw state - 手动管理的状态，通常用不到")])])]),t._v(" "),r("li",[t._v("状态和算子关联，和任务绑定，正常运行时不会有网络传输")])])]),t._v(" "),r("li",[t._v("算子状态(Operator State)\n"),r("ul",[r("li",[t._v("作用范围限定为算子的子任务")]),t._v(" "),r("li",[t._v("无法跨子任务访问")]),t._v(" "),r("li",[t._v("只要在同一个分区，访问的状态就是相同的")]),t._v(" "),r("li",[t._v("数据结构\n"),r("ul",[r("li",[t._v("list - 一组数据（因为如果存在多个子任务，就会有多个状态值）")]),t._v(" "),r("li",[t._v("union list - 一组数据，并且指明了在出现故障时如何恢复")]),t._v(" "),r("li",[t._v("broadcast - 跨子任务共享的状态")])])])])]),t._v(" "),r("li",[t._v("键控状态(Keyed State)\n"),r("ul",[r("li",[t._v("根据输入流中定义的 key 来维护和访问")]),t._v(" "),r("li",[t._v("每个 key 都会有一个状态，所以一个算子会产生很多状态")]),t._v(" "),r("li",[t._v("数据只能访问自己的 key 对应的状态")]),t._v(" "),r("li",[t._v("数据结构\n"),r("ul",[r("li",[t._v("value - 单个值（单个 key 只可能存在在一个子任务中）")]),t._v(" "),r("li",[t._v("list - 列表")]),t._v(" "),r("li",[t._v("map - kv 对")]),t._v(" "),r("li",[t._v("reducing & aggregating - 用于聚合的列表")])])])])]),t._v(" "),r("li",[t._v("状态后端(State Backends)\n"),r("ul",[r("li",[t._v("是用来管理状态的组件")]),t._v(" "),r("li",[t._v("负责管理本地状态，以及把 checkpoint 写入远程存储")]),t._v(" "),r("li",[t._v("插件化")]),t._v(" "),r("li",[t._v("Flink 提供三种状态后端\n"),r("ul",[r("li",[t._v("MemoryStateBackend(jobmanager)\n"),r("ul",[r("li",[t._v("使用内存，状态保存在 TaskManager 的内存里，checkpoint 保存在 JobManager 的内存")]),t._v(" "),r("li",[t._v("快速，低延迟，不稳定")]),t._v(" "),r("li",[t._v("开发测试。通常不会用在生产")])])]),t._v(" "),r("li",[t._v("FsStateBackend(filesystem)\n"),r("ul",[r("li",[t._v("checkpoint 保存在远程的文件系统（HDFS），本地状态保存在内存")]),t._v(" "),r("li",[t._v("内存级别的访问速度+更好的容错")]),t._v(" "),r("li",[t._v("适合大部分生产场景")])])]),t._v(" "),r("li",[t._v("RocksDBStateBackend(rocksdb)\n"),r("ul",[r("li",[t._v("把所有状态序列化之后保存在本地的 RocksDB")]),t._v(" "),r("li",[t._v("内存 kv 存储，数据量大的时候自动落盘")]),t._v(" "),r("li",[t._v("比内存慢一些，适合超多状态 OOM 的场景")])])])])]),t._v(" "),r("li",[t._v("配置文件: "),r("code",{pre:!0},[t._v("state.backend: filesystem")])])])])]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自定义算子，设置算子状态")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要继承ListCheckpointed，即使用list保存checkpoint")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMapper")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MapFunction")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListCheckpointed")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" count "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("snapshot")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" checkpointId"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timestamp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("singletonList")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("restore")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" state"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" num "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" count "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" num"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 键控状态")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRichMapper")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyRichMapFunction")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValueState")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" keyCountState"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),t._v(" parameters"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exeption")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    keyCountState "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRuntimeContext")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValueStateDescriptor")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" count "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keyCountState"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    count "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keyCountState"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),r("h4",{attrs:{id:"容错"}},[t._v("容错")]),t._v(" "),r("ul",[r("li",[t._v("checkpoint（一致性检查点）\n"),r("ul",[r("li",[t._v("主要用来保存状态，而不是保存数据\n"),r("ul",[r("li",[t._v("毕竟数据可以从 kafka 重新读")]),t._v(" "),r("li",[t._v("可以在状态里面保存 kafka 数据偏移量，这样就可以从断点继续处理数据")])])]),t._v(" "),r("li",[t._v("当一个输入被完全处理完毕时，保存状态")]),t._v(" "),r("li",[t._v("启动检查点："),r("code",{pre:!0},[t._v("env.enableCheckpoint()")]),t._v("，默认 500ms 间隔")]),t._v(" "),r("li",[t._v("支持设置模式：AT_LEAST_ONCE 和 EXACTLY_ONCE\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.getCheckpointConfig().setCheckpointingMode(CheckpointingMode.EXACTLY_ONCE)")])])])]),t._v(" "),r("li",[t._v("支持设置超时时间\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.getCheckpointConfig().setCheckpointTimeout(60000L)")])])])]),t._v(" "),r("li",[t._v("支持设置 checkpoint 并行度\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.getCheckpointConfig().setMaxConcurrentCheckpoints(2)")])])])]),t._v(" "),r("li",[t._v("设置 checkpoint 最小间隔\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.getCheckpointConfig().setMinPauseBetweenCheckpoints(100L)")])]),t._v(" "),r("li",[t._v("设置间隔之后，checkpoint 并行度只能是 1")])])]),t._v(" "),r("li",[t._v("使用检查点还是保存点\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.getCheckpointConfig().setPreferCheckpointForRecovery(true)")])]),t._v(" "),r("li",[t._v("是否选择 checkpoint 而不选择手动创建的更新的 savepoint")])])]),t._v(" "),r("li",[t._v("容忍保存检查点失败\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.getCheckpointConfig().setTolerableCheckpointFailureNumber(0)")])])])]),t._v(" "),r("li",[t._v("重启策略，即如何读检查点\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.setRestartStrategy(RestartStrategies.noRestart())")])]),t._v(" "),r("li",[t._v("固定间隔尝试重启："),r("code",{pre:!0},[t._v("fixedDelayRestart(3, 10000L)")]),t._v("尝试 3 次，间隔 10 秒")]),t._v(" "),r("li",[t._v("指定失败次数和时间："),r("code",{pre:!0},[t._v("failureRateRestart(3, Time.minutes(10), TIme.minutes(1))")]),t._v("，10 分钟内最多尝试 3 次重启，间隔 1 分钟")])])])])]),t._v(" "),r("li",[t._v("从 checkpoint 恢复状态")]),t._v(" "),r("li",[t._v("checkpoint 算法\n"),r("ul",[r("li",[t._v("基于"),r("code",{pre:!0},[t._v("Chandy-Lamport")]),t._v("算法的【分布式快照】\n"),r("ul",[r("li",[t._v("每个 task 做自己的快照（这样就不用等其他 task），然后由 job manager 进行快照碎片的拼接")]),t._v(" "),r("li",[t._v("把检查点的保存和数据处理分离开，"),r("strong",[t._v("不会暂停整个应用")])]),t._v(" "),r("li",[t._v("使用【检查点分界线(checkpoint barrier)】把数据分隔开\n"),r("ul",[r("li",[t._v("检查点分界线是一条特殊的数据")]),t._v(" "),r("li",[t._v("Flink 接收到检查点分界线的时候，把当前状态保存在状态后端")]),t._v(" "),r("li",[t._v("检查点分界线也会被广播给下游")]),t._v(" "),r("li",[t._v("job manager 会向每个 source 任务发送一条带有 checkpoint ID 的消息，启动检查点")]),t._v(" "),r("li",[t._v("source 任务把状态写入检查点，然后生成检查点分界线，向下游广播\n"),r("ul",[r("li",[t._v("状态后端写入状态完毕后，会返回通知给 source 任务，然后 source 任务通知 jobManager 确认完成")]),t._v(" "),r("li",[t._v("jobManager 收到所有任务的确认信息之后，合并检查点碎片（其实并没有一个拼接的过程），得到检查点数据")])])]),t._v(" "),r("li",[t._v("分界线对齐：下游任务会等待所有上游任务都把某个检查点 ID 传递过来之后，再保存状态\n"),r("ul",[r("li",[t._v("如果某个上游任务已经把检查点 ID 传递给了下游，而其他上游任务还没有把检查点 ID 传递给下游，那么此上游任务继续发送的数据会被下游任务缓存，因为它的状态正在等待被保存，不能被修改")])])])])])])])])]),t._v(" "),r("li",[t._v("save points（保存点）\n"),r("ul",[r("li",[t._v("Flink 提供了可以自定义的镜像保存功能，即保存点")]),t._v(" "),r("li",[t._v("保存点和检查点的算法相同。保存点可以视为有额外元数据信息的检查点")]),t._v(" "),r("li",[t._v("Flink 不会自动创建保存点，所以需要显式触发")]),t._v(" "),r("li",[t._v("除了故障恢复，还可以用来\n"),r("ul",[r("li",[t._v("计划备份")]),t._v(" "),r("li",[t._v("更新程序")]),t._v(" "),r("li",[t._v("版本迁移")]),t._v(" "),r("li",[t._v("暂停/重启应用")])])])])])]),t._v(" "),r("h4",{attrs:{id:"状态一致性"}},[t._v("状态一致性")]),t._v(" "),r("ul",[r("li",[t._v("Flink 使用检查点实现 exactly-once 语义")]),t._v(" "),r("li",[t._v("为了实现端到端(end-to-end) exactly-once，需要流缓冲中间件\n"),r("ul",[r("li",[t._v("保证每个处理环节的数据都不能丢，且只能处理一次")]),t._v(" "),r("li",[t._v("source 端要保证数据可以重复读取，且可以重置偏移量")]),t._v(" "),r("li",[t._v("sink 端实现幂等写入、事务写入\n"),r("ul",[r("li",[t._v("事务实现方式\n"),r("ul",[r("li",[t._v("预写日志(WAL: write-ahead log)\n"),r("ul",[r("li",[t._v("简单，任何 sink 都可以用")]),t._v(" "),r("li",[t._v("DataStream API 提供了一个模板类"),r("code",{pre:!0},[t._v("GenericWriteAheadSink")]),t._v("来实现事务 sink")]),t._v(" "),r("li",[t._v("但是思想类似于批处理，延迟会高")])])]),t._v(" "),r("li",[t._v("二阶段提交(2PC)\n"),r("ul",[r("li",[t._v("真正实现 exactly-once")]),t._v(" "),r("li",[t._v("需要 sink 自身支持事务")]),t._v(" "),r("li",[t._v("Data Stream API 提供了一个抽象类"),r("code",{pre:!0},[t._v("TwoPhaseCommitSinkFunction")])])])])])])])]),t._v(" "),r("li",[t._v("通常用 Flink+Kafka\n"),r("ul",[r("li",[t._v("source: 使用 kafka consumer 作为 source，故障恢复时重置偏移量，重新消费数据")]),t._v(" "),r("li",[t._v("业务逻辑使用 checkpoint 保存状态")]),t._v(" "),r("li",[t._v("sink: 使用 kafka producer 作为 sink，使用两阶段提交")]),t._v(" "),r("li",[t._v("流程：\n"),r("ul",[r("li",[t._v("第一条数据进入 kafka 时，开启一个 kafka 事务，数据写入 kafka 分区日志，但是标记为【未提交】")]),t._v(" "),r("li",[t._v("jobmanager 触发 checkpoint 操作，barrier 从 source 向下游传递。遇到 barrier 的算子把状态保存在状态后端，并通知 jobmanager")]),t._v(" "),r("li",[t._v("sink 收到 barrier，触发 checkpoint 保存状态，通知 Jobmanager，并开启下一阶段事务（不是当前事务），用于提交下一个 checkpoint 的数据")]),t._v(" "),r("li",[t._v("jobmanager 收到所有任务的通知，发出确认信息，表示 checkpoint 完成")]),t._v(" "),r("li",[t._v("sink 收到 Jobmanager 的确认信息，正式提交数据")])])])])])])])]),t._v(" "),r("p",[t._v("总结表格：")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Source")]),t._v(" "),r("th",[t._v("Sink")]),t._v(" "),r("th",[t._v("一致性")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("不可重置")]),t._v(" "),r("td",[t._v("任意")]),t._v(" "),r("td",[t._v("最多一次")])]),t._v(" "),r("tr",[r("td",[t._v("不可重置")]),t._v(" "),r("td",[t._v("幂等")]),t._v(" "),r("td",[t._v("最多一次")])]),t._v(" "),r("tr",[r("td",[t._v("不可重置")]),t._v(" "),r("td",[t._v("WAL")]),t._v(" "),r("td",[t._v("最多一次")])]),t._v(" "),r("tr",[r("td",[t._v("不可重置")]),t._v(" "),r("td",[t._v("2PC")]),t._v(" "),r("td",[t._v("最多一次")])]),t._v(" "),r("tr",[r("td",[t._v("可以重置")]),t._v(" "),r("td",[t._v("任意")]),t._v(" "),r("td",[t._v("至少一次")])]),t._v(" "),r("tr",[r("td",[t._v("可以重置")]),t._v(" "),r("td",[t._v("幂等")]),t._v(" "),r("td",[t._v("精确一次（故障恢复时可能短时间不一致）")])]),t._v(" "),r("tr",[r("td",[t._v("可以重置")]),t._v(" "),r("td",[t._v("WAL")]),t._v(" "),r("td",[t._v("至少一次")])]),t._v(" "),r("tr",[r("td",[t._v("可以重置")]),t._v(" "),r("td",[t._v("2PC")]),t._v(" "),r("td",[t._v("精确一次")])])])]),t._v(" "),r("h3",{attrs:{id:"命令"}},[t._v("命令")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("bin/start-cluster.sh")]),t._v(" & "),r("code",{pre:!0},[t._v("bin/stop-cluster.sh")]),t._v("启动/停止集群")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("bin/flink")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("flink run -c <class-name> -p 3 <jar-path> <params>")]),t._v("提交 job\n"),r("ul",[r("li",[t._v("如果没有 Yarn Session，则提交到本地（standalone）")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("-m yarn-cluster")]),t._v("使用 Yarn Per Job Cluster 模式提交 job")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("flink list")]),t._v("查看所有运行中的 job\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("-a")]),t._v("包括终止的 job")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("flink cancel <job-id>")])])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("bin/yarn-session.sh -n 2 -s 2 -jm 1024 -tm 1024 -nm test -d")]),t._v("启用 Yarn 模式 session cluster\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("-n")]),t._v("为 TaskManager 的数量。新版本取消了这个参数，动态分配 TaskManager 以防资源不足时作业等待")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("-s")]),t._v("为每个 TaskManager 的 slot 数量")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("-jm")]),t._v("JobManager 的内存（MB）")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("-tm")]),t._v("每个 TaskManager 的内存（MB）")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("-nm")]),t._v("Yarn 的 APP 名")]),t._v(" "),r("li",[t._v("如果需要停止任务，需要在 Yarn 控制台停止 application")])])])]),t._v(" "),r("h3",{attrs:{id:"流处理-api"}},[t._v("流处理 API")]),t._v(" "),r("h4",{attrs:{id:"environment"}},[t._v("Environment")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("getExecutionEnvironment")]),t._v(" "),r("ul",[r("li",[t._v("创建执行环境，类似于 spark context")]),t._v(" "),r("li",[t._v("会自动判断是本地模式还是远程模式，生产/开发环境切换时不需要改代码")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("createLocalEnvironment")]),t._v(" "),r("ul",[r("li",[t._v("使用本地多线程模拟一个环境。用于开发测试")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("createRemoteEnvironment")]),t._v(" "),r("ul",[r("li",[t._v("创建一个集群环境")]),t._v(" "),r("li",[t._v("需要指定 IP、端口、jar 包")])])])]),t._v(" "),r("h4",{attrs:{id:"source"}},[t._v("Source")]),t._v(" "),r("ul",[r("li",[t._v("从集合读数据（从内存读数据）\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.fromCollection")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("env.fromElements")])])])]),t._v(" "),r("li",[t._v("从文件读数据\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("env.readTextFile")])])])]),t._v(" "),r("li",[t._v("从 Kafka 读数据\n"),r("ul",[r("li",[t._v("需要引入 flink-connector-kafka 的依赖包")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("env.addSource(new FlinkKafkaConsumer011<String>(topic, deserializer, props))")])])])]),t._v(" "),r("li",[t._v("自定义\n"),r("ul",[r("li",[t._v("继承"),r("code",{pre:!0},[t._v("SourceFunction")]),t._v("接口")]),t._v(" "),r("li",[t._v("实现"),r("code",{pre:!0},[t._v("run")]),t._v("方法\n"),r("ul",[r("li",[t._v("用来循环收集数据")])])]),t._v(" "),r("li",[t._v("实现"),r("code",{pre:!0},[t._v("cancel")]),t._v("方法\n"),r("ul",[r("li",[t._v("用来清理资源")])])])])])]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySource")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceFunction")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" running "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SourceContext")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("running"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    running "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),r("h4",{attrs:{id:"transform"}},[t._v("Transform")]),t._v(" "),r("ul",[r("li",[t._v("基本转换算子/简单转换算子（one-to-one）\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("map")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("flatMap")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("filter")])])])]),t._v(" "),r("li",[t._v("聚合操作相关算子\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("keyBy")]),t._v(" "),r("ul",[r("li",[t._v("并不是转换，而是分区")]),t._v(" "),r("li",[t._v("把数据分为多个分区，每个分区都有相同的 key")]),t._v(" "),r("li",[t._v("内部使用 hash 实现")]),t._v(" "),r("li",[t._v("数据格式从"),r("code",{pre:!0},[t._v("DataStream")]),t._v("变为其子类"),r("code",{pre:!0},[t._v("KeyedStream")]),t._v(" "),r("ul",[r("li",[t._v("基于"),r("code",{pre:!0},[t._v("KeyedStream")]),t._v("可以做一些聚合操作")])])])])]),t._v(" "),r("li",[t._v("滚动聚合算子(Rolling Aggregation)。可以对"),r("code",{pre:!0},[t._v("KeyedStream")]),t._v("执行\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("sum")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("min")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("max")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("minBy")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("maxBy")])])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("reduce")]),t._v(" "),r("ul",[r("li",[t._v("输入"),r("code",{pre:!0},[t._v("KeyedStream")]),t._v("，输出"),r("code",{pre:!0},[t._v("DataStream")])]),t._v(" "),r("li",[t._v("传入一个 ReduceFunction")])])]),t._v(" "),r("li",[t._v("多流算子\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("split")]),t._v("（过时。新版本使用 side output API。见下文）\n"),r("ul",[r("li",[t._v("输入"),r("code",{pre:!0},[t._v("DataStream")]),t._v("输出"),r("code",{pre:!0},[t._v("SplitStream")])]),t._v(" "),r("li",[t._v("逻辑上是输出多个流，物理上还是一个流，只不过给数据打上了不同的标签，然后调用"),r("code",{pre:!0},[t._v("select")]),t._v("算子")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("connect")]),t._v(" "),r("ul",[r("li",[t._v("逻辑上连接两个流。保持数据类型不变，两个流仍然互相独立，数据类型可以不同")]),t._v(" "),r("li",[t._v("输入"),r("code",{pre:!0},[t._v("DataStream")]),t._v("，输出"),r("code",{pre:!0},[t._v("ConnectedStream")])]),t._v(" "),r("li",[t._v("通过执行"),r("code",{pre:!0},[t._v("map")]),t._v("或者"),r("code",{pre:!0},[t._v("flatMap")]),t._v("才能把"),r("code",{pre:!0},[t._v("ConnectedStream")]),t._v("变为"),r("code",{pre:!0},[t._v("DataStream")])])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("union")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("connect")]),t._v("只能合并两个流。"),r("code",{pre:!0},[t._v("union")]),t._v("可以合并多个流")]),t._v(" "),r("li",[t._v("要求：所有流的数据类型必需相同")])])])])])])])]),t._v(" "),r("h4",{attrs:{id:"sink"}},[t._v("Sink")]),t._v(" "),r("ul",[r("li",[t._v("写文件\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("writeAsCsv")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("writeAsText")])])])]),t._v(" "),r("li",[t._v("输出到 socket\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("writeToSocket")])])])]),t._v(" "),r("li",[t._v("自定义\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("addSink(new MySink())")])]),t._v(" "),r("li",[t._v("比如写入到 kafka, redis, ElasticSearch, JDBC 等")])])]),t._v(" "),r("li",[t._v("第三方\n"),r("ul",[r("li",[t._v("Apache Bahir，给 Flink 提供第三方连接器\n"),r("ul",[r("li",[t._v("ActiveMQ / Flume / Redis / Akka / Netty")])])]),t._v(" "),r("li",[t._v("Kafka")])])])]),t._v(" "),r("h4",{attrs:{id:"window"}},[t._v("Window")]),t._v(" "),r("ul",[r("li",[t._v("把无界流拆分为有界流")]),t._v(" "),r("li",[t._v("窗口类型\n"),r("ul",[r("li",[t._v("时间窗口(time window)\n"),r("ul",[r("li",[t._v("滚动时间窗口(Tumbling Time Window)\n"),r("ul",[r("li",[t._v("时间对齐，窗口长度固定，没有重叠")])])]),t._v(" "),r("li",[t._v("滑动时间窗口(Sliding Time Windows)\n"),r("ul",[r("li",[t._v("窗口长度固定，滑动距离固定，可以有重叠")])])]),t._v(" "),r("li",[t._v("会话窗口(Session Window)\n"),r("ul",[r("li",[t._v("时间不对齐。根据事件判断窗口")]),t._v(" "),r("li",[t._v("如果一段时间没有收到数据，则认为会话结束")])])])])]),t._v(" "),r("li",[t._v("计数窗口(count window)\n"),r("ul",[r("li",[t._v("滚动计数窗口")]),t._v(" "),r("li",[t._v("滑动计数窗口")])])])])]),t._v(" "),r("li",[t._v("API\n"),r("ul",[r("li",[t._v("窗口分配函数\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("window")]),t._v(" "),r("ul",[r("li",[t._v("创建一个窗口。必需在"),r("code",{pre:!0},[t._v("keyBy")]),t._v("之后才能调用")]),t._v(" "),r("li",[t._v("后面需要接一个聚合函数，用来聚合 window 里面的数据")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("timeWindow")]),t._v(" "),r("ul",[r("li",[t._v("创建一个时间窗口。必需在"),r("code",{pre:!0},[t._v("keyBy")]),t._v("之后才能调用")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("countWindow")]),t._v(" "),r("ul",[r("li",[t._v("创建一个计数窗口。必需在"),r("code",{pre:!0},[t._v("keyBy")]),t._v("之后才能调用")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("windowAll")]),t._v(" "),r("ul",[r("li",[t._v("可以直接在 DataStream 上调用。把所有数据放到一个分区中，并行度变为 1")]),t._v(" "),r("li",[t._v("不建议用")])])])])]),t._v(" "),r("li",[t._v("增量聚合函数(incremental aggregation functions)\n"),r("ul",[r("li",[t._v("每条数据来的时候就会计算，需要保持一个简单的状态")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("reduce")]),t._v(", "),r("code",{pre:!0},[t._v("aggregate")])])])]),t._v(" "),r("li",[t._v("全窗口函数(full window functions)\n"),r("ul",[r("li",[t._v("先收集数据。等到要计算的时候再遍历数据进行计算。类似于 Spark 的微批")]),t._v(" "),r("li",[t._v("不需要维持状态，但是需要保持数据")]),t._v(" "),r("li",[t._v("可以看到更多的元数据信息")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("process")]),t._v(", "),r("code",{pre:!0},[t._v("apply")])])])]),t._v(" "),r("li",[t._v("其他\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("trigger")]),t._v(" "),r("ul",[r("li",[t._v("定义 window 什么时候关闭，触发计算输出结果")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("evictor")]),t._v(" "),r("ul",[r("li",[t._v("从窗口中移出某些数据")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("allowedLateness")]),t._v(" "),r("ul",[r("li",[t._v("允许处理迟到数据")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("sideOutputLateData")]),t._v(" "),r("ul",[r("li",[t._v("使用侧输出流输出迟到数据。即使窗口关闭了也可以收集数据")])])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("getSideOutput")]),t._v(" "),r("ul",[r("li",[t._v("获取侧输出流")])])])])])])])]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接使用window方法创建任意窗口")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("window")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TumblingProcessingTimeWindows")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("seconds")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滚动时间窗口")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("window")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventTimeSessionWindows")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withGap")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("minutes")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会话窗口")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 快速创建时间窗口")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeWindow")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("seconds")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滚动时间窗口")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeWindow")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("seconds")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Time")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("seconds")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滑动时间窗口")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 快速创建计数窗口")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("countWindow")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滚动计数窗口")]),t._v("\nstream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("countWindow")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 滑动计数窗口")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"底层-api"}},[t._v("底层 API")]),t._v(" "),r("p",[t._v("ProcessFunction API")]),t._v(" "),r("h4",{attrs:{id:"底层-api-概述"}},[t._v("底层 API 概述")]),t._v(" "),r("ul",[r("li",[t._v("流处理 API 无法访问时间戳或 watermark")]),t._v(" "),r("li",[t._v("底层 API 可以访问：\n"),r("ul",[r("li",[t._v("访问时间戳")]),t._v(" "),r("li",[t._v("watermark")]),t._v(" "),r("li",[t._v("注册定时事件")]),t._v(" "),r("li",[t._v("输出特定事件（比如超时）")])])]),t._v(" "),r("li",[t._v("用来构建事件驱动应用")]),t._v(" "),r("li",[t._v("Flink SQL 就是基于底层 API 实现的")])]),t._v(" "),r("h4",{attrs:{id:"process-function"}},[t._v("Process Function")]),t._v(" "),r("ul",[r("li",[t._v("分类\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("ProcessFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("KeyedProcessFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("CoProcessFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("ProcessJoinFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("BroadcastProcessFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("KeyedBroadcastFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("ProcessWindowFunction")])]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("ProcessAllWindowFunction")])])])]),t._v(" "),r("li",[t._v("用法："),r("code",{pre:!0},[t._v("stream.process(ProcessFunction)")])]),t._v(" "),r("li",[t._v("所有 ProcessFunction 都是 RichFunction，有生命周期")])]),t._v(" "),r("h4",{attrs:{id:"keyedprocessfunction"}},[t._v("KeyedProcessFunction")]),t._v(" "),r("p",[t._v("最常见的 Process Function")]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[t._v("stream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyKPF")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyKPF")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyedProcessFunction")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tuple")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("processElement")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collector")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("onTimer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timestamp"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OnTimerContext")]),t._v(" ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collector")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),r("ul",[r("li",[t._v("可以通过"),r("code",{pre:!0},[t._v("ctx")]),t._v("获取以下内容\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("timestamp")]),t._v("当前时间戳")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("key")]),t._v("分区键")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("output")]),t._v("定义侧输出流")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("timerService")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("currentProcessingTime")]),t._v("获取处理时间")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("currentWaterMark")]),t._v("获取水位")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("registerEventTimeTimer")]),t._v("注册事件时间定时器")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("registerProcessTimeTimer")]),t._v("注册处理事件定时器")])])])])])]),t._v(" "),r("h4",{attrs:{id:"侧输出流"}},[t._v("侧输出流")]),t._v(" "),r("p",[t._v("SideOutput")]),t._v(" "),r("p",[t._v("自定义侧输出流实现分流操作")]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputTag")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" sideOutputTag "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputTag")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag-name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleOutputStreamOperator")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mainStream "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProcessFunction")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("processElement")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collector")]),r("span",{pre:!0,attrs:{class:"token generics"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xxx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      out"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("collect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      ctx"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sideOutputTag"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmainStream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmainStream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSideOutput")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sideOutputTag"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"table-api"}},[t._v("Table API")]),t._v(" "),r("h4",{attrs:{id:"概述"}},[t._v("概述")]),t._v(" "),r("ul",[r("li",[t._v("批处理/流处理统一的上层 API")]),t._v(" "),r("li",[t._v("Flink 是 SQL 实现了 SQL 标准的 Apache Calcite")])]),t._v(" "),r("h4",{attrs:{id:"表和流"}},[t._v("表和流")]),t._v(" "),r("ul",[r("li",[t._v("表(table)\n"),r("ul",[r("li",[t._v("表的层级结构\n"),r("ul",[r("li",[t._v("catalog - database - table")]),t._v(" "),r("li",[t._v("默认 catalog 和 database 都是 default")])])]),t._v(" "),r("li",[t._v("分类\n"),r("ul",[r("li",[t._v("常规表，通常是和真实的数据源绑定\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('tableEnv.connect(...).withFormat(...).withSchema(...).createTemporaryTable("name")')])])])]),t._v(" "),r("li",[t._v("虚拟表(view)，通常是内存中的数据中间状态")])])])])]),t._v(" "),r("li",[t._v("表和流的转换\n"),r("ul",[r("li",[t._v("Flink 里面的表是动态表(Dynamic Table)")]),t._v(" "),r("li",[t._v("其实表的内容是 Flink 所维护的状态")]),t._v(" "),r("li",[t._v("接收到新数据的时候，更新动态表，即更新状态")]),t._v(" "),r("li",[t._v("输出表的时候，把表的更新以流的方式输出出去")])])])]),t._v(" "),r("h4",{attrs:{id:"更新模式"}},[t._v("更新模式")]),t._v(" "),r("p",[t._v("更新模式，决定了流式输出如何和外部连接器之间交换数据")]),t._v(" "),r("ul",[r("li",[t._v("Append（追加模式）\n"),r("ul",[r("li",[t._v("仅插入")])])]),t._v(" "),r("li",[t._v("Retract（撤回/替换模式）\n"),r("ul",[r("li",[t._v("支持写入、删除、更新（删除+写入）")]),t._v(" "),r("li",[t._v("撤回原数据，更新为新的数据")]),t._v(" "),r("li",[t._v("返回"),r("code",{pre:!0},[t._v("(false, 原数据)")]),t._v("和"),r("code",{pre:!0},[t._v("(true, 新数据)")])])])]),t._v(" "),r("li",[t._v("Upsert（更新插入模式）\n"),r("ul",[r("li",[t._v("更新和插入被视为 upsert，删除被视为 delete")]),t._v(" "),r("li",[t._v("ElasticSearch/MySQL/Redis 等支持 Upsert 模式")])])])]),t._v(" "),r("h4",{attrs:{id:"时间属性"}},[t._v("时间属性")]),t._v(" "),r("ul",[r("li",[t._v("Time Attributes")]),t._v(" "),r("li",[t._v("基于时间的操作（比如窗口操作）需要定义时间语义和时间数据来源")]),t._v(" "),r("li",[t._v("定义处理时间(Processing TIme)\n"),r("ul",[r("li",[t._v("定义 schema 的时候通过添加"),r("code",{pre:!0},[t._v(".proctime")]),t._v("来"),r("strong",[t._v("创建")]),t._v("处理时间字段，类型为"),r("code",{pre:!0},[t._v("TIMESTAMP(3)")])]),t._v(" "),r("li",[t._v("只能作为 schema 里面的最后一个字段")]),t._v(" "),r("li",[t._v("从流创建："),r("code",{pre:!0},[t._v('tableEnv.fromDataStream(stream, "id, timestamp, pt.proctime");')])]),t._v(" "),r("li",[t._v("从数据源创建："),r("code",{pre:!0},[t._v('xx.withSchema(new Schema().field("id", DataTypes.STRING()).field("pt", DataTypes.TIMESTAMP(3)).proctime());')])]),t._v(" "),r("li",[t._v("用 SQL 创建"),r("code",{pre:!0},[t._v("create table xxx(id varchar(20) not null, ps as proctime())")])])])]),t._v(" "),r("li",[t._v("定义事件时间(Event Time)\n"),r("ul",[r("li",[t._v("定义 schema 的时候通过添加"),r("code",{pre:!0},[t._v("rowtime")]),t._v("来"),r("strong",[t._v("指定")]),t._v("事件时间字段，类型为"),r("code",{pre:!0},[t._v("TIMESTAMP(3)")]),t._v("（覆盖原数据类型）")]),t._v(" "),r("li",[t._v("从流创建："),r("code",{pre:!0},[t._v('tableEnv.fromDataStream(stream, "id, timestamp.rowtime")')]),t._v(" "),r("ul",[r("li",[t._v("如果不想数据类型被覆盖，可以使用"),r("code",{pre:!0},[t._v('tableEnv.fromDataStream(stream, "id, timestamp as ts, rt.rowtime");')]),t._v("创建此字段")])])]),t._v(" "),r("li",[t._v("从数据源创建："),r("code",{pre:!0},[t._v('xxx.withSchema(new Schema().field("timestamp", DataTypes.BITINT()).rowtime(new Rowtime().timestampsFromField("timestamp")).watermarksPeriodicBounded(1000));')])]),t._v(" "),r("li",[t._v("用 SQL 创建"),r("code",{pre:!0},[t._v("create table xxx(id varchar(20) not null, rt as to_timestamp(from_unixtime(ts)), watermark for rt as rt - internal '1' second)")])])])])]),t._v(" "),r("h4",{attrs:{id:"窗口"}},[t._v("窗口")]),t._v(" "),r("ul",[r("li",[t._v("Table API 中有两种窗口\n"),r("ul",[r("li",[t._v("Group Windows（分组窗口）\n"),r("ul",[r("li",[t._v("根据时间或计数，把行聚合到一个 group 中，对每个 group 执行聚合函数")]),t._v(" "),r("li",[t._v("从数据源创建\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('table.window(SomeWindow.as("w")).groupBy("w, a").select("a, b.sum")')]),t._v(" "),r("ul",[r("li",[t._v("窗口字段为"),r("code",{pre:!0},[t._v("w")]),t._v("。窗口必需有名字，才能被引用")]),t._v(" "),r("li",[t._v("根据字段"),r("code",{pre:!0},[t._v("a")]),t._v("和窗口字段"),r("code",{pre:!0},[t._v("w")]),t._v("进行分组")])])]),t._v(" "),r("li",[t._v("预定义好的窗口\n"),r("ul",[r("li",[t._v("滚动窗口(Tumbling windows)\n"),r("ul",[r("li",[t._v("事件时间："),r("code",{pre:!0},[t._v('table.window(Tumble.over("10.minutes").on("rt").as("w"))')])]),t._v(" "),r("li",[t._v("处理时间："),r("code",{pre:!0},[t._v('table.window(Tumble.over("10.minutes").on("pt").as("w"))')])]),t._v(" "),r("li",[t._v("行数："),r("code",{pre:!0},[t._v('table.window(Tumble.over("10.rows").on("pt").as("w"))')])])])]),t._v(" "),r("li",[t._v("滑动窗口(Sliding windows)\n"),r("ul",[r("li",[t._v("同上，只不过把"),r("code",{pre:!0},[t._v("Tumble")]),t._v("改成"),r("code",{pre:!0},[t._v("Slide")])])])]),t._v(" "),r("li",[t._v("会话窗口(Session windows)\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('table.window(Session.withGap("10.minutes").on("rt").as("w"))')])])])])])])])]),t._v(" "),r("li",[t._v("用 SQL 创建\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("TUMBLE(time_attr, interval)")]),t._v("滚动窗口")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("HOP(time_attr, step, length)")]),t._v("滑动窗口")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("SESSION(time_attr, interval)")]),t._v("会话窗口")]),t._v(" "),r("li",[t._v("获取窗口起始时间和结束时间："),r("code",{pre:!0},[t._v("TUMBLE_START/TUMBLE_END(rt, interval '10' second)")])])])])])]),t._v(" "),r("li",[t._v("Over Windows\n"),r("ul",[r("li",[t._v("原生 SQL 语句就有 over window")]),t._v(" "),r("li",[t._v("针对每一行，计算相邻行范围的聚合")]),t._v(" "),r("li",[t._v("只能聚合当前事件之前的事件，不能聚合当前事件之后的事件")]),t._v(" "),r("li",[t._v("从数据源创建\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('table.window(SomeWindow.as("w").select("a, b.sum over w, c.min over w"))')])]),t._v(" "),r("li",[t._v("预定义好的窗口\n"),r("ul",[r("li",[t._v("无界窗口\n"),r("ul",[r("li",[t._v("基于时间（聚合之前所有时间的事件）："),r("code",{pre:!0},[t._v('table.window(Over.partitionBy("a").orderBy("rt").preceding(UNBOUNDED_RANGE).as("w"))')])]),t._v(" "),r("li",[t._v("基于行数（聚合之前所有行的事件）："),r("code",{pre:!0},[t._v('table.window(Over.partitionBy("a").orderBy("rt").preceding(UNBOUNDED_ROW).as("w"))')])])])]),t._v(" "),r("li",[t._v("有界窗口\n"),r("ul",[r("li",[t._v("基于时间（聚合之前一段时间的事件）："),r("code",{pre:!0},[t._v('table.window(Over.partitionBy("a").orderBy("rt").preceding("1.minutes").as("w"))')])]),t._v(" "),r("li",[t._v("基于行数（聚合之前一些行的事件）："),r("code",{pre:!0},[t._v('table.window(Over.partitionBy("a").orderBy("rt").preceding("10.rows").as("w"))')])])])])])])])]),t._v(" "),r("li",[t._v("使用 SQL 创建\n"),r("ul",[r("li",[t._v("所有聚合必需在同一个窗口，即相同的分区、排序和范围")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("select xxx over(partition by xxx order by pt rows between 2 preceding and current row) from xxx")])])])])])])])])]),t._v(" "),r("h4",{attrs:{id:"内置函数"}},[t._v("内置函数")]),t._v(" "),r("ul",[r("li",[t._v("比较函数\n"),r("ul",[r("li",[t._v("SQL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("=")]),t._v(" / "),r("code",{pre:!0},[t._v(">")]),t._v(" / "),r("code",{pre:!0},[t._v("<")]),t._v(" / …")])])]),t._v(" "),r("li",[t._v("DSL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("===")]),t._v(" / "),r("code",{pre:!0},[t._v(">")]),t._v(" / "),r("code",{pre:!0},[t._v("<")]),t._v(" / …")])])])])]),t._v(" "),r("li",[t._v("逻辑函数\n"),r("ul",[r("li",[t._v("SQL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("AND")]),t._v(" / "),r("code",{pre:!0},[t._v("OR")]),t._v(" / "),r("code",{pre:!0},[t._v("IS FALSE")]),t._v(" / "),r("code",{pre:!0},[t._v("NOT")]),t._v(" / …")])])]),t._v(" "),r("li",[t._v("DSL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("||")]),t._v(" / "),r("code",{pre:!0},[t._v(".isFalse")]),t._v(" / "),r("code",{pre:!0},[t._v("!")]),t._v(" / …")])])])])]),t._v(" "),r("li",[t._v("算数函数\n"),r("ul",[r("li",[t._v("SQL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("+")]),t._v(" / "),r("code",{pre:!0},[t._v("-")]),t._v(" / "),r("code",{pre:!0},[t._v("*")]),t._v(" / "),r("code",{pre:!0},[t._v("/")]),t._v(" / "),r("code",{pre:!0},[t._v("power(a,b)")]),t._v(" / …")])])]),t._v(" "),r("li",[t._v("DSL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("+")]),t._v(" / "),r("code",{pre:!0},[t._v("a.power(b)")]),t._v(" / …")])])])])]),t._v(" "),r("li",[t._v("字符串函数\n"),r("ul",[r("li",[t._v("SQL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("||")]),t._v(" / "),r("code",{pre:!0},[t._v("UPPER")]),t._v(" / "),r("code",{pre:!0},[t._v("CHAR_LENGTH")]),t._v(" / …")])])]),t._v(" "),r("li",[t._v("DSL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("+")]),t._v(" / "),r("code",{pre:!0},[t._v(".upperCase()")]),t._v(" / "),r("code",{pre:!0},[t._v(".charLength()")]),t._v(" / …")])])])])]),t._v(" "),r("li",[t._v("时间函数\n"),r("ul",[r("li",[t._v("SQL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("DATE")]),t._v(" / "),r("code",{pre:!0},[t._v("TIMESTAMP")]),t._v(" / "),r("code",{pre:!0},[t._v("CURRENT_TIME")]),t._v(" / "),r("code",{pre:!0},[t._v("INTERVAL")]),t._v(" / …")])])]),t._v(" "),r("li",[t._v("DSL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v(".toDate")]),t._v(" / "),r("code",{pre:!0},[t._v("toTimestamp")]),t._v(" / "),r("code",{pre:!0},[t._v("currentTime()")]),t._v(" / "),r("code",{pre:!0},[t._v(".days")]),t._v(" / "),r("code",{pre:!0},[t._v(".minutes")]),t._v(" / …")])])])])]),t._v(" "),r("li",[t._v("聚合函数\n"),r("ul",[r("li",[t._v("SQL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("COUNT()")]),t._v(" / "),r("code",{pre:!0},[t._v("SUM()")]),t._v(" / "),r("code",{pre:!0},[t._v("RANK()")]),t._v(" / "),r("code",{pre:!0},[t._v("ROW_NUMEBR()")]),t._v(" / …")])])]),t._v(" "),r("li",[t._v("DSL\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v(".count")]),t._v(" / "),r("code",{pre:!0},[t._v(".sum0")]),t._v(" / …")])])])])])]),t._v(" "),r("h4",{attrs:{id:"udf"}},[t._v("UDF")]),t._v(" "),r("ul",[r("li",[t._v("自定义函数")]),t._v(" "),r("li",[t._v("通过"),r("code",{pre:!0},[t._v("tableEnv.registerFunction")]),t._v("注册函数")]),t._v(" "),r("li",[t._v("标量函数(Scalar Functions)\n"),r("ul",[r("li",[t._v("输入一个值，输出一个值")]),t._v(" "),r("li",[t._v("继承"),r("code",{pre:!0},[t._v("ScalarFunction")]),t._v("并实现方法"),r("code",{pre:!0},[t._v("eval")])])])]),t._v(" "),r("li",[t._v("表函数(Table Functions)\n"),r("ul",[r("li",[t._v("输入一个值，输出一个表")]),t._v(" "),r("li",[t._v("继承"),r("code",{pre:!0},[t._v("TableFunction")]),t._v("并实现"),r("code",{pre:!0},[t._v("eval")]),t._v("方法")])])]),t._v(" "),r("li",[t._v("聚合函数(Aggregate Functions)\n"),r("ul",[r("li",[t._v("输入一个表，输出一个值")]),t._v(" "),r("li",[t._v("继承"),r("code",{pre:!0},[t._v("AggregateFunction")]),t._v("并实现"),r("code",{pre:!0},[t._v("createAccumulator")]),t._v(" / "),r("code",{pre:!0},[t._v("accumulate")]),t._v(" / "),r("code",{pre:!0},[t._v("getValue")]),t._v("方法")])])]),t._v(" "),r("li",[t._v("表聚合函数(Table Aggregate Functions)\n"),r("ul",[r("li",[t._v("输入一个表，输出一个表")]),t._v(" "),r("li",[t._v("继承"),r("code",{pre:!0},[t._v("TableAggregateFunction")]),t._v("并实现"),r("code",{pre:!0},[t._v("createAccumulator")]),t._v(" / "),r("code",{pre:!0},[t._v("accumulate")]),t._v(" / "),r("code",{pre:!0},[t._v("emitValue")]),t._v("方法")])])])]),t._v(" "),r("h4",{attrs:{id:"示例程序"}},[t._v("示例程序")]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建流环境")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),t._v(" env "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecutionEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XXX"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从流环境创建表环境")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamTableEnvironment")]),t._v(" tableEnv "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamTableEnvironment")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("env"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接创建表")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTemporaryTable")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DSL")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Table")]),t._v(" table "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromDataStream")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SQL")]),t._v("\ntable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTemporaryView")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" table"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Table")]),t._v(" result "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqlQuery")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select * from xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h4",{attrs:{id:"输入输出"}},[t._v("输入输出")]),t._v(" "),r("pre",{staticClass:"language-java"},[r("code",{pre:!0,attrs:{class:"language-java"}},[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接数据源")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("path")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withFormat")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Csv")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withSchema")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Schema")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("field")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataTypes")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("STRING")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTemporaryTable")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"table-name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理数据")]),t._v("\ntable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupBy")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id, id.count as count, temp.avg as avg"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqlQuery")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select id, count(id) as cnt, avg(temp) as avgT from xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出到流")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("toAppendStream")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resultTable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Row")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("toRetractStream")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resultTable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Row")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出到文件，仅支持append模式")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FIleSystem")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("path")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withFormat")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Csv")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withSchema")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Schema")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("field")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataTypes")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("STRING")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTemporaryTable")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output-table-name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nresultTable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertInto")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output-table-name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接Kafka。仅支持append模式")]),t._v("\ntableEnv"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kafka")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("version")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.11"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("topic")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("property")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bootstrap.servers"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9092"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withFormat")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Csv")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("withSchema")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Schema")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("field")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataTypes")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("STRING")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTemporaryTable")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output-table-name"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}]};t.exports={attributes:{title:"Big Data(Part 9)",description:"Flink"},vue:{render:r.render,staticRenderFns:r.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=r.render,this.$options.staticRenderFns=r.staticRenderFns}}}}},425:function(t,n,e){t.exports=e.p+"img/9-1.933e908.png"},426:function(t,n,e){t.exports=e.p+"img/9-2.e9e60ab.png"}}]);