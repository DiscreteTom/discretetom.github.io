(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{1179:function(e,t){const n={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"frontmatter-markdown"},[n("ul",[n("li",[e._v("子集树与排列树\n"),n("ul",[n("li",[e._v("子集树 0-1背包问题 通常有"),n("code",{pre:!0},[e._v("2^n")]),e._v("个节点")]),e._v(" "),n("li",[e._v("排列树 旅行商问题 通常有"),n("code",{pre:!0},[e._v("n!")]),e._v("个节点")])])]),e._v(" "),n("li",[e._v("显约束与隐约束\n"),n("ul",[n("li",[e._v("显约束 对解空间中分量取值的限定")]),e._v(" "),n("li",[e._v("隐约束 为满足问题的解而对不同分量之间施加的约束")])])]),e._v(" "),n("li",[e._v("完全解、部分解、可行解、最优解、不可行解")]),e._v(" "),n("li",[e._v("递归回溯与迭代回溯")])]),e._v(" "),n("p",[e._v("问题求解过程体现为对解空间的带有回溯的深度优先树搜索")]),e._v(" "),n("p",[e._v("简单的剪枝函数的设计")]),e._v(" "),n("p",[e._v("回溯法处理“存在性问题”还算能用，处理“最优性问题”时需要花费大量的时间")]),e._v(" "),n("h2",{attrs:{id:"装载问题"}},[e._v("装载问题")]),e._v(" "),n("p",[e._v("这里的装载问题是之前装载问题和背包问题的变种")]),e._v(" "),n("p",[e._v("改变的地方：有两艘船，载重量分别是"),n("code",{pre:!0},[e._v("c1")]),e._v("和"),n("code",{pre:!0},[e._v("c2")]),e._v("，所有集装箱的载重量之和"),n("code",{pre:!0},[e._v("w")]),e._v("小于"),n("code",{pre:!0},[e._v("c1+c2")])]),e._v(" "),n("p",[e._v("问是否存在一种解决方案可以使这些集装箱全部装上轮船")]),e._v(" "),n("p",[e._v("思路：第一艘船尽可能装满，剩余的装到第二艘船")]),e._v(" "),n("h2",{attrs:{id:"图的m着色问题"}},[e._v("图的m着色问题")]),e._v(" "),n("p",[e._v("注意四色定理只存在于平面图，并不是所有图都可以用四种颜色染色")]),e._v(" "),n("h2",{attrs:{id:"旅行商问题"}},[e._v("旅行商问题")]),e._v(" "),n("p",[e._v("寻找最短回路")]),e._v(" "),n("h2",{attrs:{id:"作业调度问题略"}},[e._v("作业调度问题（略）")]),e._v(" "),n("h2",{attrs:{id:"n皇后略"}},[e._v("n皇后（略）")])])}]};e.exports={attributes:{layout:"collection",title:"回溯法",collection:"AlgorithmDesignAndAnalyze"},vue:{render:n.render,staticRenderFns:n.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=n.render,this.$options.staticRenderFns=n.staticRenderFns}}}}}}]);