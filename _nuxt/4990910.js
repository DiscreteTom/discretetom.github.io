(window.webpackJsonp=window.webpackJsonp||[]).push([[94,1004,1005],{1145:function(t,n,e){t.exports=e.p+"img/1.d257bb5.png"},1146:function(t,n,e){t.exports=e.p+"img/2.fcf60f9.png"},1414:function(t,n,e){const r={render:function(){var t=this;t.$createElement;return t._self._c,t._m(0)},staticRenderFns:[function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("div",{staticClass:"frontmatter-markdown"},[r("h2",{attrs:{id:"基本知识"}},[t._v("基本知识")]),t._v(" "),r("ul",[r("li",[t._v("代码不区分大小写")]),t._v(" "),r("li",[t._v("两个减号及后面的字符为单行注释")]),t._v(" "),r("li",[t._v("电路功能分为顺序语句和并行语句两种")])]),t._v(" "),r("h2",{attrs:{id:"库library"}},[t._v("库Library")]),t._v(" "),r("p",[t._v("存放"),r("strong",[t._v("已编译")]),t._v("程序包和数据集合的地方。可以被调用")]),t._v(" "),r("p",[t._v("代码格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("library 库名"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuse 库名中的逻辑体名"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("代码实例：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("library")]),t._v(" ieee"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--打开ieee库")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" ieee"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("std_logic_1164"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--加载ieee中std_logic_1164包内的所有内容")]),t._v("\n")])]),t._v(" "),r("p",[t._v("库的种类")]),t._v(" "),r("ul",[r("li",[t._v("STD库 - VHDL标准库")]),t._v(" "),r("li",[t._v("IEEE库 - VHDL标准库的扩展")]),t._v(" "),r("li",[t._v("WORK库 - 用户自己的库")])]),t._v(" "),r("h2",{attrs:{id:"实体entity"}},[t._v("实体Entity")]),t._v(" "),r("p",[t._v("描述电路的外部特征（输入和输出）")]),t._v(" "),r("p",[t._v("代码格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("entity 实体名 is\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("类属参数说明"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("端口说明"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nend entity 实体名"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("端口说明格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("port"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t端口名a1, "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., 端口名an "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 方向 类型"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\t端口名x1, "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("., 端口名xn "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 方向 类型\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("代码实例：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" HALFADD "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("          "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--实体的名字为HALFADD半加器")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tA"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B       "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--端口A和B，输入端口，输入数据类型为bit")]),t._v("\n\t\tSUM"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CARRY "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--端口SUM和CARRY，输出端口，输出数据类型为bit")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" HALFADD"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("端口方向：")]),t._v(" "),r("ul",[r("li",[t._v("in - 输入端口，此类型的信号不能被赋值")]),t._v(" "),r("li",[t._v("out - 输出端口")]),t._v(" "),r("li",[t._v("inout - 双向端口")]),t._v(" "),r("li",[t._v("buffer - 缓冲端口")])]),t._v(" "),r("h2",{attrs:{id:"构造体architecture"}},[t._v("构造体Architecture")]),t._v(" "),r("p",[t._v("描述了电路的内部行为与数据流动")]),t._v(" "),r("h3",{attrs:{id:"基本代码格式"}},[t._v("基本代码格式")]),t._v(" "),r("p",[t._v("代码格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("architecture 构造体名 of 实体名 is\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("说明语句"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nbegin\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("功能描述语句"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nend architecture 构造体名"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("说明语句包括了内部信号、常数、元件、数据类型、函数定义")]),t._v(" "),r("h3",{attrs:{id:"数据流描述"}},[t._v("数据流描述")]),t._v(" "),r("p",[t._v("代码实例（半加器）：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("architecture")]),t._v(" BEHAVE "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" HALFADD "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--构造体名为BEHAVE，属于HALFADD")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n\tSUM "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" A "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("xor")]),t._v(" B"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('--把"A异或B"赋值给SUM')]),t._v("\n\tCARRY "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" A "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" B"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v('--把"A与B"赋值给CARRY')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("architecture")]),t._v(" BEHAVE"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"结构描述"}},[t._v("结构描述")]),t._v(" "),r("ul",[r("li",[t._v("组件Component类似于高级语言中能够被调用的函数")]),t._v(" "),r("li",[t._v("一个entity内部可以包含很多component")]),t._v(" "),r("li",[t._v("VHDL库中有很多component")]),t._v(" "),r("li",[r("strong",[t._v("component之间使用信号signal连接")]),t._v("，所以构造体通常要有内部信号声明")]),t._v(" "),r("li",[t._v("使用port map表明组件与实体信号的映射关系")])]),t._v(" "),r("p",[t._v("实例：假设有如下两个实体")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" and_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" X "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" and_gate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" or_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" X "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" or_gate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("可以看到实体的声明类似于高级语言中函数的声明。我们只需要知道接口port即可，不必关心内部实现，即architecture")]),t._v(" "),r("p",[t._v("此处举例为了简单起见写了一个与门一个或门。如果有实体要调用这两个门：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" and_or_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tin1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" in2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" in3"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" in4 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tx "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" and_or_gate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("architecture")]),t._v(" behave "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" and_or_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("component")]),t._v(" and_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" x "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("component")]),t._v(" and_gate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("component")]),t._v(" or_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" x "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("component")]),t._v(" or_gate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signal")]),t._v(" out1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out2 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n\tg1 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" and_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tg2 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" and_gate "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in3"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in4"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tg3 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" or_gate  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("architecture")]),t._v(" behave"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("可以看到")]),t._v(" "),r("ul",[r("li",[t._v("如果要在architecture内部调用其他实体，需要"),r("strong",[t._v("在begin之前声明实体名与接口")])]),t._v(" "),r("li",[t._v("在调用时可以给每个组件名称，即本例中的g1/g2/g3。和变量与信号的声明类似，组件名称后面接冒号和组件的类名")]),t._v(" "),r("li",[t._v("使用port map来给组件设置信号对应关系")])]),t._v(" "),r("h3",{attrs:{id:"行为描述"}},[t._v("行为描述")]),t._v(" "),r("h4",{attrs:{id:"with-select-when语句"}},[t._v("with-select-when语句")]),t._v(" "),r("p",[t._v("实例：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" x "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" q "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"01"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"00"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"10"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"01"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"00"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("others")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("即x取00时q赋值为01，x取01时q赋值为10，x取其他情况时q赋值为00")]),t._v(" "),r("h4",{attrs:{id:"when-else语句"}},[t._v("when-else语句")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[t._v("y "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"00"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" s "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'0'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"11"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("即s取0时y赋值为00，否则y赋值为11")]),t._v(" "),r("h4",{attrs:{id:"if-else语句"}},[t._v("if-else语句")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'1'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\tc "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'0'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\tc "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'1'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h2",{attrs:{id:"vhdl数据对象data-objects"}},[t._v("VHDL数据对象(Data Objects)")]),t._v(" "),r("h3",{attrs:{id:"常量"}},[t._v("常量")]),t._v(" "),r("p",[t._v("常量声明格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("constant 常量名 "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 数据类型 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 初始值"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("可以在library/entity/architecture/process中定义")]),t._v(" "),r("h3",{attrs:{id:"变量"}},[t._v("变量")]),t._v(" "),r("p",[t._v("变量声明格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("variable 变量名 "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 数据类型 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("取值范围"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 初始值"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("ul",[r("li",[t._v("变量是"),r("strong",[t._v("局部量")]),t._v("，只能在进程process和子程序中使用")]),t._v(" "),r("li",[t._v("变量的赋值是理想的，没有延时（即使用组合逻辑实现而不是时序逻辑）")]),t._v(" "),r("li",[t._v("变量赋值符号为"),r("code",{pre:!0},[t._v(":=")])])]),t._v(" "),r("p",[t._v("数组变量的赋值方式：")]),t._v(" "),r("ul",[r("li",[t._v("整体赋值，使用双引号\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('temp := "10101001"')])])])]),t._v(" "),r("li",[t._v("逐位赋值，使用单引号\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v("temp(7) := '1")])])])]),t._v(" "),r("li",[t._v("多位赋值，使用双引号\n"),r("ul",[r("li",[r("code",{pre:!0},[t._v('temp(7 downto 4) := "1010"')])])])])]),t._v(" "),r("p",[r("strong",[t._v("有些变量类型需要声明范围")]),t._v("，比如integer类型就需要。而std_logic类型就不需要（std_logic取值范围比较小，而integer取值范围很大，手动声明范围可以减少元件的使用）")]),t._v(" "),r("p",[t._v("带取值范围的变量声明举例：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable")]),t._v(" x"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" integer "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("downto")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"信号"}},[t._v("信号")]),t._v(" "),r("ul",[r("li",[t._v("在architecture中定义")]),t._v(" "),r("li",[r("strong",[t._v("信号赋值符号为")]),r("code",{pre:!0},[t._v("<=")]),t._v("，"),r("strong",[t._v("但是初始化符号是")]),r("code",{pre:!0},[t._v(":=")])])]),t._v(" "),r("p",[t._v("信号声明格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[t._v("signal 信号名 "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" 数据类型 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 初始值"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"signal-vs-variable"}},[t._v("signal vs variable")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("属性")]),t._v(" "),r("th",[t._v("信号")]),t._v(" "),r("th",[t._v("变量")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("赋值符号")]),t._v(" "),r("td",[t._v("<=")]),t._v(" "),r("td",[t._v(":=")])]),t._v(" "),r("tr",[r("td",[t._v("功能")]),t._v(" "),r("td",[t._v("电路内部连接")]),t._v(" "),r("td",[t._v("内部数据交换")])]),t._v(" "),r("tr",[r("td",[t._v("作用范围")]),t._v(" "),r("td",[t._v("全局，可以在进程之间通信")]),t._v(" "),r("td",[t._v("进程内部")])]),t._v(" "),r("tr",[r("td",[t._v("行为")]),t._v(" "),r("td",[t._v("延迟赋值")]),t._v(" "),r("td",[t._v("立即赋值")])])])]),t._v(" "),r("p",[t._v("可以把信号理解为"),r("strong",[t._v("时序逻辑")]),t._v("中的信息传递，变量理解为"),r("strong",[t._v("组合逻辑")]),t._v("中的信息传递")]),t._v(" "),r("h2",{attrs:{id:"vhdl数据类型"}},[t._v("VHDL数据类型")]),t._v(" "),r("ul",[r("li",[t._v("整数integer\n"),r("ul",[r("li",[t._v("范围-(2^31-1)到(2^31-1)")]),t._v(" "),r("li",[t._v("能够使用加减乘除运算")])])]),t._v(" "),r("li",[t._v("实数real\n"),r("ul",[r("li",[t._v("范围-1*10^38到1*10^38")]),t._v(" "),r("li",[t._v("书写时"),r("strong",[t._v("一定要有小数点")]),t._v("，即使小数点后面全0")]),t._v(" "),r("li",[t._v("可以使用科学计数法，比如1.0e38")])])]),t._v(" "),r("li",[t._v("位bit\n"),r("ul",[r("li",[t._v("取值’0’或’1’，使用单引号括起来")]),t._v(" "),r("li",[t._v("不等同与数字中的0或1，只是两种逻辑状态的取值")])])]),t._v(" "),r("li",[t._v("位矢量bit_vector\n"),r("ul",[r("li",[t._v('使用双引号括起来的一组值，如"000"')]),t._v(" "),r("li",[t._v("使用时先声明矢量长度，如"),r("code",{pre:!0},[t._v("signal s : bit_vector(15 downto 0)")])])])]),t._v(" "),r("li",[t._v("布尔值boolean\n"),r("ul",[r("li",[t._v("取值true或false")]),t._v(" "),r("li",[t._v("和bit不同，没有数值含义。不能进行算术运算，可以进行逻辑运算")])])]),t._v(" "),r("li",[t._v("字符character\n"),r("ul",[r("li",[t._v("使用单引号括起来")]),t._v(" "),r("li",[t._v("区分字符’1’和位’1’时可以使用"),r("code",{pre:!0},[t._v("character('1')")])])])]),t._v(" "),r("li",[t._v("字符串string\n"),r("ul",[r("li",[t._v("使用双引号括起来")]),t._v(" "),r("li",[t._v("常用于程序的提示和说明")]),t._v(" "),r("li",[t._v("需要说明长度，如"),r("code",{pre:!0},[t._v("variable s : string(0 to 3)")])])])]),t._v(" "),r("li",[t._v("时间time")]),t._v(" "),r("li",[t._v("错误等级")]),t._v(" "),r("li",[t._v("自然数 & 正整数")])]),t._v(" "),r("h2",{attrs:{id:"vhdl运算符"}},[t._v("VHDL运算符")]),t._v(" "),r("h3",{attrs:{id:"逻辑运算符"}},[t._v("逻辑运算符")]),t._v(" "),r("ul",[r("li",[t._v("and - 与")]),t._v(" "),r("li",[t._v("or - 或")]),t._v(" "),r("li",[t._v("not - 非")]),t._v(" "),r("li",[t._v("nand - 与非")]),t._v(" "),r("li",[t._v("nor - 或非")]),t._v(" "),r("li",[t._v("xor - 异或")]),t._v(" "),r("li",[t._v("xnor - 与或")])]),t._v(" "),r("h3",{attrs:{id:"关系运算符"}},[t._v("关系运算符")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("=")]),t._v(" 等于")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("/=")]),t._v(" 不等于")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("<")]),t._v(" 小于")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v(">")]),t._v(" 大于")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("<=")]),t._v(" 小于等于")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v(">=")]),t._v(" 大于等于")])]),t._v(" "),r("p",[t._v("注意区分“小于等于”和“信号赋值语句”")]),t._v(" "),r("h3",{attrs:{id:"算术运算符"}},[t._v("算术运算符")]),t._v(" "),r("ul",[r("li",[r("code",{pre:!0},[t._v("+")]),t._v(" 加")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("-")]),t._v(" 减")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("*")]),t._v(" 乘")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("/")]),t._v(" 除")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("**")]),t._v(" 乘方")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("mod")]),t._v(" 取模")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("rem")]),t._v(" 取余")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("sll")]),t._v(" 逻辑左移")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("srl")]),t._v(" 逻辑右移")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("sla")]),t._v(" 算数左移")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("sra")]),t._v(" 算数右移")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("rol")]),t._v(" 逻辑循环左移")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("ror")]),t._v(" 逻辑循环右移")]),t._v(" "),r("li",[r("code",{pre:!0},[t._v("abs")]),t._v(" 取绝对值")])]),t._v(" "),r("h3",{attrs:{id:"其他运算符"}},[t._v("其他运算符")]),t._v(" "),r("p",[t._v("并置运算符"),r("code",{pre:!0},[t._v("&")]),t._v("，用来连接变量形成更长的变量，如：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signal")]),t._v(" a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" std_logic"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signal")]),t._v(" c "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("std_logic_vector")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("downto")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nc "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" a "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h2",{attrs:{id:"并行语句与顺序语句"}},[t._v("并行语句与顺序语句")]),t._v(" "),r("p",[r("strong",[t._v("构造体中的语句是并行执行的")]),t._v("，与书写顺序无关")]),t._v(" "),r("h3",{attrs:{id:"并行语句-信号赋值语句"}},[t._v("并行语句 - 信号赋值语句")]),t._v(" "),r("h4",{attrs:{id:"简单信号赋值"}},[t._v("简单信号赋值")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[t._v("aim "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" expression\n")])]),t._v(" "),r("h4",{attrs:{id:"条件信号赋值"}},[t._v("条件信号赋值")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[t._v("aim "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" expression1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" value1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n       expression2 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" value2 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n       expression3"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h4",{attrs:{id:"选择信号赋值"}},[t._v("选择信号赋值")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" sel_expression "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" aim "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("\n\texpression1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" value1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\texpression2 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" value2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\texpression3 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("others")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("ul",[r("li",[t._v("选择信号赋值语句"),r("strong",[t._v("不允许条件重叠或条件涵盖不全")])]),t._v(" "),r("li",[t._v("注意区分逗号和分号")])]),t._v(" "),r("h3",{attrs:{id:"顺序语句-进程语句"}},[t._v("顺序语句 - 进程语句")]),t._v(" "),r("p",[t._v("进程描述格式：")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("进程标签 :"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" process "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("敏感信号参数表"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("进程说明"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nbegin\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("顺序描述语句"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nend process\n")])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("进程由敏感信号变化启动")])]),t._v(" "),r("li",[t._v("进程内语句为顺序语句，但构造体内的不同进程是并行的，各个进程根据敏感信号独立运行")]),t._v(" "),r("li",[t._v("时序电路中CLK信号常为敏感信号")])]),t._v(" "),r("h3",{attrs:{id:"常见顺序语句"}},[t._v("常见顺序语句")]),t._v(" "),r("h4",{attrs:{id:"赋值语句"}},[t._v("赋值语句")]),t._v(" "),r("p",[t._v("变量赋值与信号赋值")]),t._v(" "),r("h4",{attrs:{id:"if-else语句-1"}},[t._v("if-else语句")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" 条件 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t顺序语句\nelsif 条件 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t顺序语句\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t顺序语句\nend "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("\n")])]),t._v(" "),r("h4",{attrs:{id:"case语句"}},[t._v("case语句")]),t._v(" "),r("pre",{staticClass:"language-bash"},[r("code",{pre:!0,attrs:{class:"language-bash"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" expression is\n\twhen value1 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 顺序语句"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\twhen value2 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 顺序语句"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\twhen others "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 顺序语句"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nend "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("ul",[r("li",[t._v("如果expression的值是value1则执行后面的顺序语句")]),t._v(" "),r("li",[t._v("这里的"),r("code",{pre:!0},[t._v("=>")]),t._v("不是操作符，相当于then")])]),t._v(" "),r("h2",{attrs:{id:"时序逻辑相关"}},[t._v("时序逻辑相关")]),t._v(" "),r("h3",{attrs:{id:"基础"}},[t._v("基础")]),t._v(" "),r("p",[t._v("时序逻辑需要经常检测clk信号的上升沿，所以经常使用process语句，然后在process中使用顺序语句")]),t._v(" "),r("p",[r("strong",[t._v("上升沿的描述")]),t._v("："),r("code",{pre:!0},[t._v("clk'event and clk = '1'")]),t._v("或"),r("code",{pre:!0},[t._v("rising_edge(clk)")])]),t._v(" "),r("h3",{attrs:{id:"时序逻辑举例"}},[t._v("时序逻辑举例")]),t._v(" "),r("p",[t._v("实现如下电路")]),t._v(" "),r("p",[r("img",{attrs:{src:e(1145),alt:"1"}})]),t._v(" "),r("p",[t._v("思路：不同触发器之间使用信号连接（因为这些量可能会被用来发送到其他地方），clk上升沿来临时从右向左顺序处理信号，即b先赋值给q，d最后赋值给a。代码：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" ent1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clk "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" q "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" ent1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("architecture")]),t._v(" behave "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" ent1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signal")]),t._v(" a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bit"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clk"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("rising_edge")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clk"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t\t\tq "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" b"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tb "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" a"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ta "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" d"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" behave"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("h3",{attrs:{id:"使用vhdl描述自动机"}},[t._v("使用VHDL描述自动机")]),t._v(" "),r("p",[t._v("使用VHDL描述下图自动机，要求有复位功能")]),t._v(" "),r("p",[r("img",{attrs:{src:e(1146),alt:"2"}})]),t._v(" "),r("p",[t._v("VHDL可以像C里面的"),r("strong",[t._v("枚举常量")]),t._v("一样定义一系列"),r("strong",[t._v("状态")]),t._v("。此题代码如下：")]),t._v(" "),r("pre",{staticClass:"language-vhdl"},[r("code",{pre:!0,attrs:{class:"language-vhdl"}},[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("library")]),t._v(" ieee"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" ieee"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("std_logic_1164"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" ieee"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("std_logic_unsigned"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("entity")]),t._v(" ent1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("port")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\tclk"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" std_logic"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tqout        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("std_logic_vector")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("downto")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" ent1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("architecture")]),t._v(" behave "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" ent1 "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" state "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s0"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s3"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("signal")]),t._v(" current_state "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clk"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" res "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'1'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" current_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s0"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--reset, ignore clock")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elsif")]),t._v(" clk"),r("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("'event")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" clk "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'1'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" current_state "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v("\n\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" s0 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\tqout "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"00"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" k "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'0'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s0"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" s1 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\tqout "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"01"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" k "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'0'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" s2 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\tqout "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"10"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" k "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'0'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s3"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" s3 "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\tqout "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token vhdl-vectors number"}},[t._v('"11"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" k "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("'0'")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s3"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n\t\t\t\t\tcurrent_state "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" s0"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("process")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" behave"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),r("p",[t._v("可以看到代码中使用"),r("code",{pre:!0},[t._v("type state is (s0, s1, s2, s3)")]),t._v("设置了一系列状态，就像是c语言中的枚举常量，state是类型，s0-s3是值。在"),r("code",{pre:!0},[t._v("signal current_state : state")]),t._v("时使用此类型")])])}]};t.exports={attributes:{layout:"collection",title:"VHDL硬件描述语言"},vue:{render:r.render,staticRenderFns:r.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=r.render,this.$options.staticRenderFns=r.staticRenderFns}}}}}}]);