(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{1282:function(t,T){const Q={render:function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("div",{staticClass:"frontmatter-markdown"},[Q("h2",{attrs:{id:"线性表"}},[t._v("线性表")]),t._v(" "),t._m(0),t._v(" "),Q("h3",{attrs:{id:"顺序表示"}},[t._v("顺序表示")]),t._v(" "),Q("p",[t._v("长度控制方案：")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),Q("p",[t._v("排序可以使用快排")]),t._v(" "),Q("h3",{attrs:{id:"链表"}},[t._v("链表")]),t._v(" "),Q("p",[t._v("每个节点存储内容：")]),t._v(" "),t._m(3),t._v(" "),Q("p",[t._v("排序可以使用归并")]),t._v(" "),Q("p",[t._v("子类：")]),t._v(" "),t._m(4),t._v(" "),Q("p",[t._v("静态链表举例：")]),t._v(" "),t._m(5),t._v(" "),Q("h3",{attrs:{id:"应用"}},[t._v("应用")]),t._v(" "),t._m(6),t._v(" "),Q("h3",{attrs:{id:"栈"}},[t._v("栈")]),t._v(" "),Q("p",[t._v("是特殊的线性表")]),t._v(" "),Q("p",[t._v("存储方案：")]),t._v(" "),t._m(7),t._v(" "),Q("h3",{attrs:{id:"栈的应用"}},[t._v("栈的应用")]),t._v(" "),t._m(8),t._v(" "),Q("h3",{attrs:{id:"队列"}},[t._v("队列")]),t._v(" "),Q("p",[t._v("是特殊的线性表")]),t._v(" "),Q("p",[t._v("子类：")]),t._v(" "),t._m(9),t._v(" "),Q("h2",{attrs:{id:"串"}},[t._v("串")]),t._v(" "),Q("h3",{attrs:{id:"空间分配方案"}},[t._v("空间分配方案")]),t._v(" "),t._m(10),t._v(" "),Q("h3",{attrs:{id:"模式匹配算法kmp"}},[t._v("模式匹配算法KMP")]),t._v(" "),t._m(11),t._v(" "),Q("p",[t._v("请自行百度")]),t._v(" "),Q("h3",{attrs:{id:"串的其他应用"}},[t._v("串的其他应用")]),t._v(" "),t._m(12),t._v(" "),Q("h2",{attrs:{id:"树与二叉树"}},[t._v("树与二叉树")]),t._v(" "),Q("h3",{attrs:{id:"遍历"}},[t._v("遍历")]),t._v(" "),t._m(13),t._v(" "),Q("h2",{attrs:{id:"图"}},[t._v("图")]),t._v(" "),Q("h3",{attrs:{id:"概念"}},[t._v("概念")]),t._v(" "),t._m(14),t._v(" "),Q("h3",{attrs:{id:"存储结构"}},[t._v("存储结构")]),t._v(" "),t._m(15),t._v(" "),Q("h3",{attrs:{id:"遍历-1"}},[t._v("遍历")]),t._v(" "),t._m(16),t._v(" "),Q("h3",{attrs:{id:"最小生成树"}},[t._v("最小生成树")]),t._v(" "),t._m(17),t._v(" "),Q("h3",{attrs:{id:"拓扑排序"}},[t._v("拓扑排序")]),t._v(" "),Q("p",[t._v("拓扑排序算法：每次去除出度为0的节点")]),t._v(" "),Q("p",[t._v("可以用来计算关键路径")]),t._v(" "),Q("h3",{attrs:{id:"最短路径问题"}},[t._v("最短路径问题")]),t._v(" "),t._m(18),t._v(" "),Q("h2",{attrs:{id:"查找"}},[t._v("查找")]),t._v(" "),Q("h3",{attrs:{id:"概念-1"}},[t._v("概念")]),t._v(" "),t._m(19),t._v(" "),Q("h3",{attrs:{id:"静态查找算法"}},[t._v("静态查找算法")]),t._v(" "),Q("p",[t._v("顺序线性表可以使用二分查找，搜索树平衡")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),Q("p",[t._v("构造次优查找树 - 寻找节点使左右权值之差最小，而且树的中序遍历是有序的")]),t._v(" "),Q("p",[t._v("也可以使用索引表")]),t._v(" "),Q("h3",{attrs:{id:"动态查找算法"}},[t._v("动态查找算法")]),t._v(" "),Q("p",[t._v("二叉排序树 - 任意节点的左子树上的值小于根节点的值，右子树上的值大于根节点的值")]),t._v(" "),Q("p",[t._v("平衡二叉树和次优查找树都是二叉排序树")]),t._v(" "),Q("p",[t._v("平衡二叉树 - 在增加和删除操作后仍然保持搜索树足够平衡")]),t._v(" "),Q("p",[t._v("平衡二叉树的旋转操作")]),t._v(" "),Q("p",[t._v("B-树（多路平衡查找树）和B+树，常用于文件系统")]),t._v(" "),Q("p",[t._v("键树")]),t._v(" "),Q("h3",{attrs:{id:"哈希表"}},[t._v("哈希表")]),t._v(" "),Q("p",[t._v("哈希函数：")]),t._v(" "),t._m(22),t._v(" "),Q("p",[t._v("冲突处理：")]),t._v(" "),Q("ul",[Q("li",[t._v("开放定址法\n"),Q("ul",[t._m(23),t._v(" "),Q("li",[t._v("二次探测再散列，尝试"),Q("mjx-container",{staticClass:"MathJax",staticStyle:{direction:"ltr"},attrs:{jax:"SVG"}},[Q("svg",{staticStyle:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"44.256ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 19561.3 1083.9"}},[Q("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[Q("g",{attrs:{"data-mml-node":"math"}},[Q("g",{attrs:{"data-mml-node":"mi"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(712.2,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),Q("g",{attrs:{"data-mml-node":"msup",transform:"translate(1712.4,0)"}},[Q("g",{attrs:{"data-mml-node":"mn"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(533,363) scale(0.707)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])]),Q("g",{attrs:{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(2649,0)"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2F",d:"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"}})])]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(3149,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(3861.2,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),Q("g",{attrs:{"data-mml-node":"msup",transform:"translate(4861.4,0)"}},[Q("g",{attrs:{"data-mml-node":"mn"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(533,363) scale(0.707)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])]),Q("g",{attrs:{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(5798,0)"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2F",d:"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"}})])]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(6298,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(7010.2,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),Q("g",{attrs:{"data-mml-node":"msup",transform:"translate(8010.4,0)"}},[Q("g",{attrs:{"data-mml-node":"mn"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(533,363) scale(0.707)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])]),Q("g",{attrs:{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(8947,0)"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2F",d:"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"}})])]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(9447,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(10159.2,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),Q("g",{attrs:{"data-mml-node":"msup",transform:"translate(11159.4,0)"}},[Q("g",{attrs:{"data-mml-node":"mn"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(533,363) scale(0.707)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])]),Q("g",{attrs:{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(12096,0)"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2F",d:"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"}})])]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(12596,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(13308.2,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}})]),Q("g",{attrs:{"data-mml-node":"msup",transform:"translate(14308.4,0)"}},[Q("g",{attrs:{"data-mml-node":"mn"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(533,363) scale(0.707)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])]),Q("g",{attrs:{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(15245,0)"}},[Q("g",{attrs:{"data-mml-node":"mo"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2F",d:"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"}})])]),Q("g",{attrs:{"data-mml-node":"mi",transform:"translate(15745,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(16457.2,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),Q("g",{attrs:{"data-mml-node":"msup",transform:"translate(17457.4,0)"}},[Q("g",{attrs:{"data-mml-node":"mn"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"33",d:"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"}})]),Q("g",{attrs:{"data-mml-node":"mn",transform:"translate(533,363) scale(0.707)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(18394,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(18838.7,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"}})]),Q("g",{attrs:{"data-mml-node":"mo",transform:"translate(19283.3,0)"}},[Q("path",{staticStyle:{"stroke-width":"3"},attrs:{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"}})])])])])])],1),t._v(" "),Q("li",[t._v("伪随机数序列")])])]),t._v(" "),Q("li",[t._v("再哈希，换一个哈希函数")]),t._v(" "),Q("li",[t._v("链桶/链地址")]),t._v(" "),Q("li",[t._v("公共溢出区")])]),t._v(" "),Q("h2",{attrs:{id:"排序"}},[t._v("排序")]),t._v(" "),Q("h3",{attrs:{id:"概念-2"}},[t._v("概念")]),t._v(" "),t._m(24),t._v(" "),Q("h3",{attrs:{id:"内排序方案"}},[t._v("内排序方案")]),t._v(" "),t._m(25),t._v(" "),Q("h3",{attrs:{id:"外排序方案"}},[t._v("外排序方案")]),t._v(" "),t._m(26)])},staticRenderFns:[function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("顺序表示")]),t._v(" "),Q("li",[t._v("链式表示（链表")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("设置尾元素")]),t._v(" "),Q("li",[t._v("记录表长")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("p",[t._v("插入和删除时需要移动元素，时间复杂度"),Q("code",{pre:!0},[t._v("O(n)")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("数据域")]),t._v(" "),Q("li",[t._v("指针域")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("单链表")]),t._v(" "),Q("li",[t._v("循环链表")]),t._v(" "),Q("li",[t._v("双向链表")]),t._v(" "),Q("li",[t._v("静态链表 - 在顺序表里实现链表")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("table",[Q("thead",[Q("tr",[Q("th",[t._v("index")]),t._v(" "),Q("th",[t._v("value")]),t._v(" "),Q("th",[t._v("next_p")])])]),t._v(" "),Q("tbody",[Q("tr",[Q("td",[t._v("0")]),t._v(" "),Q("td",[t._v("(head)")]),t._v(" "),Q("td",[t._v("1")])]),t._v(" "),Q("tr",[Q("td",[t._v("1")]),t._v(" "),Q("td",[t._v("value1")]),t._v(" "),Q("td",[t._v("5")])]),t._v(" "),Q("tr",[Q("td",[t._v("2")]),t._v(" "),Q("td",[t._v("value3")]),t._v(" "),Q("td",[t._v("6")])]),t._v(" "),Q("tr",[Q("td",[t._v("3")]),t._v(" "),Q("td",[t._v("value5")]),t._v(" "),Q("td",[t._v("7")])]),t._v(" "),Q("tr",[Q("td",[t._v("4")]),t._v(" "),Q("td",[t._v("value7")]),t._v(" "),Q("td",[t._v("8")])]),t._v(" "),Q("tr",[Q("td",[t._v("5")]),t._v(" "),Q("td",[t._v("value2")]),t._v(" "),Q("td",[t._v("2")])]),t._v(" "),Q("tr",[Q("td",[t._v("6")]),t._v(" "),Q("td",[t._v("value4")]),t._v(" "),Q("td",[t._v("3")])]),t._v(" "),Q("tr",[Q("td",[t._v("7")]),t._v(" "),Q("td",[t._v("value6")]),t._v(" "),Q("td",[t._v("4")])]),t._v(" "),Q("tr",[Q("td",[t._v("8")]),t._v(" "),Q("td",[t._v("value8")]),t._v(" "),Q("td",[t._v("0")])]),t._v(" "),Q("tr",[Q("td",[t._v("9")]),t._v(" "),Q("td"),t._v(" "),Q("td")]),t._v(" "),Q("tr",[Q("td",[t._v("10")]),t._v(" "),Q("td"),t._v(" "),Q("td")])])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("一元多项式的表示及相加")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("顺序栈 - 保存栈顶和栈尾")]),t._v(" "),Q("li",[t._v("链栈")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("数制转换")]),t._v(" "),Q("li",[t._v("括号匹配")]),t._v(" "),Q("li",[t._v("迷宫求解（回溯")]),t._v(" "),Q("li",[t._v("表达式求值（使用算符优先分析法，不同于编译原理的LR分析法")]),t._v(" "),Q("li",[t._v("模拟递归")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("双端队列（两边都可以插入和弹出")]),t._v(" "),Q("li",[t._v("循环队列")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("p",[t._v("动态分配空间可以使用"),Q("strong",[t._v("块链")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("p",[t._v("理论时间复杂度"),Q("code",{pre:!0},[t._v("O(m*n)")]),t._v("，实际时间复杂度"),Q("code",{pre:!0},[t._v("O(m+n)")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("搜索引擎 - 使用反向索引，使用关键字索引ID")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("先序遍历\n"),Q("ul",[Q("li",[t._v("根节点 -> 左子树 -> 右子树")]),t._v(" "),Q("li",[t._v("可以获得表达式的前缀表示（波兰式")])])]),t._v(" "),Q("li",[t._v("中序遍历\n"),Q("ul",[Q("li",[t._v("左子树 -> 根节点 -> 右子树")]),t._v(" "),Q("li",[t._v("可以获得表达式的中缀表示")])])]),t._v(" "),Q("li",[t._v("后序遍历\n"),Q("ul",[Q("li",[t._v("左子树 -> 右子树 -> 根节点")]),t._v(" "),Q("li",[t._v("可以获得表达式的后缀表示（逆波兰式")])])])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("顶点")]),t._v(" "),Q("li",[t._v("弧头/弧尾")]),t._v(" "),Q("li",[t._v("有向图/无向图")]),t._v(" "),Q("li",[t._v("入度/出度")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("矩阵表示（邻接矩阵），值为距离")]),t._v(" "),Q("li",[t._v("邻接表 - 每个节点一个链表，链表内容为边的属性")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("深度优先")]),t._v(" "),Q("li",[t._v("广度优先")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("Prim算法")]),t._v(" "),Q("li",[t._v("Kruskal算法")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("某个点对所有点的最短路径 - Dijkstra算法")]),t._v(" "),Q("li",[t._v("所有点相互的最短路径 - 使用N次Dijkstra/使用Floyd算法")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("静态查找 - 仅查找")]),t._v(" "),Q("li",[t._v("动态查找 - 查找之后进行插入/删除等修改")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("p",[t._v("如果叶子节点带有权值，则可以使用查找树，试图构造"),Q("strong",[t._v("平均查找长度最短的查找树")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("p",[Q("strong",[t._v("静态最优查找树")]),t._v("比较复杂，可以构造"),Q("strong",[t._v("次优查找树")]),t._v("，这种树的查找效率很少低于最优查找树的3%")])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[Q("code",{pre:!0},[t._v("y=kx+b")])]),t._v(" "),Q("li",[Q("code",{pre:!0},[t._v("y=x mod N")])]),t._v(" "),Q("li",[t._v("…")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("li",[t._v("线性探测再散列，尝试"),Q("code",{pre:!0},[t._v("y+1/y+2/y+3...")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("稳定&不稳定 - key相同的项是否维持原顺序")]),t._v(" "),Q("li",[t._v("内部排序&外部排序 - 如果内存无法容纳所有记录则需要外排序")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("插入排序\n"),Q("ul",[Q("li",[t._v("直接插入")]),t._v(" "),Q("li",[t._v("折半插入 = 直接插入 + 有序部分二分查找")]),t._v(" "),Q("li",[t._v("希尔排序")])])]),t._v(" "),Q("li",[t._v("交换排序\n"),Q("ul",[Q("li",[t._v("简单交换（冒泡")]),t._v(" "),Q("li",[t._v("快排")])])]),t._v(" "),Q("li",[t._v("选择排序（选择第n小的元素\n"),Q("ul",[Q("li",[t._v("简单选择排序")]),t._v(" "),Q("li",[t._v("堆排序\n"),Q("ul",[Q("li",[t._v("大根堆")]),t._v(" "),Q("li",[t._v("小根堆")])])])])]),t._v(" "),Q("li",[t._v("归并排序")]),t._v(" "),Q("li",[t._v("基数排序")])])},function(){var t=this,T=t.$createElement,Q=t._self._c||T;return Q("ul",[Q("li",[t._v("多路平衡归并（败者树")]),t._v(" "),Q("li",[t._v("置换-选择排序 - 构造归并段")])])}]};t.exports={attributes:{date:"2019-08-04T00:00:00.000Z",title:"基本数据结构及其简单应用",description:"链表/堆栈/队列/树/图/查找/排序",tags:["数据结构"]},vue:{render:Q.render,staticRenderFns:Q.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=Q.render,this.$options.staticRenderFns=Q.staticRenderFns}}}}}}]);