(window.webpackJsonp=window.webpackJsonp||[]).push([[62,206,207,208,209],{1107:function(t,e,n){const v={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("div",{staticClass:"frontmatter-markdown"},[v("h2",{attrs:{id:"概述"}},[t._v("概述")]),t._v(" "),v("p",[t._v("本文是观看"),v("a",{attrs:{href:"https://www.bilibili.com/video/bv1w4411y7Go"}},[t._v("此视频")]),t._v("和"),v("a",{attrs:{href:"https://www.bilibili.com/video/bv1PJ411h7Sw"}},[t._v("此视频")]),t._v("时的笔记（建议先看后者，获得感性的认知，然后看前者了解原理）")]),t._v(" "),v("h2",{attrs:{id:"kubernetes"}},[t._v("Kubernetes")]),t._v(" "),v("h3",{attrs:{id:"历史"}},[t._v("历史")]),t._v(" "),v("h4",{attrs:{id:"为什么需要容器编排"}},[t._v("为什么需要容器编排")]),t._v(" "),v("p",[t._v("Docker的好处：")]),t._v(" "),v("ul",[v("li",[t._v("抹平了基础设施环境的差异，几乎任何硬件、操作系统都可以用")]),t._v(" "),v("li",[t._v("抹平了应用程序打包的差异、运行时的差异")]),t._v(" "),v("li",[t._v("抹平了应用程序部署的差异，都是"),v("code",{pre:!0},[t._v("docker run")])])]),t._v(" "),v("p",[t._v("Docker自身无法实现：")]),t._v(" "),v("ul",[v("li",[t._v("难以管理集群")]),t._v(" "),v("li",[t._v("难以容灾/自愈")]),t._v(" "),v("li",[t._v("难以大规模调度、快速反应")]),t._v(" "),v("li",[t._v("没有统一配置管理中心")]),t._v(" "),v("li",[t._v("没有容器声明周期管理")]),t._v(" "),v("li",[t._v("没有图形化运维工具")])]),t._v(" "),v("h4",{attrs:{id:"容器管理框架"}},[t._v("容器管理框架")]),t._v(" "),v("ul",[v("li",[t._v("docker compose\n"),v("ul",[v("li",[t._v("docker母公司推出的")]),t._v(" "),v("li",[t._v("单机编排")])])]),t._v(" "),v("li",[t._v("Apache MESOS\n"),v("ul",[v("li",[t._v("开源，分布式资源管理框架")]),t._v(" "),v("li",[t._v("不仅可以管理容器。通常结合Marathon使用，Marathon负责管理容器")]),t._v(" "),v("li",[t._v("k8s的前辈。被k8s取代后推出新功能，表示可以管理k8s（但是为什么要再加一层。。）\n"),v("ul",[v("li",[t._v("2019年5月，最大的使用者twitter宣布改用k8s")])])])])]),t._v(" "),v("li",[t._v("docker swarm\n"),v("ul",[v("li",[t._v("docker母公司推出的")]),t._v(" "),v("li",[t._v("被集成到了docker中，原生被docker支持")]),t._v(" "),v("li",[t._v("功能相比于k8s非常少")]),t._v(" "),v("li",[t._v("非常轻量。本机可能仅消耗几十MB。虽然也可以用于大型集群，但是通常还是小型集群可能会用（因为功能少）\n"),v("ul",[v("li",[t._v("2019年7月，阿里云宣布不再支持docker swarm，仅支持k8s")])])])])]),t._v(" "),v("li",[t._v("Kubernetes\n"),v("ul",[v("li",[t._v("功能全面，很稳定")]),t._v(" "),v("li",[t._v("开源，用go编写，效率高，消耗资源少（不像一些java程序，需要解释执行）")]),t._v(" "),v("li",[t._v("弹性，热扩缩容")]),t._v(" "),v("li",[t._v("内置模块间负载均衡（基于ipvs）")])])])]),t._v(" "),v("p",[t._v("k8s是谷歌的开源产品。谷歌10年前就把容器化作为基础架构，并使用内部的borg系统进行容器管理。k8s是borg用go语言重构的开源版本")]),t._v(" "),v("h4",{attrs:{id:"borg"}},[t._v("Borg")]),t._v(" "),v("p",[v("img",{attrs:{src:n(369),alt:"4-1"}})]),t._v(" "),v("p",[t._v("组件：")]),t._v(" "),v("ul",[v("li",[t._v("BorgMaster\n"),v("ul",[v("li",[t._v("对外暴露服务并负责请求的分发")]),t._v(" "),v("li",[t._v("需要高可用，且节点数量通常为奇数，防止脑裂")]),t._v(" "),v("li",[t._v("Paxos\n"),v("ul",[v("li",[t._v("一个持久化存储，键值数据库")])])])])]),t._v(" "),v("li",[t._v("Borglet\n"),v("ul",[v("li",[t._v("工作节点")]),t._v(" "),v("li",[t._v("每个工作节点持续监听BorgMaster的Paxos，如果被分配了请求，Borglet就会消费这个请求")])])]),t._v(" "),v("li",[t._v("Scheduler\n"),v("ul",[v("li",[t._v("分发任务")]),t._v(" "),v("li",[t._v("不直接和Borglet交互，而是修改BorgMaster的Paxos")])])])]),t._v(" "),v("p",[t._v("交互方式：")]),t._v(" "),v("ul",[v("li",[t._v("浏览器")]),t._v(" "),v("li",[t._v("命令行工具")]),t._v(" "),v("li",[t._v("配置文件(borgcfg)")])]),t._v(" "),v("p",[t._v("k8s的组件结构和Borg比较类似")]),t._v(" "),v("h3",{attrs:{id:"组件"}},[t._v("组件")]),t._v(" "),v("h4",{attrs:{id:"组件概述"}},[t._v("组件概述")]),t._v(" "),v("p",[v("img",{attrs:{src:n(370),alt:"4-2"}})]),t._v(" "),v("p",[t._v("k8s宏观来说使用C/S结构")]),t._v(" "),v("ul",[v("li",[t._v("Master，负责管理集群。建议部署3份\n"),v("ul",[v("li",[t._v("api server\n"),v("ul",[v("li",[t._v("一切访问的入口，包括kubectl、scheduler、RC、etcd、浏览器、kubelet、kube proxy")])])]),t._v(" "),v("li",[t._v("scheduler\n"),v("ul",[v("li",[t._v("调度请求，然后交给api server，api server把请求写到etcd")])])]),t._v(" "),v("li",[t._v("controller manager(replication controller(RC), etc…)\n"),v("ul",[v("li",[t._v("管理各种控制器（比如副本控制器）")])])])])]),t._v(" "),v("li",[t._v("Node，负责执行任务\n"),v("ul",[v("li",[t._v("kubelet\n"),v("ul",[v("li",[t._v("可以理解为安装在工作节点上的agent")]),t._v(" "),v("li",[t._v("负责控制docker创建容器，管理Pod和容器的生命周期，汇报状态")])])]),t._v(" "),v("li",[t._v("kube proxy\n"),v("ul",[v("li",[t._v("实现Node内Pod之间的负载均衡")]),t._v(" "),v("li",[t._v("默认通过操作防火墙iptables配置Pod的映射来实现，也可以使用ipvs实现映射（推荐ipvs，因为如果使用iptables会导致iptables规则过于复杂，不易维护且影响性能）")])])]),t._v(" "),v("li",[t._v("Pod\n"),v("ul",[v("li",[t._v("最小的调度单元，一个Pod可以包含多个容器")])])])])]),t._v(" "),v("li",[t._v("etcd\n"),v("ul",[v("li",[t._v("键值对数据库，go语言编写，用来实现k8s持久化。所有需要持久化的数据都在这里，恢复etcd即可恢复k8s集群")]),t._v(" "),v("li",[t._v("天生支持集群化")]),t._v(" "),v("li",[t._v("通常部署在master node里面。也可以部署在外面")]),t._v(" "),v("li",[t._v("由于其自带的高可用机制，建议部署3份")]),t._v(" "),v("li",[t._v("v2把数据写到内存，v3把数据写到本地数据库。建议用v3")]),t._v(" "),v("li",[t._v("内部架构\n"),v("ul",[v("li",[t._v("HTTP Server")]),t._v(" "),v("li",[t._v("Raft")]),t._v(" "),v("li",[t._v("Store")]),t._v(" "),v("li",[t._v("WAL\n"),v("ul",[v("li",[t._v("Entry")]),t._v(" "),v("li",[t._v("Snapshot")])])])])])])])]),t._v(" "),v("p",[t._v("交互方式：")]),t._v(" "),v("ul",[v("li",[t._v("kubectl")]),t._v(" "),v("li",[t._v("浏览器")])]),t._v(" "),v("p",[t._v("常见插件：")]),t._v(" "),v("ul",[v("li",[t._v("CoreDNS\n"),v("ul",[v("li",[t._v("为集群中的服务创建A记录，直接使用private域名即可访问服务")])])]),t._v(" "),v("li",[t._v("Ingress Controller\n"),v("ul",[v("li",[t._v("官方k8s只能实现4层代理，Ingress Controller能够提供7层代理，使用域名进行负载均衡")])])]),t._v(" "),v("li",[t._v("Prometheus\n"),v("ul",[v("li",[t._v("监控集群")])])]),t._v(" "),v("li",[t._v("Dashboard\n"),v("ul",[v("li",[t._v("给k8s提供B/S管理的能力")])])]),t._v(" "),v("li",[t._v("Federation\n"),v("ul",[v("li",[t._v("跨k8s管理，即管理多个k8s集群")])])])]),t._v(" "),v("h4",{attrs:{id:"pod"}},[t._v("Pod")]),t._v(" "),v("h5",{attrs:{id:"pod概述"}},[t._v("Pod概述")]),t._v(" "),v("ul",[v("li",[t._v("Pod是一个虚拟概念。里面可以有多个容器\n"),v("ul",[v("li",[t._v("容器被划分为Init容器(initContainer, Init C)和Main容器(Container, Main C)\n"),v("ul",[v("li",[t._v("Init阶段可以用来初始化环境，比如安装一些Main容器不需要安装的包，执行完毕之后，Init容器就可以退出，释放资源给Main容器")]),t._v(" "),v("li",[t._v("Init容器可以有和Main容器不同的权限")]),t._v(" "),v("li",[t._v("Init容器可以用来阻塞Pod的初始化，直到满足某个条件")])])])])]),t._v(" "),v("li",[t._v("每个Pod里面都默认有一个叫pause的容器")]),t._v(" "),v("li",[t._v("单个Pod中的所有容器都会共用pause容器的网络栈和存储卷\n"),v("ul",[v("li",[t._v("不同容器之间使用"),v("code",{pre:!0},[t._v("localhost")]),t._v("就能够互相访问")]),t._v(" "),v("li",[t._v("通过共享存储实现文件共享")])])])]),t._v(" "),v("h5",{attrs:{id:"pod生命周期"}},[t._v("Pod生命周期")]),t._v(" "),v("ol",{attrs:{start:"0"}},[v("li",[t._v("kubectl向API Server发出请求，任务被分发到kubelet")]),t._v(" "),v("li",[t._v("kubelet进行Pod环境初始化，启动"),v("code",{pre:!0},[t._v("pause")]),t._v("容器（包括初始化网络和数据卷）")]),t._v(" "),v("li",[t._v("如果Pod中存在Init容器，则这些Init容器顺序启动（前一个退出了后一个才启动）")]),t._v(" "),v("li",[t._v("所有Main容器开始启动\n"),v("ol",[v("li",[t._v("最开始是"),v("code",{pre:!0},[t._v("START")]),t._v("阶段。可以作为生命周期钩子")]),t._v(" "),v("li",[t._v("准备就绪后容器变为"),v("code",{pre:!0},[t._v("readiness")]),t._v(" & "),v("code",{pre:!0},[t._v("liveness")]),t._v("。Pod状态变为RUNNING")]),t._v(" "),v("li",[t._v("Pod会持续检测内部容器是否正常，并持续更新"),v("code",{pre:!0},[t._v("liveness")]),t._v(" & "),v("code",{pre:!0},[t._v("readiness")])]),t._v(" "),v("li",[t._v("容器停止后是"),v("code",{pre:!0},[t._v("STOP")]),t._v("阶段，可以作为生命周期钩子")])])])]),t._v(" "),v("p",[t._v("start/stop可以在资源清单中使用"),v("code",{pre:!0},[t._v("lifecycle")]),t._v("指定钩子函数")]),t._v(" "),v("p",[t._v("Pod的状态的可能值：")]),t._v(" "),v("ul",[v("li",[t._v("pending")]),t._v(" "),v("li",[t._v("running")]),t._v(" "),v("li",[t._v("succeeded")]),t._v(" "),v("li",[t._v("failed")]),t._v(" "),v("li",[t._v("unknown")])]),t._v(" "),v("h5",{attrs:{id:"探针"}},[t._v("探针")]),t._v(" "),v("p",[t._v("探针是kubelet对容器的定期诊断")]),t._v(" "),v("p",[t._v("三种处理程序：")]),t._v(" "),v("ul",[v("li",[t._v("ExecAction\n"),v("ul",[v("li",[t._v("在容器执行特定的命令，如果返回0则表示正常")])])]),t._v(" "),v("li",[t._v("TCPSocketAction\n"),v("ul",[v("li",[t._v("如果端口开放则正常")])])]),t._v(" "),v("li",[t._v("HTTPGetAction\n"),v("ul",[v("li",[t._v("如果HTTP GET请求的响应状态码不小于200且小于400则正常")])])])]),t._v(" "),v("p",[t._v("每次探测都会得到三种结果之一：")]),t._v(" "),v("ul",[v("li",[t._v("成功")]),t._v(" "),v("li",[t._v("失败")]),t._v(" "),v("li",[t._v("未知")])]),t._v(" "),v("p",[t._v("探测方式：")]),t._v(" "),v("ul",[v("li",[t._v("livenessProbe\n"),v("ul",[v("li",[t._v("存活探测")]),t._v(" "),v("li",[t._v("表示容器是否在运行。如果探测失败，则kubelet会杀死容器，并根据策略重启")]),t._v(" "),v("li",[t._v("如果容器不提供存活探针，则默认success")])])]),t._v(" "),v("li",[t._v("readinessProbe\n"),v("ul",[v("li",[t._v("就绪探测")]),t._v(" "),v("li",[t._v("表示容器中的服务是否正在运行")]),t._v(" "),v("li",[t._v("如果服务不可用，则从Service中删除此Pod的IP地址")]),t._v(" "),v("li",[t._v("容器初始化时为failure。如果容器不提供就绪探针，则默认success")])])])]),t._v(" "),v("h5",{attrs:{id:"pod控制器"}},[t._v("Pod控制器")]),t._v(" "),v("ul",[v("li",[t._v("ReplicationController(RC)（淘汰）\n"),v("ul",[v("li",[t._v("用来确保容器的副本数量始终保持在用户定义的副本数量上")]),t._v(" "),v("li",[t._v("如果有容器异常退出，RC会创建新的。如果有异常多出来的容器，RC也会回收")]),t._v(" "),v("li",[t._v("新版本k8s中建议使用ReplicaSet代替ReplicationController")])])]),t._v(" "),v("li",[t._v("ReplicaSet(RS)\n"),v("ul",[v("li",[t._v("基本和RC相同")]),t._v(" "),v("li",[t._v("相比于RC，支持基于标签的选择器(selector)来发现Pods\n"),v("ul",[v("li",[t._v("创建Pod的时候可以打标签，比如"),v("code",{pre:!0},[t._v("app=apache")]),t._v("、"),v("code",{pre:!0},[t._v("version=1")])])])]),t._v(" "),v("li",[t._v("仅用来控制Pod的数量")])])]),t._v(" "),v("li",[t._v("Deployment(DP)\n"),v("ul",[v("li",[t._v("用来自动管理RS。即用户创建Deployment，Deployment创建RS，RS创建Pod")]),t._v(" "),v("li",[t._v("用来实现扩缩容、滚动更新和回滚\n"),v("ul",[v("li",[t._v("扩缩容会直接修改RS的副本数")]),t._v(" "),v("li",[t._v("滚动更新时，会创建新的RS，并逐渐删除旧的RS")])])])])]),t._v(" "),v("li",[t._v("DaemonSet(DS)\n"),v("ul",[v("li",[t._v("用来确保一些（或所有）Node上都至少运行某个daemon Pod")]),t._v(" "),v("li",[t._v("有新Node加入集群的时候会在这个Node上面创建这些daemon Pod")]),t._v(" "),v("li",[t._v("删除Node时也会回收daemon Pod")]),t._v(" "),v("li",[t._v("删除DaemonSet会删除所有它创建的daemon Pod")]),t._v(" "),v("li",[t._v("通常用来安装监控、日志收集、共享存储服务")]),t._v(" "),v("li",[t._v("在Node上只能有一个相同的daemon Pod")]),t._v(" "),v("li",[t._v("如果Pod意外退出，DS也会尝试重启")])])]),t._v(" "),v("li",[t._v("Job\n"),v("ul",[v("li",[t._v("批处理任务，执行完毕后退出（可以指定执行多次）")]),t._v(" "),v("li",[t._v("比如把备份数据库的任务放到一个Pod里面")]),t._v(" "),v("li",[t._v("相比于linux的cron，Job可以在任务失败的时候重试")])])]),t._v(" "),v("li",[t._v("CronJob\n"),v("ul",[v("li",[t._v("周期性执行任务")])])]),t._v(" "),v("li",[t._v("StatefulSet\n"),v("ul",[v("li",[t._v("用来解决有状态服务的问题，比如MongoDB（Deployment和RS针对无状态服务）（MySQL目前还没有稳定的部署k8s方案）")]),t._v(" "),v("li",[t._v("提供稳定的持久化存储，重新调度Pod后（比如删了重开），还是能访问到相同的持久化数据（数据不会丢失）\n"),v("ul",[v("li",[t._v("基于PVC实现，根据"),v("code",{pre:!0},[t._v("volumeClaimTemplates")]),t._v("为每个Pod创建PVC，名字是"),v("code",{pre:!0},[t._v("<PVC-name>-<PodName>")])])])]),t._v(" "),v("li",[t._v("稳定的网络标识，重新调度Pod后PodName和HostName不变\n"),v("ul",[v("li",[t._v("PodName为"),v("code",{pre:!0},[t._v("<statefulSet-name>-<index>")])]),t._v(" "),v("li",[t._v("基于Headless Service来实现（即没有Cluster IP的Service）")]),t._v(" "),v("li",[t._v("每个Pod都有一个DNS名。即使Pod被替换，DNS名也不会变")])])]),t._v(" "),v("li",[t._v("有序部署 & 扩缩容\n"),v("ul",[v("li",[t._v("只有前一个Pod是Running或Ready状态，下一个Pod才会开始启动。即使Pod模板是相同的")]),t._v(" "),v("li",[t._v("基于init containers来实现")])])])])]),t._v(" "),v("li",[t._v("Horizontal Pod Autoscaling(HPA)\n"),v("ul",[v("li",[t._v("用来管理Deployment和RS")]),t._v(" "),v("li",[t._v("自动扩展，基于CPU、内存、用户自定义指标")])])])]),t._v(" "),v("h3",{attrs:{id:"其他概念"}},[t._v("其他概念")]),t._v(" "),v("h4",{attrs:{id:"名称与名称空间"}},[t._v("名称与名称空间")]),t._v(" "),v("p",[t._v("k8s中所有对象都是【资源】。所有资源都可以由自己的名称(Name)。资源的名称通常在其元数据中，详见下文资源清单")]),t._v(" "),v("p",[t._v("为了进行资源隔离，可以使用名称空间(Namespace)。每个名称空间中都不能有重名的资源")]),t._v(" "),v("p",[t._v("k8s中默认存在的的名称空间：")]),t._v(" "),v("ul",[v("li",[v("code",{pre:!0},[t._v("default")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kube-system")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kube-public")])])]),t._v(" "),v("p",[t._v("查询k8s中资源的时候通常都需要先指明名称空间")]),t._v(" "),v("h4",{attrs:{id:"标签"}},[t._v("标签")]),t._v(" "),v("p",[t._v("每个资源可以有多个标签(label)（当然一个标签可以对应多个资源）。标签是键值对")]),t._v(" "),v("p",[t._v("可以使用标签选择器(label selector)基于标签进行资源的选择")]),t._v(" "),v("h4",{attrs:{id:"service-ingress"}},[t._v("Service & Ingress")]),t._v(" "),v("ul",[v("li",[t._v("服务(service)\n"),v("ul",[v("li",[t._v("是k8s在内部提供服务的接口（比如每个SVC都是一个微服务）")]),t._v(" "),v("li",[t._v("Service通过标签来选择Pod进行服务发现")]),t._v(" "),v("li",[t._v("Service仅提供一个LB算法：RR")]),t._v(" "),v("li",[t._v("类型\n"),v("ul",[v("li",[t._v("ClusterIP(默认)\n"),v("ul",[v("li",[t._v("自动分配一个仅集群内部可以访问的IP")])])]),t._v(" "),v("li",[t._v("NodePort\n"),v("ul",[v("li",[t._v("把服务的端口映射到Node")]),t._v(" "),v("li",[t._v("每个有此模式服务的Node都需要暴露同一个端口")]),t._v(" "),v("li",[t._v("同一个Node中的多个Pod会基于RR负载均衡。不同Node之间负载均衡需要外部LB")]),t._v(" "),v("li",[t._v("可以用来向集群外暴露服务")])])]),t._v(" "),v("li",[t._v("LoadBalancer\n"),v("ul",[v("li",[t._v("在NodePort的基础上使用云厂商的LB实现Node之间的负载均衡")])])]),t._v(" "),v("li",[t._v("ExternalName\n"),v("ul",[v("li",[t._v("通过指定集群外部的IP和端口，把集群外部的服务引入集群内部")]),t._v(" "),v("li",[t._v("这样Pods只需要访问这个SVC就好了。如果外部服务被更新（比如修改了IP），只需要更新SVC即可，不需要修改所有Pod")])])])])]),t._v(" "),v("li",[t._v("代理模式\n"),v("ul",[v("li",[t._v("userspace（淘汰）")]),t._v(" "),v("li",[t._v("iptables（即将淘汰。过于复杂的iptables难以维护且影响性能）")]),t._v(" "),v("li",[t._v("ipvs")])])])])])]),t._v(" "),v("p",[t._v("Service使用4层网络调度，暴露IP+port。而Ingress是7层网络调度（不过底层还是Service）")]),t._v(" "),v("p",[t._v("所以4层的服务使用Service暴露，7层的服务使用Ingress")]),t._v(" "),v("h4",{attrs:{id:"资源"}},[t._v("资源")]),t._v(" "),v("p",[t._v("k8s中所有内容都被抽象为资源。资源被实例化之后称为对象")]),t._v(" "),v("ul",[v("li",[t._v("名称空间级别\n"),v("ul",[v("li",[t._v("工作负载型资源(Workload)\n"),v("ul",[v("li",[t._v("Pod")]),t._v(" "),v("li",[t._v("ReplicaSet")]),t._v(" "),v("li",[t._v("Deployment")]),t._v(" "),v("li",[t._v("StatefulSet")]),t._v(" "),v("li",[t._v("DaemonSet")]),t._v(" "),v("li",[t._v("Job")]),t._v(" "),v("li",[t._v("CronJob")])])]),t._v(" "),v("li",[t._v("服务发现与负载均衡型资源(Service Discovery & Load Balancing)，用来暴露服务\n"),v("ul",[v("li",[t._v("Service(Svc)")]),t._v(" "),v("li",[t._v("Ingress")])])]),t._v(" "),v("li",[t._v("配置与存储型资源\n"),v("ul",[v("li",[t._v("Volume")]),t._v(" "),v("li",[t._v("CSI（容器存储接口，用来连接第三方存储卷）")])])]),t._v(" "),v("li",[t._v("特殊存储卷\n"),v("ul",[v("li",[t._v("ConfigMap（存储配置文件实现热更新）")]),t._v(" "),v("li",[t._v("Secret（敏感数据）")]),t._v(" "),v("li",[t._v("DownwardAPI")])])])])]),t._v(" "),v("li",[t._v("集群级别的资源\n"),v("ul",[v("li",[t._v("Namespace")]),t._v(" "),v("li",[t._v("Node")]),t._v(" "),v("li",[t._v("Role")]),t._v(" "),v("li",[t._v("ClusterRole")]),t._v(" "),v("li",[t._v("RoleBinding")]),t._v(" "),v("li",[t._v("ClusterRoleBinding")])])]),t._v(" "),v("li",[t._v("元数据\n"),v("ul",[v("li",[t._v("HPA")]),t._v(" "),v("li",[t._v("PodTemplate")]),t._v(" "),v("li",[t._v("LimitRange")])])])]),t._v(" "),v("h4",{attrs:{id:"资源清单常用字段"}},[t._v("资源清单常用字段")]),t._v(" "),v("p",[t._v("资源清单文件格式为YAML/JSON")]),t._v(" "),v("p",[t._v("以下为示例。具体资源清单内容建议参考官方文档")]),t._v(" "),v("h5",{attrs:{id:"pod资源清单"}},[t._v("Pod资源清单")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1 "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# k8s API version. 可以使用kubectl api-versions命令查看")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源类型")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据名称")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 元数据名称空间")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义标签")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详情")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" IfNotPresent "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认Always")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每次都重新拉取镜像 | 仅使用本地镜像 | 如果本地没有则拉取")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器的启动命令（会覆盖镜像的启动命令）。默认是镜像的启动命令")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动命令参数")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workingDir")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器工作目录")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义卷")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义如何挂载上述卷")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 引用volume的name")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器会用到的端口列表")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器端口")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主机端口，默认值和容器端口相同")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" UDP "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认TCP")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境变量")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器资源相关配置")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器资源限制")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于docker run --cpu-shares")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readinessProbe")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 就绪探针")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /index.html\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存活探针")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" OnFailure "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Never "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认Always")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Always: 不论Pod因何种原因被终止，kubelet都会重启Pod")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# OnFailure: 只有Pod以非0代码退出时重启")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过key-value的形式指定node")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用name-secretKey的形式指定")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostNetwork")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false ")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true表示使用宿主机网络而不是docker网桥")]),t._v("\n")])]),t._v(" "),v("h5",{attrs:{id:"rs资源清单"}},[t._v("RS资源清单")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3 ")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 副本数量")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择器，用来发现Pods")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod模板")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod的标签")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod详细信息")]),t._v("\n")])]),t._v(" "),v("h5",{attrs:{id:"dp资源清单"}},[t._v("DP资源清单")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod标签")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod详情")]),t._v("\n")])]),t._v(" "),v("h5",{attrs:{id:"ds资源清单"}},[t._v("DS资源清单")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DaemonSet\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod标签")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod详情")]),t._v("\n")])]),t._v(" "),v("h5",{attrs:{id:"job资源清单"}},[t._v("Job资源清单")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Job\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),v("h5",{attrs:{id:"opaque-secret"}},[t._v("Opaque Secret")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Secret\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Opaque\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("data")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value after base64 encode\n")])]),t._v(" "),v("h5",{attrs:{id:"pv卷"}},[t._v("PV卷")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolume\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("capacity")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMode")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Filesystem\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteOnce\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeReclaimPolicy")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Recycle\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" slow\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountOptions")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hard\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" nfsvers=4.1\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nfs")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /xxx\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 123.123.123.123\n")])]),t._v(" "),v("h5",{attrs:{id:"statefulset"}},[t._v("StatefulSet")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 无头服务(Headless Service)，没有ClusterIP")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" StatefulSet\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选中上文的无头服务")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod template")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeClaimTemplates")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# PVC")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n          "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteOnce\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nfs\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n")])]),t._v(" "),v("h4",{attrs:{id:"role"}},[t._v("Role")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是ClusterRole，不需要指定namespace")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" readonly\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "" 表示core API group')]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" get\n      "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" watch\n      "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" list\n")])]),t._v(" "),v("h4",{attrs:{id:"rolebinding"}},[t._v("RoleBinding")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1beta1\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RoleBinding\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是ClusterRoleBinding，不需要指定namespace")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n")])]),t._v(" "),v("h4",{attrs:{id:"k8s的安装方式"}},[t._v("k8s的安装方式")]),t._v(" "),v("ul",[v("li",[t._v("Minikube\n"),v("ul",[v("li",[t._v("单节点微型k8s，适用于学习")])])]),t._v(" "),v("li",[t._v("二进制安装\n"),v("ul",[v("li",[t._v("超级复杂")]),t._v(" "),v("li",[t._v("推荐新手学习基础原理时使用")]),t._v(" "),v("li",[t._v("生产环境如果需要极致性能，可以考虑二进制安装")])])]),t._v(" "),v("li",[t._v("使用kubeadmin安装\n"),v("ul",[v("li",[t._v("一个跑在k8s里的k8s安装工具")]),t._v(" "),v("li",[t._v("相对简单，推荐使用")])])])]),t._v(" "),v("h3",{attrs:{id:"网络通信"}},[t._v("网络通信")]),t._v(" "),v("h4",{attrs:{id:"组件互通与网络层级"}},[t._v("组件互通与网络层级")]),t._v(" "),v("p",[t._v("k8s假定所有Pod都在一个可以直接联通的扁平网络空间中（所有Pod可以通过IP互相访问）。谷歌云里面的网络模型默认就是扁平的，如果在其他云平台或自建，就需要先满足网络打通的问题")]),t._v(" "),v("p",[t._v("Flannel是一个针对k8s设计的网络规划服务，可以使不同Node上的所有Docker容器都有全集群唯一的虚拟IP地址，并在这些IP地址直接创建一个覆盖网络(Overlay Network)，通过这个网络可以把数据包原封不动地传递到目标容器内。Flannel使用etcd保存状态，通过修改主机路由表实现功能。可以使用"),v("code",{pre:!0},[t._v("route")]),t._v("命令查看本机路由")]),t._v(" "),v("p",[v("strong",[t._v("安装Flannel之后记得修改iptables规则")]),t._v("，修改docker的SNAT，这样pod之间的通信使用的才是pod的IP地址而不是宿主机的地址")]),t._v(" "),v("p",[v("img",{attrs:{src:n(371),alt:"4-3"}})]),t._v(" "),v("p",[t._v("组件互通：")]),t._v(" "),v("ul",[v("li",[t._v("同一个Pod内的多个容器\n"),v("ul",[v("li",[t._v("使用localhost访问，即"),v("code",{pre:!0},[t._v("lo")]),t._v("网卡")]),t._v(" "),v("li",[t._v("基于pause容器实现")])])]),t._v(" "),v("li",[t._v("不同Pod之间\n"),v("ul",[v("li",[t._v("使用Overlay Network")])])]),t._v(" "),v("li",[t._v("Pod与Service之间的通信\n"),v("ul",[v("li",[t._v("使用Node的iptables规则或ipvs")])])]),t._v(" "),v("li",[t._v("Pod向公网发请求\n"),v("ul",[v("li",[t._v("利用物理机实现NAT")])])])]),t._v(" "),v("p",[t._v("网络层级：")]),t._v(" "),v("ul",[v("li",[t._v("Service网络\n"),v("ul",[v("li",[t._v("基于iptables或ipvs互通")])])]),t._v(" "),v("li",[t._v("Pod网络\n"),v("ul",[v("li",[t._v("基于Flannel实现所有Pod互通")])])]),t._v(" "),v("li",[t._v("Node网络\n"),v("ul",[v("li",[t._v("真实物理网络")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:n(372),alt:"4-4"}})]),t._v(" "),v("h4",{attrs:{id:"cni插件"}},[t._v("CNI插件")]),t._v(" "),v("p",[t._v("k8s只是设计了上述扁平网络模型，实际的实现由网络插件完成")]),t._v(" "),v("p",[t._v("常见CNI网络插件：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Flannel")]),t._v(" "),v("ul",[v("li",[t._v("host-gateway模型（常用）\n"),v("ul",[v("li",[t._v("静态路由")]),t._v(" "),v("li",[t._v("适用于桥接的网络（可以直接寻址）")]),t._v(" "),v("li",[t._v("基于内核转发，效率最高")])])]),t._v(" "),v("li",[t._v("VxLAN模型\n"),v("ul",[v("li",[t._v("虚拟网卡隧道")]),t._v(" "),v("li",[t._v("适用于使用路由器的网络（即主机在不同的网络，需要路由器作为网关而不能直接寻址）")]),t._v(" "),v("li",[t._v("需要封包解包，效率较低")]),t._v(" "),v("li",[t._v("如果开启"),v("code",{pre:!0},[t._v("Directrouting")]),t._v("，则如果flannel发现主机位于相同网络时仍然使用host-gw模型")])])])])]),t._v(" "),v("li",[t._v("Calico\n"),v("ul",[v("li",[t._v("支持网络限制")]),t._v(" "),v("li",[t._v("支持BGP，在大型网络环境会比较好管理")])])]),t._v(" "),v("li",[t._v("Canal\n"),v("ul",[v("li",[t._v("是Calico和Flannel的结合")]),t._v(" "),v("li",[t._v("在Flannel的基础上添加了Calico的网络限制")]),t._v(" "),v("li",[t._v("然而实际生产中，为了满足审计，可能还是一个业务一个集群")])])]),t._v(" "),v("li",[t._v("Contiv\n"),v("ul",[v("li",[t._v("Cisco开源的")])])]),t._v(" "),v("li",[t._v("OpenContrail\n"),v("ul",[v("li",[t._v("Juniper开源的")])])]),t._v(" "),v("li",[t._v("NSX-T\n"),v("ul",[v("li",[t._v("Vmware开源的")])])]),t._v(" "),v("li",[t._v("Kube-router\n"),v("ul",[v("li",[t._v("CNCF开源的")])])])]),t._v(" "),v("h4",{attrs:{id:"服务发现"}},[t._v("服务发现")]),t._v(" "),v("p",[t._v("以"),v("code",{pre:!0},[t._v("Cluster IP")]),t._v("的形式创建的Service会有一个固定的IP作为服务的接入点。Service根据标签选择器进行服务的发现")]),t._v(" "),v("p",[t._v("如果要使用域名而不是IP进行服务访问，需要使用DNS服务发现插件：")]),t._v(" "),v("ul",[v("li",[t._v("kube-dns（淘汰）")]),t._v(" "),v("li",[t._v("coredns\n"),v("ul",[v("li",[t._v("仅负责维护"),v("code",{pre:!0},[t._v("服务名->集群网络IP")]),t._v("的映射")]),t._v(" "),v("li",[t._v("部署在k8s集群中")]),t._v(" "),v("li",[t._v("使用FQDN进行访问："),v("code",{pre:!0},[t._v("<service>.<namespace>.svc.cluster.local")])]),t._v(" "),v("li",[t._v("如果从集群内进行访问，可以简写FQDN："),v("code",{pre:!0},[t._v("<service>.<namespace>")]),t._v(" "),v("ul",[v("li",[t._v("因为集群内的DNS在"),v("code",{pre:!0},[t._v("/etc/resolv.conf")]),t._v("里面配置了"),v("code",{pre:!0},[t._v("search")]),t._v("字段。可能需要手动配置此字段")])])])])])]),t._v(" "),v("h4",{attrs:{id:"服务暴露"}},[t._v("服务暴露")]),t._v(" "),v("p",[t._v("使服务可以从k8s集群外访问，有以下两个方式：")]),t._v(" "),v("ul",[v("li",[t._v("使用NodePort类型的Service（不推荐）\n"),v("ul",[v("li",[t._v("基于kube-proxy实现端口映射")]),t._v(" "),v("li",[t._v("缺点：无法使用kube-proxy的ipvs模型，只能使用iptables模型")])])]),t._v(" "),v("li",[t._v("使用Ingress资源\n"),v("ul",[v("li",[t._v("只能暴露7层应用")]),t._v(" "),v("li",[t._v("基于域名+路径，把请求转发到指定的Service\n"),v("ul",[v("li",[t._v("类似于nginx")])])]),t._v(" "),v("li",[t._v("Ingress控制器的实现软件\n"),v("ul",[v("li",[t._v("Ingress-nginx")]),t._v(" "),v("li",[t._v("HAProxy")]),t._v(" "),v("li",[v("strong",[t._v("Traefik")]),t._v(" "),v("ul",[v("li",[t._v("部署在k8s中")])])])])])])])]),t._v(" "),v("h3",{attrs:{id:"存储"}},[t._v("存储")]),t._v(" "),v("ul",[v("li",[t._v("ConfigMap\n"),v("ul",[v("li",[t._v("存储配置（类似于配置文件注册中心）")]),t._v(" "),v("li",[t._v("可以向容器注入配置信息，在Pod资源清单里面可以引用ConfigMap中的值。且ConfigMap的值被修改时Pod中的配置（比如环境变量）会自动修改（但是Pod中的软件不一定能自动检测到环境变量的修改从而应用修改，可能需要手动触发）")]),t._v(" "),v("li",[t._v("创建方式\n"),v("ul",[v("li",[t._v("指定目录/文件："),v("code",{pre:!0},[t._v("kubectl create configmap <name> --from-file=<path>")]),t._v(" "),v("ul",[v("li",[t._v("键为文件名，值为文件的内容")]),t._v(" "),v("li",[t._v("如果指定目录，则会把目录下面的文件都作为配置信息")]),t._v(" "),v("li",[t._v("可以多次使用"),v("code",{pre:!0},[t._v("--from-file")]),t._v("参数指定多个文件/目录")])])]),t._v(" "),v("li",[t._v("字面值："),v("code",{pre:!0},[t._v("kubectl create configmap <name> --from-literal=<key>=<value>")])])])]),t._v(" "),v("li",[t._v("查看配置："),v("code",{pre:!0},[t._v("kubectl get configmaps <name> -o yaml")])])])]),t._v(" "),v("li",[t._v("Secret\n"),v("ul",[v("li",[t._v("存储加密信息")]),t._v(" "),v("li",[t._v("三种类型\n"),v("ul",[v("li",[t._v("服务账户Service Account(SA)\n"),v("ul",[v("li",[t._v("用来访问k8s API")]),t._v(" "),v("li",[t._v("自动挂载到Pod的"),v("code",{pre:!0},[t._v("/run/secrets/kubernetes.io/serviceaccount")]),t._v("目录下")])])]),t._v(" "),v("li",[t._v("Opaque\n"),v("ul",[v("li",[t._v("k-v格式，value被base64编码，用来保存密码/密钥（可解密）")]),t._v(" "),v("li",[t._v("使用方式\n"),v("ul",[v("li",[t._v("挂载为卷\n"),v("ul",[v("li",[t._v("key为卷下面的文件名，文件内容为解密后的value")])])]),t._v(" "),v("li",[t._v("环境变量")])])])])]),t._v(" "),v("li",[t._v("kubernetes.io/dockerconfigjson\n"),v("ul",[v("li",[t._v("存储docker registry的认证信息")]),t._v(" "),v("li",[t._v("创建："),v("code",{pre:!0},[t._v("kubectl create secret docker-registry <name> --docker-server=xxx --docker-username=xxx --docker-password=xxx --docker-email=xxx")])]),t._v(" "),v("li",[t._v("在Pod资源清单中使用"),v("code",{pre:!0},[t._v("imagePullSecrets")]),t._v("引用此secret")])])])])])])]),t._v(" "),v("li",[t._v("Volume\n"),v("ul",[v("li",[t._v("是"),v("code",{pre:!0},[t._v("pause")]),t._v("容器的存储卷。给Pod中的其他容器提供共享存储卷")]),t._v(" "),v("li",[t._v("支持很多卷的类型，包括各种云厂商的卷")]),t._v(" "),v("li",[t._v("常用类型：\n"),v("ul",[v("li",[t._v("emptyDir\n"),v("ul",[v("li",[t._v("空目录")]),t._v(" "),v("li",[t._v("仅用来在所有容器之间共享存储")]),t._v(" "),v("li",[t._v("Pod被删除时，emptyDir中的数据被永久删除")]),t._v(" "),v("li",[t._v("容器的崩溃可能不会导致pod被删除，所以emptyDir在容器崩溃时是安全的")]),t._v(" "),v("li",[t._v("用途\n"),v("ul",[v("li",[t._v("暂存空间，比如基于磁盘的合并排序")]),t._v(" "),v("li",[t._v("保存长时间计算负载的检查点，以便崩溃恢复")]),t._v(" "),v("li",[t._v("web服务器静态文件的统一存储")])])])])]),t._v(" "),v("li",[t._v("hostPath\n"),v("ul",[v("li",[t._v("把宿主机的目录挂载到Pod")]),t._v(" "),v("li",[t._v("用途：\n"),v("ul",[v("li",[t._v("宿主机和容器通信。宿主机可以访问到容器里面的内容")])])]),t._v(" "),v("li",[t._v("可以显式指定目标类型从而进行类型检查（如果不指定，则不进行类型检查）\n"),v("ul",[v("li",[t._v("Directory")]),t._v(" "),v("li",[t._v("DirectoryOrCreate")]),t._v(" "),v("li",[t._v("File")]),t._v(" "),v("li",[t._v("FileOrCreate")]),t._v(" "),v("li",[t._v("Socket")]),t._v(" "),v("li",[t._v("CharDevice")]),t._v(" "),v("li",[t._v("BlockDevice")])])])])])])])])]),t._v(" "),v("li",[t._v("Persistent Volume(PV/PVC)\n"),v("ul",[v("li",[t._v("PV\n"),v("ul",[v("li",[t._v("持久卷，是一种资源类型")]),t._v(" "),v("li",[t._v("生命周期独立于Pod")]),t._v(" "),v("li",[t._v("类别\n"),v("ul",[v("li",[t._v("静态PV\n"),v("ul",[v("li",[t._v("Pod申请PV资源时就可以直接使用的存储")])])]),t._v(" "),v("li",[t._v("动态PV\n"),v("ul",[v("li",[t._v("Pod提出申请后，集群尝试动态地创建PV卷")])])])])]),t._v(" "),v("li",[t._v("访问模式\n"),v("ul",[v("li",[t._v("ReadWriteOnce(RWO)\n"),v("ul",[v("li",[t._v("只能被单个节点以读写模式挂载")])])]),t._v(" "),v("li",[t._v("ReadOnlyMany(ROX)\n"),v("ul",[v("li",[t._v("可以被多个节点只读挂载")])])]),t._v(" "),v("li",[t._v("ReadWriteMany(RWX)\n"),v("ul",[v("li",[t._v("可以被多个节点以读写模式挂载")])])])])]),t._v(" "),v("li",[t._v("回收策略\n"),v("ul",[v("li",[t._v("Retain\n"),v("ul",[v("li",[t._v("不能被再次利用，等待管理员手动释放")])])]),t._v(" "),v("li",[t._v("Recycle\n"),v("ul",[v("li",[t._v("删除卷中的所有文件，可以被再次利用")])])]),t._v(" "),v("li",[t._v("Delete\n"),v("ul",[v("li",[t._v("删除对应的云存储资源")])])])])]),t._v(" "),v("li",[t._v("状态\n"),v("ul",[v("li",[t._v("Available\n"),v("ul",[v("li",[t._v("空闲，可以被绑定")])])]),t._v(" "),v("li",[t._v("Bound\n"),v("ul",[v("li",[t._v("已经被Pod绑定")])])]),t._v(" "),v("li",[t._v("Released\n"),v("ul",[v("li",[t._v("已经被释放，正在进行回收，目前仍不可用")])])]),t._v(" "),v("li",[t._v("Failed\n"),v("ul",[v("li",[t._v("自动回收失败")])])])])])])]),t._v(" "),v("li",[t._v("PVC(Persistent Volume Claim)\n"),v("ul",[v("li",[t._v("是对PV资源的请求")]),t._v(" "),v("li",[t._v("一个PVC只能绑定一个PV")]),t._v(" "),v("li",[t._v("申请资源失败时，Pod会处于Pending状态")]),t._v(" "),v("li",[t._v("PVC会选择能够满足需求的最小PV进行绑定")]),t._v(" "),v("li",[t._v("删除Pod不会删除其PVC，手动删除PVC才会释放PV")])])])])])]),t._v(" "),v("h3",{attrs:{id:"kubectl"}},[t._v("kubectl")]),t._v(" "),v("p",[t._v("以下是常用命令：")]),t._v(" "),v("ul",[v("li",[v("code",{pre:!0},[t._v("kubectl get")]),t._v(" "),v("ul",[v("li",[t._v("命令\n"),v("ul",[v("li",[v("code",{pre:!0},[t._v("all")]),t._v("所有资源")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("pod")]),t._v("查看pod列表")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("pods -l key=value")]),t._v("根据标签查看pods")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("node")]),t._v("查看节点列表")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("svc")]),t._v("/"),v("code",{pre:!0},[t._v("service")]),t._v("查看服务")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("ns")]),t._v("/"),v("code",{pre:!0},[t._v("namespaces")]),t._v("查看命名空间")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("rs")]),t._v("查看replica set")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("deploy")]),t._v("/"),v("code",{pre:!0},[t._v("deployments")])]),t._v(" "),v("li",[t._v("其他资源类型也可以类似地查看")])])]),t._v(" "),v("li",[t._v("选项\n"),v("ul",[v("li",[v("code",{pre:!0},[t._v("-n <namespace>")]),t._v("指定命名空间。默认"),v("code",{pre:!0},[t._v("default")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("--all-namespaces")]),t._v("所有资源")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("-o wide")]),t._v("输出更多信息。比如可以查看Pod在哪个node上，以及它的IP")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("-o yaml|json")]),t._v("输出指定格式资源清单")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("--show-labels")]),t._v("查看标签")])])])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl create")]),t._v("创建资源\n"),v("ul",[v("li",[v("code",{pre:!0},[t._v("ns <ns-name>")]),t._v("创建名称空间")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("-f <file>")]),t._v("根据资源清单创建")])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl describe")]),t._v("查看详情")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl delete")]),t._v(" "),v("ul",[v("li",[v("code",{pre:!0},[t._v("-f <file>")]),t._v("删除YAML文件对应的资源（但是并不会删除文件）")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("--force")]),t._v("强制删除")]),t._v(" "),v("li",[t._v("或者直接指定资源名称，比如"),v("code",{pre:!0},[t._v("kubectl delete ns app")])]),t._v(" "),v("li",[t._v("删除Pod的时候，如果设置了一些带有重启规则的控制器，则Pod会被重新拉起。所以此命令可以用来重启Pod")])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl exec -it <pod-name> <command>")]),t._v("执行命令\n"),v("ul",[v("li",[t._v("类似于"),v("code",{pre:!0},[t._v("docker exec")])])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v('kubectl run <container-name> --image=xxx [--env="key=value"] [--port=80] [--replicas=3] [--dry-run=false] [--overrides=inline-json] [--command] -- [COMMAND] [args]')]),t._v(" "),v("ul",[v("li",[t._v("不使用资源清单，而是直接创建容器。不建议使用")])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl expose")]),t._v("用来创建服务\n"),v("ul",[v("li",[t._v("例："),v("code",{pre:!0},[t._v("kubectl expose deployment <dp-name> --port=80")])]),t._v(" "),v("li",[t._v("创建之后会得到一个固定的私有IP。即使Pod的IP变了，或者添加了新的Pod，这个服务IP也不会变，是唯一向外暴露的接口")]),t._v(" "),v("li",[t._v("Service会根据标签选择器实现服务发现")]),t._v(" "),v("li",[t._v("基于ipvs，是4层代理。相当于一个负载均衡器")])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl scale")]),t._v("扩展\n"),v("ul",[v("li",[t._v("例："),v("code",{pre:!0},[t._v("kubectl scale deploy <dp-name> --replicas=2")])])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl explain")]),t._v("解释资源清单中的fields的含义\n"),v("ul",[v("li",[t._v("例："),v("code",{pre:!0},[t._v("kubectl explain service.metadata")])])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl apply -f <file>")]),t._v("应用某个资源清单的修改。也可以用来创建资源")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl edit")]),t._v("在线修改资源清单，保存后立即生效")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl set image deployment/<dp-name> <image>")]),t._v("滚动更新DP（会创建新的RS）")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl rollout undo deployment/<dp-name>")]),t._v("回滚\n"),v("ul",[v("li",[v("code",{pre:!0},[t._v("kubectl rollout status deploy/<dp-name>")]),t._v("查看回滚状态")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl rollout history deploy/<dp-name>")]),t._v("查看历史版本")]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl rollout pause deploy/<dp-name>")]),t._v("暂停更新")])])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("kubectl autoscale deployment <dp-name> --min=1 --max=10 --cpu-percent=80")]),t._v("设置DP自动扩展")])]),t._v(" "),v("h3",{attrs:{id:"权限"}},[t._v("权限")]),t._v(" "),v("p",[t._v("主要是保护API Server的安全")]),t._v(" "),v("h4",{attrs:{id:"三个步骤"}},[t._v("三个步骤")]),t._v(" "),v("ul",[v("li",[t._v("认证(Authentication)，保证通信是可信的\n"),v("ul",[v("li",[t._v("认证方式\n"),v("ul",[v("li",[t._v("HTTP Token")]),t._v(" "),v("li",[t._v("HTTP Base Auth\n"),v("ul",[v("li",[t._v("用户名+密码")])])]),t._v(" "),v("li",[t._v("HTTPS证书双向认证（最安全，建议使用）")])])]),t._v(" "),v("li",[t._v("Controller Manager, Scheduler和API Server在同一台机器，可以使用HTTP直接访问（k8s通常默认配置"),v("code",{pre:!0},[t._v("--insecure-bind-address=127.0.0.1")]),t._v("）。而kubelet, kube-proxy, kubectl等组件就需要HTTPS双向认证\n"),v("ul",[v("li",[t._v("kubelet首次访问API Server的时候使用Token认证，通过后Controller Manager会为kubelet颁发一个证书，以后访问都是证书认证")])])]),t._v(" "),v("li",[t._v("认证信息通常保存在"),v("code",{pre:!0},[t._v("~/.kube/config")]),t._v("文件中")])])]),t._v(" "),v("li",[t._v("鉴权(Authorization)，确认权限\n"),v("ul",[v("li",[t._v("支持的授权策略（启动API Server时使用"),v("code",{pre:!0},[t._v("--authorization-mode")]),t._v("设置）\n"),v("ul",[v("li",[t._v("AlwaysDeny\n"),v("ul",[v("li",[t._v("拒绝一切请求。仅用于测试")])])]),t._v(" "),v("li",[t._v("AlwaysAllow\n"),v("ul",[v("li",[t._v("允许所有")])])]),t._v(" "),v("li",[t._v("ABAC(Attribute Based Access Control)（淘汰）\n"),v("ul",[v("li",[t._v("基于属性的控制")]),t._v(" "),v("li",[t._v("如果用户有某个属性则可以控制哪些资源")]),t._v(" "),v("li",[t._v("修改之后需要重启API Server")])])]),t._v(" "),v("li",[t._v("Webhook\n"),v("ul",[v("li",[t._v("调用外部REST服务进行授权")])])]),t._v(" "),v("li",[t._v("RBAC(Role Based Access Control)（默认）\n"),v("ul",[v("li",[t._v("基于角色的访问控制")]),t._v(" "),v("li",[t._v("修改之后不需要重启API Server，直接生效")])])])])])])]),t._v(" "),v("li",[t._v("准入控制(Admission Control)\n"),v("ul",[v("li",[t._v("通过添加插件(Admission Controller)实现额外的准入控制")]),t._v(" "),v("li",[t._v("常见插件\n"),v("ul",[v("li",[t._v("NamespaceLifecycle\n"),v("ul",[v("li",[t._v("防止在不存在的namespace上面创建对象")]),t._v(" "),v("li",[t._v("防止删除系统预置的namespace")]),t._v(" "),v("li",[t._v("删除namespace的时候删除其下所有资源")])])]),t._v(" "),v("li",[t._v("LimitRanger\n"),v("ul",[v("li",[t._v("确保请求的资源不会超过所在namespace的LimitRange限制（可以在名称空间级别限制资源）")])])]),t._v(" "),v("li",[t._v("ServiceAccount\n"),v("ul",[v("li",[t._v("自动化添加SA")])])]),t._v(" "),v("li",[t._v("ResourceQuota\n"),v("ul",[v("li",[t._v("确保请求的资源不会超过资源的ResourceQuota的限制")])])])])])])])]),t._v(" "),v("h4",{attrs:{id:"rbac"}},[t._v("RBAC")]),t._v(" "),v("ul",[v("li",[t._v("资源的权限(Rule)\n"),v("ul",[v("li",[t._v("rule的组成\n"),v("ul",[v("li",[t._v("verb\n"),v("ul",[v("li",[t._v("get")]),t._v(" "),v("li",[t._v("write")]),t._v(" "),v("li",[t._v("update")]),t._v(" "),v("li",[t._v("list")]),t._v(" "),v("li",[t._v("watch")]),t._v(" "),v("li",[t._v("…")])])]),t._v(" "),v("li",[t._v("resource\n"),v("ul",[v("li",[t._v("集群中的资源使用RESTful的路径来表示，比如"),v("code",{pre:!0},[t._v("/api/v1/namespaces/{{namespace}}/pods/{{name}}/log")]),t._v("。在rule里面resource只需要指定"),v("code",{pre:!0},[t._v("{{namespace}}")]),t._v("后面的资源即可，比如"),v("code",{pre:!0},[t._v("pods/log")])]),t._v(" "),v("li",[t._v("如果授权到某个路径"),v("code",{pre:!0},[t._v("/xxx/yyy")]),t._v("则其子资源都可以被访问")])])]),t._v(" "),v("li",[t._v("apiGroups")])])])])]),t._v(" "),v("li",[t._v("账户\n"),v("ul",[v("li",[t._v("用户账户\n"),v("ul",[v("li",[t._v("比如kubelet")])])]),t._v(" "),v("li",[t._v("服务账户(SA)\n"),v("ul",[v("li",[t._v("所有Pod都必须有一个SA。默认为"),v("code",{pre:!0},[t._v("default")])]),t._v(" "),v("li",[t._v("因为Pod会频繁地创建与销毁，使用SA会比签发/销毁证书效率高")])])])])]),t._v(" "),v("li",[t._v("角色\n"),v("ul",[v("li",[t._v("Role\n"),v("ul",[v("li",[t._v("只能作用在特定的名称空间，是名称空间级别的资源")])])]),t._v(" "),v("li",[t._v("ClusterRole\n"),v("ul",[v("li",[t._v("作用于整个集群")]),t._v(" "),v("li",[t._v("集群有很多默认的ClusterRole")])])])])]),t._v(" "),v("li",[t._v("subject\n"),v("ul",[v("li",[t._v("绑定的目标，可以是User/Group/SA")])])]),t._v(" "),v("li",[t._v("绑定\n"),v("ul",[v("li",[t._v("RoleBinding\n"),v("ul",[v("li",[t._v("把Role绑定给subject")]),t._v(" "),v("li",[t._v("也可以把ClusterRole绑定给subject，让他只能在某个名称空间执行操作")])])]),t._v(" "),v("li",[t._v("ClusterRoleBinding\n"),v("ul",[v("li",[t._v("把ClusterRole绑定给subject")]),t._v(" "),v("li",[t._v("不能用来绑定Role")])])])])])]),t._v(" "),v("p",[t._v("账户通过绑定角色获得角色的权限。不能直接给账户授予权限")]),t._v(" "),v("p",[t._v("【角色】和【绑定】也是资源，可以使用资源清单创建")]),t._v(" "),v("p",[t._v("k8s自身并不提供用户管理。API Server会把客户端证书的"),v("code",{pre:!0},[t._v("CN")]),t._v("字段作为User，把"),v("code",{pre:!0},[t._v("names.O")]),t._v("字段作为Group")]),t._v(" "),v("blockquote",[v("p",[t._v("可以设置一个ClusterRole，拥有所有namespace的只读权限。然后使用RoleBinding（注意不是ClusterRoleBinding）把它绑定给用户并指定名称空间，这样就可以使用一个Role使不同的用户访问不同的名称空间")])]),t._v(" "),v("h3",{attrs:{id:"调度"}},[t._v("调度")]),t._v(" "),v("p",[t._v("scheduler是k8s的调度器，作为单独的程序运行在master node，和api server交互")]),t._v(" "),v("h4",{attrs:{id:"调度过程"}},[t._v("调度过程")]),t._v(" "),v("ol",[v("li",[t._v("过滤掉不满足条件的节点(predicate，预选)")]),t._v(" "),v("li",[t._v("对节点进行优先级排序(priority，优选)")]),t._v(" "),v("li",[t._v("选择优先级最高的节点。如果没有满足条件的节点，则pod处于pending阶段")])]),t._v(" "),v("h4",{attrs:{id:"预选调度算法"}},[t._v("预选调度算法")]),t._v(" "),v("ul",[v("li",[t._v("PodFitsResources\n"),v("ul",[v("li",[t._v("节点剩余资源大于Pod请求的资源")])])]),t._v(" "),v("li",[t._v("PodFitsHost\n"),v("ul",[v("li",[t._v("如果pod指定了NodeName，则检查节点名是否和NodeName匹配")])])]),t._v(" "),v("li",[t._v("PodFitsHostPorts\n"),v("ul",[v("li",[t._v("节点已经使用的port是否和pod申请的port冲突")])])]),t._v(" "),v("li",[t._v("PodSelectorMatches\n"),v("ul",[v("li",[t._v("过滤掉和pod指定的label不匹配的节点")])])]),t._v(" "),v("li",[t._v("NoDiskConflict\n"),v("ul",[v("li",[t._v("节点上已经被mount的volume是否和pod请求mount的volume冲突，除非这些pod都是只读mount")])])])]),t._v(" "),v("h4",{attrs:{id:"优先级"}},[t._v("优先级")]),t._v(" "),v("ul",[v("li",[t._v("LeastRequestPriority\n"),v("ul",[v("li",[t._v("计算CPU和内存的空闲程度。Pod被优先调度到空闲资源多的节点")])])]),t._v(" "),v("li",[t._v("BalancedResourceAllocation\n"),v("ul",[v("li",[t._v("CPU的利用率和内存利用率越接近（节点资源的利用比较平衡），优先级越高")]),t._v(" "),v("li",[t._v("可以和LeastRequestPriority结合使用")])])]),t._v(" "),v("li",[t._v("ImageLocalityPriority\n"),v("ul",[v("li",[t._v("节点上面已经有pod所需的镜像，且这些镜像的大小越大，节点优先级越高")]),t._v(" "),v("li",[t._v("减少镜像下载时间")])])])]),t._v(" "),v("h4",{attrs:{id:"亲和性"}},[t._v("亲和性")]),t._v(" "),v("p",[t._v("亲和性策略举例：")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod template")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("affinity")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeAffinity")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 节点亲和性")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoreDuringExecution")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬策略")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelectorTerms")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubernetes.io/hostname\n              "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NotIn\n              "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoreDuringExecution")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 软策略")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weight")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1 ")]),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 策略可以有多个，每个可以有权重")]),t._v("\n          "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preference")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchExpressions")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n                "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" In\n                "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" xxx\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAffinity")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod亲和性")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoreDuringExecution")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬策略")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoreDuringExecution")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 软策略")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podAntiAffinity")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod反亲和性")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requiredDuringSchedulingIgnoreDuringExecution")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 硬策略")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preferredDuringSchedulingIgnoreDuringExecution")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 软策略")]),t._v("\n")])]),t._v(" "),v("h4",{attrs:{id:"污点"}},[t._v("污点")]),t._v(" "),v("ul",[v("li",[t._v("Node可以设置污点来标记此Node不适合启动Pods")]),t._v(" "),v("li",[t._v("使用kubectl\n"),v("ul",[v("li",[t._v("给Node设置污点："),v("code",{pre:!0},[t._v("kubectl taint nodes <name> <key>=<value>:<effect>")])]),t._v(" "),v("li",[t._v("删除污点："),v("code",{pre:!0},[t._v("kubectl taint nodes <name> <key>:<effect>-")])])])]),t._v(" "),v("li",[t._v("支持的effect\n"),v("ul",[v("li",[t._v("NoSchedule\n"),v("ul",[v("li",[t._v("k8s不会把Pod调度到有这个污点的Node上")]),t._v(" "),v("li",[t._v("master节点默认就有这个污点")])])]),t._v(" "),v("li",[t._v("PreferNoSchedule\n"),v("ul",[v("li",[t._v("k8s尽量不把Pod调度到有这个污点的Node上")])])]),t._v(" "),v("li",[t._v("NoExecute\n"),v("ul",[v("li",[t._v("k8s不会把Pod调度到有这个污点的Node上，且会把已经在此Node上的Pod驱逐")])])])])])]),t._v(" "),v("h4",{attrs:{id:"容忍污点"}},[t._v("容忍污点")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod template")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不指定key时表示所有key")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("operator")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Equal\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NoSchedule "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不指定effect时表示所有effect")]),t._v("\n      "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerationSeconds")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n        "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 被驱逐时，此Pod仍然可以在当然Node运行的时间")]),t._v("\n")])]),t._v(" "),v("h4",{attrs:{id:"固定节点"}},[t._v("固定节点")]),t._v(" "),v("pre",{staticClass:"language-yaml"},[v("code",{pre:!0,attrs:{class:"language-yaml"}},[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod template")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过节点名选择")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nodeSelector: {} # 通过选择器选择")]),t._v("\n")])]),t._v(" "),v("h3",{attrs:{id:"helm"}},[t._v("Helm")]),t._v(" "),v("ul",[v("li",[t._v("用来管理服务的安装。类似于centos的yum")]),t._v(" "),v("li",[t._v("可以根据参数动态生成YAML资源清单")]),t._v(" "),v("li",[t._v("概念\n"),v("ul",[v("li",[t._v("chart\n"),v("ul",[v("li",[t._v("是应用的信息集合，包括资源清单、参数定义、依赖关系、文档")])])]),t._v(" "),v("li",[t._v("release\n"),v("ul",[v("li",[t._v("是chart的运行实例，表示正在运行的应用")]),t._v(" "),v("li",[t._v("chart被安装到k8s集群中后会生成一个release")]),t._v(" "),v("li",[t._v("chart可以被多次安装，每次都生成一个release")])])])])]),t._v(" "),v("li",[t._v("组件\n"),v("ul",[v("li",[t._v("Client客户端\n"),v("ul",[v("li",[t._v("使用gRPC协议和Tiller交互")])])]),t._v(" "),v("li",[t._v("Tiller服务端\n"),v("ul",[v("li",[t._v("运行在k8s master node")]),t._v(" "),v("li",[t._v("处理客户端的请求，和API Server交互")])])])])])]),t._v(" "),v("p",[t._v("自定义Chart的工作流：")]),t._v(" "),v("ol",[v("li",[t._v("创建文件夹\n"),v("ol",[v("li",[v("code",{pre:!0},[t._v("mkdir test & cd test")])])])]),t._v(" "),v("li",[t._v("创建自描述文件，里面必须有"),v("code",{pre:!0},[t._v("name")]),t._v("和"),v("code",{pre:!0},[t._v("version")]),t._v(" "),v("ol",[v("li",[v("code",{pre:!0},[t._v('echo "name: xxx" > Chart.yml')])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v('echo "version: 1.0.0" >> Chart.yml')])])])]),t._v(" "),v("li",[t._v("创建模板文件目录，用来生成资源清单(manifests)\n"),v("ol",[v("li",[v("code",{pre:!0},[t._v("mkdir template")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("echo xxx > template/xxx.yml")])])])]),t._v(" "),v("li",[t._v("安装\n"),v("ol",[v("li",[v("code",{pre:!0},[t._v("helm install .")])])])])])])}]};t.exports={attributes:{title:"Linux Virtualization(Part 4)",description:"Kubernetes",tags:["Container"]},vue:{render:v.render,staticRenderFns:v.staticRenderFns,component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=v.render,this.$options.staticRenderFns=v.staticRenderFns}}}}},369:function(t,e,n){t.exports=n.p+"img/25e1c2d.png"},370:function(t,e,n){t.exports=n.p+"img/4489344.png"},371:function(t,e,n){t.exports=n.p+"img/75579e7.png"},372:function(t,e,n){t.exports=n.p+"img/06f1b9a.png"}}]);